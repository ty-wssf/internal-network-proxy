[
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "boolean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDataSourceProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addHealthCheckProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "copyStateTo",
        "parameterTypes": [
          "com.zaxxer.hikari.HikariConfig"
        ]
      },
      {
        "name": "getCatalog",
        "parameterTypes": []
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDataSource",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceJNDI",
        "parameterTypes": []
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": []
      },
      {
        "name": "getHealthCheckRegistry",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": []
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getMetricRegistry",
        "parameterTypes": []
      },
      {
        "name": "getMetricsTrackerFactory",
        "parameterTypes": []
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPoolName",
        "parameterTypes": []
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getThreadFactory",
        "parameterTypes": []
      },
      {
        "name": "getTransactionIsolation",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": []
      },
      {
        "name": "isAllowPoolSuspension",
        "parameterTypes": []
      },
      {
        "name": "isAutoCommit",
        "parameterTypes": []
      },
      {
        "name": "isIsolateInternalQueries",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterMbeans",
        "parameterTypes": []
      },
      {
        "name": "seal",
        "parameterTypes": []
      },
      {
        "name": "setAllowPoolSuspension",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoCommit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setDataSource",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJNDI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setIsolateInternalQueries",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadOnly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterMbeans",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "java.util.concurrent.ScheduledExecutorService"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadFactory",
        "parameterTypes": [
          "java.util.concurrent.ThreadFactory"
        ]
      },
      {
        "name": "setTransactionIsolation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "com.zaxxer.hikari.HikariConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "close",
        "parameterTypes": []
      },
      {
        "name": "evictConnection",
        "parameterTypes": [
          "java.sql.Connection"
        ]
      },
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getConnection",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getHikariConfigMXBean",
        "parameterTypes": []
      },
      {
        "name": "getHikariPoolMXBean",
        "parameterTypes": []
      },
      {
        "name": "getLogWriter",
        "parameterTypes": []
      },
      {
        "name": "getLoginTimeout",
        "parameterTypes": []
      },
      {
        "name": "getParentLogger",
        "parameterTypes": []
      },
      {
        "name": "isClosed",
        "parameterTypes": []
      },
      {
        "name": "isRunning",
        "parameterTypes": []
      },
      {
        "name": "isWrapperFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setHealthCheckRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLogWriter",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      },
      {
        "name": "setLoginTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricRegistry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMetricsTrackerFactory",
        "parameterTypes": [
          "com.zaxxer.hikari.metrics.MetricsTrackerFactory"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "unwrap",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ],
    "name": "com.zaxxer.hikari.HikariDataSource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_BAD_REQUEST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_FAIL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_FORBIDDEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_NOT_FOUND"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_OK"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_TIMEOUT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "API_STATUS_UNAUTHORIZED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ARG_KEY_PROP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ARG_ORDER_PROP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ATTR_SERVICE_CONTEXT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_ALL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_DELETE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_READ"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "AUTH_FOR_WRITE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_PROP_INCLUDE_JSON_IGNORE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_PROP_INCLUDE_READABLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_PROP_INCLUDE_WRITABLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_SCOPE_PROTOTYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_SCOPE_REQUEST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BEAN_SCOPE_SINGLETON"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_BEAN_CONTAINER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_BEAN_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_BEAN_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONFIG_VALUE_NONE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DELTA_PATH_PREFIX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DIRECTIVE_PROP_META"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "EMPTY_STRING_ARRAY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ENCODED_PARAM_SELECTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_BIZ_FATAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_ERROR_CODE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_MSG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GRAPHQL_EXTENSION_STATUS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ACCESS_TOKEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ACTOR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_APP_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_APP_ZONE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_BIZ_FAIL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_BIZ_KEY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_CLIENT_ADDR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_CONTENT_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_COOKIE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_DEVICE_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_HOST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_LOCALE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_ONE_WAY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_REL_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SELECTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SHARD"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_ACTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_ROUTE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_SVC_TAGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TAGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TASK_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TENANT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TIMEOUT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TIMEZONE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TRACE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_BRANCH_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_BRANCH_NO"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_GROUP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_TXN_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_USER_ID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HEADER_VERSION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HTTP_HEADER_PREFIX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_API_CONTEXT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_AUTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_CACHE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_FLOW_CONTROL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_SINGLE_SESSION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_TCC"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTERCEPTOR_PRIORITY_TRANSACTIONAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_SESSION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_TENANT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_TRACE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MDC_NOP_USER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "META_KEY_TAGS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NO_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_BIZ_OBJ_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_ENTITY_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_FIELD_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_PROP_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_REF_BIZ_OBJ_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PARAM_REF_ENTITY_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_TARGET_HOST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SYS_PARAM_SELECTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TEMP_HEADER_PREFIX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TENANT_PATH_PREFIX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TREE_BEAN_PROP_BODY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TREE_BEAN_PROP_LOC"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TREE_BEAN_PROP_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XML_PROP_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "YES_VALUE"
      }
    ],
    "methods": [],
    "name": "io.nop.api.core.ApiConstants",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "Cache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ContextRoot"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ContextSource"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FieldSelection"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "RequestBean"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ServiceContext"
      }
    ],
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.annotations.biz.BizActionArgKind",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "requireNew",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.annotations.orm.SingleSession",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "propagation",
        "parameterTypes": []
      },
      {
        "name": "txnGroup",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.annotations.txn.Transactional",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getEvalScope",
        "parameterTypes": []
      },
      {
        "name": "getUserContext",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.auth.ISecurityContext",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "copyHeaders",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getHeaders",
        "parameterTypes": []
      },
      {
        "name": "getSelectedHeaders",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ApiMessage",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "build",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBooleanProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getIntProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIntProperty",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSelection",
        "parameterTypes": []
      },
      {
        "name": "getStringProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSelection",
        "parameterTypes": []
      },
      {
        "name": "removeProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ApiRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildError",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "buildSuccess",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "getBizFatal",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getErrors",
        "parameterTypes": []
      },
      {
        "name": "getHttpStatus",
        "parameterTypes": []
      },
      {
        "name": "getMsg",
        "parameterTypes": []
      },
      {
        "name": "getMsgTimeout",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTryResponse",
        "parameterTypes": []
      },
      {
        "name": "isBizSuccess",
        "parameterTypes": []
      },
      {
        "name": "isHttp2XX",
        "parameterTypes": []
      },
      {
        "name": "isHttp3XX",
        "parameterTypes": []
      },
      {
        "name": "isHttp4XX",
        "parameterTypes": []
      },
      {
        "name": "isHttp5XX",
        "parameterTypes": []
      },
      {
        "name": "isOk",
        "parameterTypes": []
      },
      {
        "name": "isWrapper",
        "parameterTypes": []
      },
      {
        "name": "setBizFatal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "setErrors",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setHttpStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMsgTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTryResponse",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setWrapper",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "wrap",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ApiResponse",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "attrs",
        "parameterTypes": []
      },
      {
        "name": "containsLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getLabelByValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getLabels",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOptionByLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOptionByValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOptionCount",
        "parameterTypes": []
      },
      {
        "name": "getOptions",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getValueByLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValueType",
        "parameterTypes": []
      },
      {
        "name": "getValues",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isNormalized",
        "parameterTypes": []
      },
      {
        "name": "isStatic",
        "parameterTypes": []
      },
      {
        "name": "normalize",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNormalized",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOptions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStatic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setValueType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.DictBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getGroup",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.DictOptionBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "removeAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.ExtensibleBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DEFAULT_SELECTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "HIDDEN_SELECTION"
      }
    ],
    "methods": [
      {
        "name": "_flatten",
        "parameterTypes": [
          "java.util.Set",
          "java.lang.String",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "addArgs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addCompositeField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "addDirectives",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addField",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "addHiddenField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "flattenFields",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "fromProp",
        "parameterTypes": [
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "fromProps",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getAllDirectiveCount",
        "parameterTypes": []
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getDirective",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDirectiveArg",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getDirectives",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      },
      {
        "name": "getSourceField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSourceFields",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSourceField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      },
      {
        "name": "isSimpleField",
        "parameterTypes": []
      },
      {
        "name": "makeFields",
        "parameterTypes": []
      },
      {
        "name": "makeSubField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "mergeFields",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "newFieldSelectionBean",
        "parameterTypes": []
      },
      {
        "name": "printTo",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "boolean"
        ]
      },
      {
        "name": "setArg",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDirective",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "setDirectiveArg",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setDirectives",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.FieldSelectionBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BETWEEN_POSTFIX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BETWEEN_PREFIX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DUMMY_TAG_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_EXCLUDE_MAX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_EXCLUDE_MIN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MAX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MAX_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MIN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_MIN_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_OWNER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_VALUE_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_ATTR_VALUE_OWNER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ALWAYS_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ALWAYS_TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_AND"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_CONTAINS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_DATETIME_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_DATE_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ENDS_WITH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_EQ"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_EXPR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_GE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_GT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_ICONTAINS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_BLANK"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_EMPTY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_NULL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_NUMBER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_IS_TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LENGTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LENGTH_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LIKE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_LT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_BETWEEN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_BLANK"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_CONTAINS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_EMPTY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_IN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_NULL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_NUMBER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_NOT_TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_OR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_REGEX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_SQL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_OP_STARTS_WITH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILTER_TAG_NAME"
      }
    ],
    "methods": [],
    "name": "io.nop.api.core.beans.FilterBeanConstants",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getHasNext",
        "parameterTypes": []
      },
      {
        "name": "getHasPrev",
        "parameterTypes": []
      },
      {
        "name": "getItems",
        "parameterTypes": []
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getNextCursor",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getPage",
        "parameterTypes": []
      },
      {
        "name": "getPageCount",
        "parameterTypes": []
      },
      {
        "name": "getPrevCursor",
        "parameterTypes": []
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "setHasNext",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHasPrev",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNextCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setPrevCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.PageBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addChild",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "appendChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "attr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "attrIgnoreNull",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childWithAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "cloneChildren",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "createFromJson",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "fromTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getChildCount",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getContentValue",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": []
      },
      {
        "name": "nodeWithAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "replaceChild",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean",
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setChildren",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setContentValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toJsonObject",
        "parameterTypes": []
      },
      {
        "name": "toJsonObject",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toQueryBean",
        "parameterTypes": []
      },
      {
        "name": "toTreeBean",
        "parameterTypes": []
      },
      {
        "name": "transformChild",
        "parameterTypes": [
          "java.util.function.Predicate",
          "java.util.function.Function",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.TreeBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setChildren",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.TreeResultBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isComputed",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "setComputed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.VarMetaBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONTENT_TYPE_HTML"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONTENT_TYPE_JAVASCRIPT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONTENT_TYPE_JSON"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONTENT_TYPE_OCTET"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONTENT_TYPE_TEXT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CONTENT_TYPE_XML"
      }
    ],
    "methods": [
      {
        "name": "binary",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getContentType",
        "parameterTypes": []
      },
      {
        "name": "getFileName",
        "parameterTypes": []
      },
      {
        "name": "html",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAutoCleanResource",
        "parameterTypes": []
      },
      {
        "name": "js",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "json",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "text",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.WebContentBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getReqId",
        "parameterTypes": []
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setReqId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.CancelRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getEdges",
        "parameterTypes": []
      },
      {
        "name": "getItems",
        "parameterTypes": []
      },
      {
        "name": "getPageInfo",
        "parameterTypes": []
      },
      {
        "name": "getTotal",
        "parameterTypes": []
      },
      {
        "name": "setEdges",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setItems",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPageInfo",
        "parameterTypes": [
          "io.nop.api.core.beans.graphql.GraphQLPageInfo"
        ]
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLConnection",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAfter",
        "parameterTypes": []
      },
      {
        "name": "getBefore",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getFirst",
        "parameterTypes": []
      },
      {
        "name": "getLast",
        "parameterTypes": []
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getOrderBy",
        "parameterTypes": []
      },
      {
        "name": "getQuery",
        "parameterTypes": []
      },
      {
        "name": "setAfter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBefore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setFirst",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLast",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLConnectionInput",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCursor",
        "parameterTypes": []
      },
      {
        "name": "getNode",
        "parameterTypes": []
      },
      {
        "name": "setCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNode",
        "parameterTypes": [
          "io.nop.api.core.beans.graphql.GraphQLNode"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLEdgeBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addLocation",
        "parameterTypes": [
          "io.nop.api.core.beans.graphql.GraphQLSourceLocation"
        ]
      },
      {
        "name": "getLocations",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLErrorBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getEndCursor",
        "parameterTypes": []
      },
      {
        "name": "getHasNextPage",
        "parameterTypes": []
      },
      {
        "name": "getHasPreviousPage",
        "parameterTypes": []
      },
      {
        "name": "getStartCursor",
        "parameterTypes": []
      },
      {
        "name": "setEndCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasNextPage",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHasPreviousPage",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStartCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLPageInfo",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getExtensions",
        "parameterTypes": []
      },
      {
        "name": "getOperationId",
        "parameterTypes": []
      },
      {
        "name": "getOperationName",
        "parameterTypes": []
      },
      {
        "name": "getQuery",
        "parameterTypes": []
      },
      {
        "name": "getVariable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVariables",
        "parameterTypes": []
      },
      {
        "name": "setExtensions",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setOperationId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOperationName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVariables",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addError",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "getBizFatal",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": []
      },
      {
        "name": "getErrors",
        "parameterTypes": []
      },
      {
        "name": "getExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExtensions",
        "parameterTypes": []
      },
      {
        "name": "getMsg",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "hasError",
        "parameterTypes": []
      },
      {
        "name": "setBizFatal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setExtension",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setExtensions",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "toApiResponse",
        "parameterTypes": []
      },
      {
        "name": "toErrorBean",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLResponseBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getColumn",
        "parameterTypes": []
      },
      {
        "name": "getLine",
        "parameterTypes": []
      },
      {
        "name": "setColumn",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLine",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.graphql.GraphQLSourceLocation",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwner",
        "parameterTypes": []
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.GroupFieldBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "fromTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getOwner",
        "parameterTypes": []
      },
      {
        "name": "isAsc",
        "parameterTypes": []
      },
      {
        "name": "isDesc",
        "parameterTypes": []
      },
      {
        "name": "reverse",
        "parameterTypes": []
      },
      {
        "name": "setDesc",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "shouldNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.beans.query.OrderFieldBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryFieldBean"
        ]
      },
      {
        "name": "addFields",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "addFilters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "addOrderByNode",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "addOrderField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "addOrderField",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "fields",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryFieldBean",
          "[Lio.nop.api.core.beans.query.QueryFieldBean;"
        ]
      },
      {
        "name": "getCursor",
        "parameterTypes": []
      },
      {
        "name": "getDimFields",
        "parameterTypes": []
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getGroupBy",
        "parameterTypes": []
      },
      {
        "name": "getGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJoins",
        "parameterTypes": []
      },
      {
        "name": "getLeftJoinProps",
        "parameterTypes": []
      },
      {
        "name": "getLimit",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOffset",
        "parameterTypes": []
      },
      {
        "name": "getOrderBy",
        "parameterTypes": []
      },
      {
        "name": "getOrderField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPropFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSourceName",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "hasGroupBy",
        "parameterTypes": []
      },
      {
        "name": "hasGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasOrderBy",
        "parameterTypes": []
      },
      {
        "name": "hasOrderField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDisableLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "isFindPrev",
        "parameterTypes": []
      },
      {
        "name": "limit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "offset",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setCursor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDimFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisableLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setFindPrev",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGroupBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJoins",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLeftJoinProps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOffset",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSourceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "timeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "transformFilter",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.QueryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "aggFunc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "alias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "cloneExceptOwner",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "count",
        "parameterTypes": []
      },
      {
        "name": "forField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAggFunc",
        "parameterTypes": []
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getAliasOrName",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwner",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "mainField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "max",
        "parameterTypes": []
      },
      {
        "name": "min",
        "parameterTypes": []
      },
      {
        "name": "setAggFunc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "subField",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.beans.query.QueryFieldBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getDimFields",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getSourceName",
        "parameterTypes": []
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDimFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "setSourceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.query.QuerySourceBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getJoinId",
        "parameterTypes": []
      },
      {
        "name": "getLevel",
        "parameterTypes": []
      },
      {
        "name": "getParentId",
        "parameterTypes": []
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJoinId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLevel",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setParentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.beans.std.StdTreeEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "activeProfile",
        "parameterTypes": []
      },
      {
        "name": "appLocale",
        "parameterTypes": []
      },
      {
        "name": "appName",
        "parameterTypes": []
      },
      {
        "name": "appTimezone",
        "parameterTypes": []
      },
      {
        "name": "appVersion",
        "parameterTypes": []
      },
      {
        "name": "defaultLocale",
        "parameterTypes": []
      },
      {
        "name": "getConfigProvider",
        "parameterTypes": []
      },
      {
        "name": "hostId",
        "parameterTypes": []
      },
      {
        "name": "isDebugMode",
        "parameterTypes": []
      },
      {
        "name": "registerConfigProvider",
        "parameterTypes": [
          "io.nop.api.core.config.IConfigProvider"
        ]
      },
      {
        "name": "var",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "var",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "varRef",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.lang.Class",
          "java.lang.Object"
        ]
      },
      {
        "name": "withOverride",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "io.nop.api.core.config.IConfigReference",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.config.AppConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "fillInStackTrace",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.exceptions.NopEvalException",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "s_seq"
      }
    ],
    "methods": [
      {
        "name": "adapt",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "addDetail",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "addXplStack",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addXplStack",
        "parameterTypes": [
          "java.lang.Throwable",
          "java.lang.Object"
        ]
      },
      {
        "name": "appendInfo",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "args",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "bizFatal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "cause",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "description",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forWrap",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDetails",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": []
      },
      {
        "name": "getErrorLocation",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "getParam",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getParams",
        "parameterTypes": []
      },
      {
        "name": "getParamsString",
        "parameterTypes": []
      },
      {
        "name": "getSeq",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getXplStack",
        "parameterTypes": []
      },
      {
        "name": "isAlreadyTraced",
        "parameterTypes": []
      },
      {
        "name": "isBizFatal",
        "parameterTypes": []
      },
      {
        "name": "isWrapException",
        "parameterTypes": []
      },
      {
        "name": "loc",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "logIfNotTraced",
        "parameterTypes": [
          "org.slf4j.Logger",
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "normalizeValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "param",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "params",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setAlreadyTraced",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "source",
        "parameterTypes": [
          "io.nop.api.core.util.ISourceLocationGetter"
        ]
      },
      {
        "name": "status",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "throwIfFatal",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "when",
        "parameterTypes": [
          "boolean",
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "wrap",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      }
    ],
    "name": "io.nop.api.core.exceptions.NopException",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.json.IJsonString",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.resource.IResourceReference",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "getSysDate",
        "parameterTypes": []
      },
      {
        "name": "getSysDateTime",
        "parameterTypes": []
      },
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "isWorkDay",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "nextWorkDay",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      }
    ],
    "name": "io.nop.api.core.time.DefaultSysCalendar",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkArgument",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "checkArgument",
        "parameterTypes": [
          "boolean",
          "java.lang.String"
        ]
      },
      {
        "name": "checkArgument",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkArgument",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkEquals",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkEquals",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "checkFromTo",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "checkOffsetLength",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "checkPositionIndex",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "checkPositionIndex",
        "parameterTypes": [
          "int",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "checkState",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "checkState",
        "parameterTypes": [
          "boolean",
          "java.lang.String"
        ]
      },
      {
        "name": "checkState",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkState",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "nonNegativeInt",
        "parameterTypes": [
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "nonNegativeLong",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      },
      {
        "name": "notEmpty",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "notNull",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "positiveInt",
        "parameterTypes": [
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "positiveLong",
        "parameterTypes": [
          "long",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.api.core.util.Guard",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendOnCancel",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getCancelReason",
        "parameterTypes": []
      },
      {
        "name": "isCancelled",
        "parameterTypes": []
      },
      {
        "name": "removeOnCancel",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      }
    ],
    "name": "io.nop.api.core.util.ICancelToken",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CANCEL_REASON_KILL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CANCEL_REASON_STOP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CANCEL_REASON_TIMEOUT"
      }
    ],
    "methods": [
      {
        "name": "cancel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCancelReason",
        "parameterTypes": []
      },
      {
        "name": "isCancelled",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.ICancellable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.ICloneable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.api.core.util.IComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "deepClone",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.IDeepCloneable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.IFreezable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLocation",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.ISourceLocationGetter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      }
    ],
    "name": "io.nop.api.core.util.ISourceLocationSetter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "get_id",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.api.core.util.IWithIdentifier",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DELEGATE_SCOPE_ALL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JWT_CLAIMS_REALM_ACCESS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JWT_CLAIMS_ROLES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JWT_CLAIMS_SID"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JWT_CLAIMS_USERNAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOGIN_TYPE_EMAIL_PASSWORD"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOGIN_TYPE_PHONE_PASSWORD"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOGIN_TYPE_SSO"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOGIN_TYPE_USERNAME_PASSWORD"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOGOUT_TYPE_EXPIRE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOGOUT_TYPE_KILL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOGOUT_TYPE_MANUAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOGOUT_TYPE_NONE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOGOUT_TYPE_RELOGIN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOGOUT_TYPE_SSO_CALLBACK"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "RESOURCE_STATUS_ACTIVE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "RESOURCE_STATUS_DISABLED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "RESOURCE_TYPE_FUNCTION_POINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "RESOURCE_TYPE_SUB_MENU"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "RESOURCE_TYPE_TOP_MENU"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SITE_MAIN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "USER_GENDER_DEFAULT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "USER_STATUS_ABANDONED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "USER_STATUS_ACTIVE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "USER_STATUS_DISABLED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "USER_STATUS_SUSPENDED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "USER_TYPE_DEFAULT"
      }
    ],
    "methods": [],
    "name": "io.nop.auth.api.AuthApiConstants",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAccessCode",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getClientSecret",
        "parameterTypes": []
      },
      {
        "name": "setAccessCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.AccessCodeRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAccessToken",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getClientSecret",
        "parameterTypes": []
      },
      {
        "name": "setAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.AccessTokenRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCertId",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getDeviceId",
        "parameterTypes": []
      },
      {
        "name": "getDeviceType",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLoginType",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryRoleId",
        "parameterTypes": []
      },
      {
        "name": "getPrincipalId",
        "parameterTypes": []
      },
      {
        "name": "getPrincipalSecret",
        "parameterTypes": []
      },
      {
        "name": "getSsoToken",
        "parameterTypes": []
      },
      {
        "name": "getTimeZone",
        "parameterTypes": []
      },
      {
        "name": "getVerifyCode",
        "parameterTypes": []
      },
      {
        "name": "getVerifySecret",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isRememberMe",
        "parameterTypes": []
      },
      {
        "name": "isSignUp",
        "parameterTypes": []
      },
      {
        "name": "setCertId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeviceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeviceType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginType",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPrimaryRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrincipalId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrincipalSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRememberMe",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSignUp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSsoToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVerifySecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.LoginRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAccessToken",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getExpiresIn",
        "parameterTypes": []
      },
      {
        "name": "getRefreshExpiresIn",
        "parameterTypes": []
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": []
      },
      {
        "name": "getScope",
        "parameterTypes": []
      },
      {
        "name": "getSessionState",
        "parameterTypes": []
      },
      {
        "name": "getTokenType",
        "parameterTypes": []
      },
      {
        "name": "getUserInfo",
        "parameterTypes": []
      },
      {
        "name": "setAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExpiresIn",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setRefreshExpiresIn",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setRefreshToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionState",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTokenType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserInfo",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginUserInfo"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.LoginResult",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getAvatar",
        "parameterTypes": []
      },
      {
        "name": "getDeptId",
        "parameterTypes": []
      },
      {
        "name": "getDeptName",
        "parameterTypes": []
      },
      {
        "name": "getHomePath",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getNickName",
        "parameterTypes": []
      },
      {
        "name": "getOpenId",
        "parameterTypes": []
      },
      {
        "name": "getRoleInfos",
        "parameterTypes": []
      },
      {
        "name": "getTenantId",
        "parameterTypes": []
      },
      {
        "name": "getTimeZone",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "setAvatar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeptName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHomePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNickName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpenId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleInfos",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTenantId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.LoginUserInfo",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAccessToken",
        "parameterTypes": []
      },
      {
        "name": "setAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.LogoutRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getClientSecret",
        "parameterTypes": []
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": []
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.RefreshTokenRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getPrimary",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getRoleName",
        "parameterTypes": []
      },
      {
        "name": "setPrimary",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.api.messages.RoleInfo",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addResource",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "deepCloneResources",
        "parameterTypes": []
      },
      {
        "name": "getConfigVersion",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getResources",
        "parameterTypes": []
      },
      {
        "name": "isSupportDebug",
        "parameterTypes": []
      },
      {
        "name": "removeFunctionPoints",
        "parameterTypes": []
      },
      {
        "name": "removeInactive",
        "parameterTypes": []
      },
      {
        "name": "setConfigVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setResources",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSupportDebug",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "sortResources",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.api.messages.SiteMapBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addChild",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "fixStatus",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": []
      },
      {
        "name": "getDepends",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getIcon",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getMeta",
        "parameterTypes": []
      },
      {
        "name": "getOrderNo",
        "parameterTypes": []
      },
      {
        "name": "getPermissions",
        "parameterTypes": []
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getResourceType",
        "parameterTypes": []
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getRoutePath",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTarget",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "isActive",
        "parameterTypes": []
      },
      {
        "name": "isAuthCascadeUp",
        "parameterTypes": []
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      },
      {
        "name": "isKeepAlive",
        "parameterTypes": []
      },
      {
        "name": "isMenu",
        "parameterTypes": []
      },
      {
        "name": "isNoAuth",
        "parameterTypes": []
      },
      {
        "name": "removeFunctionPoints",
        "parameterTypes": []
      },
      {
        "name": "removeInactive",
        "parameterTypes": []
      },
      {
        "name": "setAuthCascadeUp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setChildren",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDepends",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIcon",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setMeta",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setNoAuth",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOrderNo",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPermissions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setResourceType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setRoutePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "sortChildren",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.api.messages.SiteResourceBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAuthCookie",
        "parameterTypes": []
      },
      {
        "name": "getAuthPaths",
        "parameterTypes": []
      },
      {
        "name": "getLoginUrl",
        "parameterTypes": []
      },
      {
        "name": "getLogoutUrl",
        "parameterTypes": []
      },
      {
        "name": "getOauthCallbackPath",
        "parameterTypes": []
      },
      {
        "name": "getPublicPaths",
        "parameterTypes": []
      },
      {
        "name": "getRememberMeCookie",
        "parameterTypes": []
      },
      {
        "name": "getServicePaths",
        "parameterTypes": []
      },
      {
        "name": "isDefaultPublic",
        "parameterTypes": []
      },
      {
        "name": "isPublicPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isRememberMeEnabled",
        "parameterTypes": []
      },
      {
        "name": "isServicePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isServicePublic",
        "parameterTypes": []
      },
      {
        "name": "setAuthCookie",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAuthPaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultPublic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLoginUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogoutUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOauthCallbackPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublicPaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRememberMeCookie",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRememberMeEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setServicePaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setServicePublic",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.auth.core.filter.AuthFilterConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "addCookie",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "checkLogoutUrl",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "filterAsync",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "getAuthToken",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "getAuthTokenFromCookie",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "getAuthTokenFromHeader",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "io.nop.auth.core.login.AuthToken",
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "handlePublicPath",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "handleUserContext",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.http.api.server.IHttpServerContext",
          "java.util.function.Supplier",
          "io.nop.auth.core.login.AuthToken"
        ]
      },
      {
        "name": "hasOAuthCode",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "initUserContext",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "isAjaxRequest",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "isNeedRefresh",
        "parameterTypes": [
          "io.nop.auth.core.login.AuthToken"
        ]
      },
      {
        "name": "loginWithOAuthCode",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "newSysUserContext",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "order",
        "parameterTypes": []
      },
      {
        "name": "parseAuthToken",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "processOAuthCode",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "boolean",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "responseNotLogin",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "boolean"
        ]
      },
      {
        "name": "responseNotLogin",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "boolean",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setConfig",
        "parameterTypes": [
          "io.nop.auth.core.filter.AuthFilterConfig"
        ]
      },
      {
        "name": "setLoginService",
        "parameterTypes": [
          "io.nop.auth.core.login.ILoginService"
        ]
      },
      {
        "name": "writeJsonResponse",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.filter.AuthHttpServerFilter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateAccessCode",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "long"
        ]
      },
      {
        "name": "generateAccessToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "long"
        ]
      },
      {
        "name": "generateRefreshToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "long"
        ]
      },
      {
        "name": "getAlgorithm",
        "parameterTypes": []
      },
      {
        "name": "getEncKey",
        "parameterTypes": []
      },
      {
        "name": "getSignKey",
        "parameterTypes": []
      },
      {
        "name": "parseAuthToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAlgorithm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEncKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.jwt.JwtAuthTokenProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "loginSessionStore"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userContextCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userContextHook"
      }
    ],
    "methods": [
      {
        "name": "doGetUserContext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "doLogout",
        "parameterTypes": [
          "int",
          "io.nop.auth.core.login.SessionInfo"
        ]
      },
      {
        "name": "flushUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "getLoginUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRoleInfos",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "getSessionInfoForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "io.nop.auth.core.login.AuthToken",
          "java.util.Map"
        ]
      },
      {
        "name": "getUserInfo",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "isReturnUserId",
        "parameterTypes": []
      },
      {
        "name": "killLoginAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnUserId",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.AbstractLoginService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "config"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "loginFailCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userContextCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userSessionCache"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "verifyCodeCache"
      }
    ],
    "methods": [
      {
        "name": "buildVerifyCacheKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "removeUserContextAsync",
        "parameterTypes": [
          "io.nop.auth.core.login.SessionInfo"
        ]
      },
      {
        "name": "resetLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resetLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "setLoginFailCountForIp",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setLoginFailCountForUser",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "setUserContextConfig",
        "parameterTypes": [
          "io.nop.auth.core.login.UserContextConfig"
        ]
      },
      {
        "name": "setVerifyCode",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.AbstractUserContextCache",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "flushUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "generateVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "io.nop.auth.core.login.AuthToken",
          "java.util.Map"
        ]
      },
      {
        "name": "getUserInfo",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "killLoginAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loginAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest",
          "java.util.Map"
        ]
      },
      {
        "name": "logoutAsync",
        "parameterTypes": [
          "int",
          "io.nop.auth.api.messages.LogoutRequest"
        ]
      },
      {
        "name": "parseAuthToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refreshToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.auth.core.login.AuthToken"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.ILoginService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.core.login.LocalUserContextCache",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "generateId",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.core.login.RandomSessionIdGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLoginFailTimeout",
        "parameterTypes": []
      },
      {
        "name": "getMaxLoginUserCount",
        "parameterTypes": []
      },
      {
        "name": "getSessionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVerifyCodeTimeout",
        "parameterTypes": []
      },
      {
        "name": "getVerifyKey",
        "parameterTypes": []
      },
      {
        "name": "setLoginFailTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxLoginUserCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSessionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setVerifyCodeTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setVerifyKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.UserContextConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearDirty",
        "parameterTypes": []
      },
      {
        "name": "dirty",
        "parameterTypes": []
      },
      {
        "name": "getAccessToken",
        "parameterTypes": []
      },
      {
        "name": "getDeptId",
        "parameterTypes": []
      },
      {
        "name": "getDeptName",
        "parameterTypes": []
      },
      {
        "name": "getLastAccessTime",
        "parameterTypes": []
      },
      {
        "name": "getLocale",
        "parameterTypes": []
      },
      {
        "name": "getLoginType",
        "parameterTypes": []
      },
      {
        "name": "getNickName",
        "parameterTypes": []
      },
      {
        "name": "getOpenId",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryRole",
        "parameterTypes": []
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": []
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getSessionId",
        "parameterTypes": []
      },
      {
        "name": "getTenantId",
        "parameterTypes": []
      },
      {
        "name": "getTimeZone",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "isUserInAnyRole",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "isUserInRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "markDirty",
        "parameterTypes": []
      },
      {
        "name": "removeRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeptName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastAccessTime",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginType",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNickName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpenId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrimaryRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTenantId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.login.UserContextImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.core.model.ActionAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "sort",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.core.model.DataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFilter",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "sort",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.core.model.ObjDataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.auth.core.model.RoleDataAuthModel"
        ]
      },
      {
        "name": "mergeChecker",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "mergeFilter",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXNodeGenerator"
        ]
      }
    ],
    "name": "io.nop.auth.core.model.RoleDataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRole",
        "parameterTypes": [
          "io.nop.auth.core.model.AuthRoleModel"
        ]
      },
      {
        "name": "addSite",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteMapBean"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.auth.core.model.ActionAuthModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getSite",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSites",
        "parameterTypes": []
      },
      {
        "name": "hasRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRoles",
        "parameterTypes": []
      },
      {
        "name": "hasSite",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSites",
        "parameterTypes": []
      },
      {
        "name": "keySet_roles",
        "parameterTypes": []
      },
      {
        "name": "keySet_sites",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSites",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.auth.core.model._gen._ActionAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addObj",
        "parameterTypes": [
          "io.nop.auth.core.model.ObjDataAuthModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.auth.core.model.DataAuthModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getObj",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getObjs",
        "parameterTypes": []
      },
      {
        "name": "hasObj",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasObjs",
        "parameterTypes": []
      },
      {
        "name": "keySet_objs",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setObjs",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.auth.core.model._gen._DataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRoleAuth",
        "parameterTypes": [
          "io.nop.auth.core.model.RoleDataAuthModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.auth.core.model.ObjDataAuthModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRoleAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRoleAuths",
        "parameterTypes": []
      },
      {
        "name": "hasRoleAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRoleAuths",
        "parameterTypes": []
      },
      {
        "name": "keySet_roleAuths",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleAuths",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.auth.core.model._gen._ObjDataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.auth.core.model.RoleDataAuthModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCheck",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getPriority",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCheck",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXNodeGenerator"
        ]
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.model._gen._RoleDataAuthModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateSalt",
        "parameterTypes": []
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.BCryptPasswordEncoder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateSalt",
        "parameterTypes": []
      },
      {
        "name": "getFirstEncoder",
        "parameterTypes": []
      },
      {
        "name": "getSecondEncoder",
        "parameterTypes": []
      },
      {
        "name": "isUseSecondSalt",
        "parameterTypes": []
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setFirstEncoder",
        "parameterTypes": [
          "io.nop.auth.core.password.IPasswordEncoder"
        ]
      },
      {
        "name": "setSecondEncoder",
        "parameterTypes": [
          "io.nop.auth.core.password.IPasswordEncoder"
        ]
      },
      {
        "name": "setUseSecondSalt",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.CompositePasswordEncoder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowedPassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getDigitCount",
        "parameterTypes": []
      },
      {
        "name": "getLowerCaseCount",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getSpecialCharCount",
        "parameterTypes": []
      },
      {
        "name": "getUpperCaseCount",
        "parameterTypes": []
      },
      {
        "name": "isNotUserName",
        "parameterTypes": []
      },
      {
        "name": "setDigitCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setLowerCaseCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinLength",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNotUserName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSpecialCharCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUpperCaseCount",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.DefaultPasswordPolicy",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "encodePassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "generateSalt",
        "parameterTypes": []
      },
      {
        "name": "passwordMatches",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.core.password.SHA256PasswordEncoder",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "canDelegate",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getDelegateOwnerIds",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "requireUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      }
    ],
    "name": "io.nop.auth.dao.delegate.DaoUserDelegateService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthDept",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthExtLogin",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthGroup",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthGroupDept",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthGroupUser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthOpLog",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthPosition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getRoot",
        "parameterTypes": []
      },
      {
        "name": "isTopMenu",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthRoleDataAuth",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthRoleResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthSession",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthSite",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.dao.entity.NopAuthTenant",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getRoles",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthUser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthUserRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "isValid",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity.NopAuthUserSubstitution",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deptName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deptType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_email"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_managerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderNum"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_phone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_children"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptUsers"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_email"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_groupMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_manager"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_managerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderNum"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_phone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDeptId",
        "parameterTypes": []
      },
      {
        "name": "getDeptName",
        "parameterTypes": []
      },
      {
        "name": "getDeptType",
        "parameterTypes": []
      },
      {
        "name": "getDeptUsers",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getGroupMappings",
        "parameterTypes": []
      },
      {
        "name": "getManager",
        "parameterTypes": []
      },
      {
        "name": "getManagerId",
        "parameterTypes": []
      },
      {
        "name": "getOrderNum",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParentId",
        "parameterTypes": []
      },
      {
        "name": "getPhone",
        "parameterTypes": []
      },
      {
        "name": "getRelatedGroupIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedGroupList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedGroupList_label",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeptName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeptType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setManager",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setManagerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderNum",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthDept"
        ]
      },
      {
        "name": "setParentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedGroupIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthDept",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_credential"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_extId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastLoginIp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastLoginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_verified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_credential"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastLoginIp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastLoginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_verified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getCredential",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getExtId",
        "parameterTypes": []
      },
      {
        "name": "getLastLoginIp",
        "parameterTypes": []
      },
      {
        "name": "getLastLoginTime",
        "parameterTypes": []
      },
      {
        "name": "getLoginType",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVerified",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCredential",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setExtId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastLoginIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastLoginTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setLoginType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVerified",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthExtLogin",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_groupId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ownerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_children"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_groupId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_owner"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ownerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDeptMappings",
        "parameterTypes": []
      },
      {
        "name": "getGroupId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwner",
        "parameterTypes": []
      },
      {
        "name": "getOwnerId",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParentId",
        "parameterTypes": []
      },
      {
        "name": "getRelatedDeptIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedDeptList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedDeptList_label",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserList_label",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUserMappings",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setGroupId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setOwnerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthGroup"
        ]
      },
      {
        "name": "setParentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedDeptIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRelatedUserIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthGroup",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_groupId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_includeChild"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dept"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_group"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_groupId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_includeChild"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDept",
        "parameterTypes": []
      },
      {
        "name": "getDeptId",
        "parameterTypes": []
      },
      {
        "name": "getGroup",
        "parameterTypes": []
      },
      {
        "name": "getGroupId",
        "parameterTypes": []
      },
      {
        "name": "getIncludeChild",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDept",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthDept"
        ]
      },
      {
        "name": "setDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthGroup"
        ]
      },
      {
        "name": "setGroupId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIncludeChild",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthGroupDept",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_groupId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_group"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_groupId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getGroup",
        "parameterTypes": []
      },
      {
        "name": "getGroupId",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthGroup"
        ]
      },
      {
        "name": "setGroupId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthGroupUser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_actionTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_errorCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_opRequest"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_opResponse"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_operation"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resultStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_retMessage"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sessionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_usedTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_actionTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_errorCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_opRequest"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_opResponse"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_operation"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resultStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_retMessage"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_session"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sessionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_usedTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userName"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getActionTime",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": []
      },
      {
        "name": "getLogId",
        "parameterTypes": []
      },
      {
        "name": "getOpRequest",
        "parameterTypes": []
      },
      {
        "name": "getOpResponse",
        "parameterTypes": []
      },
      {
        "name": "getOperation",
        "parameterTypes": []
      },
      {
        "name": "getResultStatus",
        "parameterTypes": []
      },
      {
        "name": "getRetMessage",
        "parameterTypes": []
      },
      {
        "name": "getSession",
        "parameterTypes": []
      },
      {
        "name": "getSessionId",
        "parameterTypes": []
      },
      {
        "name": "getUsedTime",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setActionTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpRequest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpResponse",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOperation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResultStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRetMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSession",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthSession"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsedTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthOpLog",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_positionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_positionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPositionId",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPositionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthPosition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_authCascadeUp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_component"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_depends"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_hidden"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_icon"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isLeaf"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_keepAlive"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_metaConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_noAuth"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_permissions"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_propsConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resourceId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resourceType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_routePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_siteId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_target"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_authCascadeUp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_children"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_component"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_depends"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_hidden"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_icon"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isLeaf"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_keepAlive"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_metaConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_metaConfigComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_noAuth"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_permissions"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_propsConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_propsConfigComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resourceId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resourceType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_routePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_site"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_siteId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_target"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAuthCascadeUp",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDepends",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getHidden",
        "parameterTypes": []
      },
      {
        "name": "getIcon",
        "parameterTypes": []
      },
      {
        "name": "getIsLeaf",
        "parameterTypes": []
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": []
      },
      {
        "name": "getMetaConfig",
        "parameterTypes": []
      },
      {
        "name": "getMetaConfigComponent",
        "parameterTypes": []
      },
      {
        "name": "getNoAuth",
        "parameterTypes": []
      },
      {
        "name": "getOrderNo",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParentId",
        "parameterTypes": []
      },
      {
        "name": "getPermissions",
        "parameterTypes": []
      },
      {
        "name": "getPropsConfig",
        "parameterTypes": []
      },
      {
        "name": "getPropsConfigComponent",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleList_label",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResourceId",
        "parameterTypes": []
      },
      {
        "name": "getResourceType",
        "parameterTypes": []
      },
      {
        "name": "getRoleMappings",
        "parameterTypes": []
      },
      {
        "name": "getRoutePath",
        "parameterTypes": []
      },
      {
        "name": "getSite",
        "parameterTypes": []
      },
      {
        "name": "getSiteId",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTarget",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAuthCascadeUp",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDepends",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setIcon",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsLeaf",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setMetaConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNoAuth",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setOrderNo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthResource"
        ]
      },
      {
        "name": "setParentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPermissions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropsConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedRoleIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoutePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSite",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthSite"
        ]
      },
      {
        "name": "setSiteId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_childRoleIds"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isPrimary"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_childRoleIds"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isPrimary"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resourceMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getChildRoleIds",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getIsPrimary",
        "parameterTypes": []
      },
      {
        "name": "getRelatedResourceIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedResourceList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedResourceList_label",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedUserList_label",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResourceMappings",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getRoleName",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUserMappings",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setChildRoleIds",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setIsPrimary",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setRelatedResourceIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRelatedUserIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObj"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_filterConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_priority"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleIds"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_whenConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObj"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_filterConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_priority"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_role"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleIds"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_whenConfig"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBizObj",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getFilterConfig",
        "parameterTypes": []
      },
      {
        "name": "getPriority",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRole",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getRoleIds",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWhenConfig",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBizObj",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilterConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleIds",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWhenConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthRoleDataAuth",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resourceId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resource"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resourceId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_role"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": []
      },
      {
        "name": "getResourceId",
        "parameterTypes": []
      },
      {
        "name": "getRole",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResource",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthResource"
        ]
      },
      {
        "name": "setResourceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthRoleResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_accessToken"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cacheData"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastAccessTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginAddr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginApp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginDevice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginOs"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_loginType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logoutBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logoutTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logoutType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_refreshToken"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sessionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tenantId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_accessToken"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cacheData"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastAccessTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginAddr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginApp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginDevice"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginOs"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_loginType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logoutBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logoutTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logoutType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_refreshToken"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sessionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tenantId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userName"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAccessToken",
        "parameterTypes": []
      },
      {
        "name": "getCacheData",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getLastAccessTime",
        "parameterTypes": []
      },
      {
        "name": "getLoginAddr",
        "parameterTypes": []
      },
      {
        "name": "getLoginApp",
        "parameterTypes": []
      },
      {
        "name": "getLoginDevice",
        "parameterTypes": []
      },
      {
        "name": "getLoginOs",
        "parameterTypes": []
      },
      {
        "name": "getLoginTime",
        "parameterTypes": []
      },
      {
        "name": "getLoginType",
        "parameterTypes": []
      },
      {
        "name": "getLogoutBy",
        "parameterTypes": []
      },
      {
        "name": "getLogoutTime",
        "parameterTypes": []
      },
      {
        "name": "getLogoutType",
        "parameterTypes": []
      },
      {
        "name": "getRefreshToken",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSessionId",
        "parameterTypes": []
      },
      {
        "name": "getTenantId",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAccessToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCacheData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastAccessTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setLoginAddr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginApp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginDevice",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginOs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoginTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setLoginType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLogoutBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogoutTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setLogoutType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRefreshToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTenantId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthSession",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_configVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_extConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_orderNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_siteId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_configVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extConfigComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_orderNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resources"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_siteId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_url"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getConfigVersion",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExtConfig",
        "parameterTypes": []
      },
      {
        "name": "getExtConfigComponent",
        "parameterTypes": []
      },
      {
        "name": "getOrderNo",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResources",
        "parameterTypes": []
      },
      {
        "name": "getSiteId",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setConfigVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderNo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSiteId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthSite",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_beginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tenantId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_beginTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tenantId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBeginTime",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getEndTime",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTenantId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBeginTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setEndTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTenantId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthTenant",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_avatar"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_birthday"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_changePwdAtLogin"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_clientId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_email"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_emailVerified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_gender"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_idNbr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_idType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_managerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nickName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_openId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_password"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_phone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_phoneVerified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_positionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_pwdUpdateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_realName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_relDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_salt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_telephone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tenantId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_workNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_avatar"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_avatarComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_birthday"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_changePwdAtLogin"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_clientId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dept"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_email"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_emailVerified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_gender"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_groupMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_idNbr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_idType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_manager"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_managerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nickName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_openId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_password"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_phone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_phoneVerified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_position"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_positionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_pwdUpdateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_realName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_relDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_relatedDept"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_salt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_substitutionMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_telephone"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tenantId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_workNo"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAvatar",
        "parameterTypes": []
      },
      {
        "name": "getAvatarComponent",
        "parameterTypes": []
      },
      {
        "name": "getBirthday",
        "parameterTypes": []
      },
      {
        "name": "getChangePwdAtLogin",
        "parameterTypes": []
      },
      {
        "name": "getClientId",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDept",
        "parameterTypes": []
      },
      {
        "name": "getDeptId",
        "parameterTypes": []
      },
      {
        "name": "getEmail",
        "parameterTypes": []
      },
      {
        "name": "getEmailVerified",
        "parameterTypes": []
      },
      {
        "name": "getExpireAt",
        "parameterTypes": []
      },
      {
        "name": "getGender",
        "parameterTypes": []
      },
      {
        "name": "getGroupMappings",
        "parameterTypes": []
      },
      {
        "name": "getIdNbr",
        "parameterTypes": []
      },
      {
        "name": "getIdType",
        "parameterTypes": []
      },
      {
        "name": "getManager",
        "parameterTypes": []
      },
      {
        "name": "getManagerId",
        "parameterTypes": []
      },
      {
        "name": "getNickName",
        "parameterTypes": []
      },
      {
        "name": "getOpenId",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getPhone",
        "parameterTypes": []
      },
      {
        "name": "getPhoneVerified",
        "parameterTypes": []
      },
      {
        "name": "getPosition",
        "parameterTypes": []
      },
      {
        "name": "getPositionId",
        "parameterTypes": []
      },
      {
        "name": "getPwdUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getRealName",
        "parameterTypes": []
      },
      {
        "name": "getRelDeptId",
        "parameterTypes": []
      },
      {
        "name": "getRelatedDept",
        "parameterTypes": []
      },
      {
        "name": "getRelatedGroupIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedGroupList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedGroupList_label",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedRoleList_label",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRoleMappings",
        "parameterTypes": []
      },
      {
        "name": "getSalt",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getSubstitutionMappings",
        "parameterTypes": []
      },
      {
        "name": "getTelephone",
        "parameterTypes": []
      },
      {
        "name": "getTenantId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "getUserType",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWorkNo",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAvatar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBirthday",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setChangePwdAtLogin",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setClientId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDept",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthDept"
        ]
      },
      {
        "name": "setDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmailVerified",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setExpireAt",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setGender",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIdNbr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setManager",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setManagerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNickName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOpenId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPhoneVerified",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setPosition",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthPosition"
        ]
      },
      {
        "name": "setPositionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPwdUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setRealName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedDept",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthDept"
        ]
      },
      {
        "name": "setRelatedGroupIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRelatedRoleIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSalt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTelephone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTenantId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWorkNo",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthUser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_role"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRole",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthUserRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_substitutedUserId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_workScope"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_substitutedUser"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_substitutedUserId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_user"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_workScope"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getEndTime",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getStartTime",
        "parameterTypes": []
      },
      {
        "name": "getSubstitutedUser",
        "parameterTypes": []
      },
      {
        "name": "getSubstitutedUserId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUser",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWorkScope",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEndTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setSubstitutedUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setSubstitutedUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUser",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWorkScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.dao.entity._gen._NopAuthUserSubstitution",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateUserId",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "generateUserOpenId",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      }
    ],
    "name": "io.nop.auth.dao.generator.DefaultUserIdGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "buildLog",
        "parameterTypes": [
          "io.nop.dao.api.IEntityDao",
          "io.nop.api.core.audit.AuditRequest"
        ]
      },
      {
        "name": "doProcess",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "saveAudit",
        "parameterTypes": [
          "io.nop.api.core.audit.AuditRequest"
        ]
      }
    ],
    "name": "io.nop.auth.service.audit.AuditServiceImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.audit.AuditServiceImpl__aop",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "setSiteMapProvider",
        "parameterTypes": [
          "io.nop.auth.service.sitemap.SiteMapProviderImpl"
        ]
      },
      {
        "name": "setSkipCheckForAdmin",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.auth.service.auth.DefaultActionAuthChecker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildWhen",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRoleDataAuth"
        ]
      },
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "loadDataAuthModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newEvalScope",
        "parameterTypes": [
          "io.nop.auth.core.model.ObjDataAuthModel",
          "java.lang.String",
          "java.lang.Object",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      }
    ],
    "name": "io.nop.auth.service.auth.DefaultDataAuthChecker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "loginService"
      }
    ],
    "methods": [
      {
        "name": "buildLoginResult",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "generateVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoginResultAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.AccessCodeRequest",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getLoginUserInfoAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.AccessTokenRequest",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "loginAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "logoutAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.LogoutRequest",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "refreshTokenAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.RefreshTokenRequest",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.auth.service.biz.LoginApiBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "siteMapProvider"
      }
    ],
    "methods": [
      {
        "name": "filterForUser",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteMapBean"
        ]
      },
      {
        "name": "getSiteMap",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.auth.service.biz.SiteMapApiBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthDeptBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthExtLoginBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthGroupBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthGroupDeptBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthGroupUserBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthOpLogBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthPositionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "siteMapProvider"
      }
    ],
    "methods": [
      {
        "name": "afterEntityChange",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthResource",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getMenuTree",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "refreshSiteMapCache",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.auth.service.entity.NopAuthResourceBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRoleUsers",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkAllowAssignRole",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkAllowEdit",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareUpdate",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "removeRoleUsers",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "roleResourceIds",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "roleUsers",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole"
        ]
      },
      {
        "name": "updateRoleResources",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "updateRoleResources",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Collection",
          "io.nop.api.core.beans.TreeBean"
        ]
      }
    ],
    "name": "io.nop.auth.service.entity.NopAuthRoleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthRoleDataAuthBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthRoleResourceBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthSessionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthSiteBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthTenantBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "passwordEncoder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "passwordPolicy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "userIdGenerator"
      }
    ],
    "methods": [
      {
        "name": "changeSelfPassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "disableUser",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "enableUser",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getUserByOpenId",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "resetUserPassword",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.auth.service.entity.NopAuthUserBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthUserRoleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.entity.NopAuthUserSubstitutionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "sessionIdGenerator"
      }
    ],
    "methods": [
      {
        "name": "getActionSessions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSessionInfoForUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadSession",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "logoutSession",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "saveSession",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.auth.api.messages.LoginRequest",
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.auth.service.login.DaoLoginSessionStore",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "getUserContextAsync",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserSessionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeUserContextAsync",
        "parameterTypes": [
          "io.nop.auth.core.login.SessionInfo"
        ]
      },
      {
        "name": "saveUserContextAsync",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      }
    ],
    "name": "io.nop.auth.service.login.DaoUserContextCache",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.auth.service.login.DaoUserContextCache__aop",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "auditService"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "authTokenProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "passwordEncoder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "verifyCodeGenerator"
      }
    ],
    "methods": [
      {
        "name": "addDefaultUser",
        "parameterTypes": []
      },
      {
        "name": "auditLogFail",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.auth.api.messages.LoginRequest",
          "io.nop.auth.dao.entity.NopAuthUser",
          "long",
          "int"
        ]
      },
      {
        "name": "autoLogout",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "buildUserContext",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser",
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "checkVerifyCode",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "generateVerifyCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAllowedLoginMethods",
        "parameterTypes": []
      },
      {
        "name": "getAuthUser",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "getDept",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRoleInfos",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      },
      {
        "name": "getUserByEmail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByOpenId",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByPhone",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUserByUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isReturnDeptName",
        "parameterTypes": []
      },
      {
        "name": "isValid",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "isValidLoginMethod",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "lazyInit",
        "parameterTypes": []
      },
      {
        "name": "loginAsync",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest",
          "java.util.Map"
        ]
      },
      {
        "name": "logoutAsync",
        "parameterTypes": [
          "int",
          "io.nop.auth.api.messages.LogoutRequest"
        ]
      },
      {
        "name": "needCheckPassword",
        "parameterTypes": [
          "io.nop.auth.api.messages.LoginRequest"
        ]
      },
      {
        "name": "parseAuthToken",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refreshToken",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext",
          "io.nop.auth.core.login.AuthToken"
        ]
      },
      {
        "name": "saveSession",
        "parameterTypes": [
          "io.nop.auth.core.login.UserContextImpl",
          "io.nop.auth.api.messages.LoginRequest",
          "java.util.Map"
        ]
      },
      {
        "name": "setAllowedLoginMethods",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setReturnDeptName",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.auth.service.login.LoginServiceImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "siteCache"
      }
    ],
    "methods": [
      {
        "name": "applyAuthFilter",
        "parameterTypes": [
          "java.util.List",
          "java.util.Map",
          "java.util.Set"
        ]
      },
      {
        "name": "containsRole",
        "parameterTypes": [
          "java.util.Set",
          "java.util.Set"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "filterAllowedMenu",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteMapBean",
          "java.lang.String",
          "java.lang.String",
          "java.util.Set"
        ]
      },
      {
        "name": "getAllowedSiteEntries",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.Set"
        ]
      },
      {
        "name": "getResources",
        "parameterTypes": []
      },
      {
        "name": "getRoleResources",
        "parameterTypes": []
      },
      {
        "name": "getRolesWithPermission",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "getSiteMap",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getSites",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isMenu",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean"
        ]
      },
      {
        "name": "isPermitted",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "loadSiteData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadStaticSiteMap",
        "parameterTypes": []
      },
      {
        "name": "normalizeI18n",
        "parameterTypes": [
          "io.nop.auth.api.messages.SiteResourceBean",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeI18n",
        "parameterTypes": [
          "io.nop.auth.service.sitemap.SiteCacheData",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeLabel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "refreshCache",
        "parameterTypes": []
      },
      {
        "name": "setEnableActionAuth",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.auth.service.sitemap.SiteMapProviderImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBizModel",
        "parameterTypes": []
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getObjMeta",
        "parameterTypes": []
      },
      {
        "name": "getObjectDefinition",
        "parameterTypes": []
      },
      {
        "name": "getOperationDefinition",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType",
          "java.lang.String"
        ]
      },
      {
        "name": "getOperationDefinitions",
        "parameterTypes": []
      },
      {
        "name": "getOperationDefinitions",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType"
        ]
      },
      {
        "name": "getStateMachine",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.biz.api.IBizObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "initialize",
        "parameterTypes": [
          "io.nop.graphql.core.biz.IGraphQLBizObject",
          "io.nop.graphql.core.biz.IBizObjectQueryProcessorBuilder",
          "io.nop.graphql.core.schema.TypeRegistry"
        ]
      },
      {
        "name": "order",
        "parameterTypes": []
      },
      {
        "name": "setBizObjectManager",
        "parameterTypes": [
          "io.nop.biz.api.IBizObjectManager"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setDecoratorCollectors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      }
    ],
    "name": "io.nop.biz.crud.CrudBizInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "addManyToManyRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Collection",
          "io.nop.api.core.beans.TreeBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "addManyToManyRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Collection",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "addRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "addRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection",
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "afterEntityChange",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "appendOrderByPk",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean"
        ]
      },
      {
        "name": "asDict",
        "parameterTypes": [
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchDelete",
        "parameterTypes": [
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchGet",
        "parameterTypes": [
          "java.util.Collection",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchGet",
        "parameterTypes": [
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchModify",
        "parameterTypes": [
          "java.util.List",
          "java.util.Map",
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchModify",
        "parameterTypes": [
          "java.util.List",
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "batchUpdate",
        "parameterTypes": [
          "java.util.Set",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "buildEntityDataForSave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "buildEntityDataForUpdate",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkAllowQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "checkChildrenNotExistsWhenDelete",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkDataAuth",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkDataAuthAfterUpdate",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkEntityRefsNotExists",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkMandatoryParam",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkMetaFilter",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.xlang.xmeta.IObjMeta",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "checkUniqueForSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData"
        ]
      },
      {
        "name": "copyForNew",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "countTreeEntity",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean"
        ]
      },
      {
        "name": "dao",
        "parameterTypes": []
      },
      {
        "name": "daoFor",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "daoProvider",
        "parameterTypes": []
      },
      {
        "name": "defaultPrepareDelete",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareUpdate",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "deleteByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "deleteReferences",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "deleted_findPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doCopyForNew",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doDelete",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Set",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doDeleteByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.Set",
          "java.util.function.BiConsumer",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doDeleteByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.util.Set",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doDeleteEntity",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doDeleteMulti",
        "parameterTypes": [
          "java.util.List",
          "java.util.Set",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindCount0",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindFirst",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindFirst0",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindFirstByQueryDirectly",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindList",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindList0",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindListForTree",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindPage0",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindPageForTree",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindTreeEntityList",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindTreeEntityPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doGetEntity",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doSave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doSaveEntity",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doUpdate",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doUpdateByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.Map",
          "java.util.function.BiConsumer",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doUpdateByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.util.Map",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doUpdateEntity",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doUpdateMulti",
        "parameterTypes": [
          "java.util.List",
          "java.util.Map",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findCount",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findList",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findListForTree",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findLogicalDeleted",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.dao.api.IEntityDao",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "findPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findPageForTree",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findRoots",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findTreeEntityList",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "findTreeEntityPage",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCascadeProps",
        "parameterTypes": []
      },
      {
        "name": "getDefaultRefNamesToCheckExists",
        "parameterTypes": []
      },
      {
        "name": "getEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "boolean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getEntityListByTreeEntity",
        "parameterTypes": [
          "java.util.List",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getEntityName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.dao.api.IEntityDao"
        ]
      },
      {
        "name": "getRefEntity",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "io.nop.orm.IOrmEntity",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getThisObj",
        "parameterTypes": []
      },
      {
        "name": "getTreeEntityList",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean"
        ]
      },
      {
        "name": "invokeAction",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "io.nop.core.context.IServiceContext",
          "io.nop.biz.crud.BizInvocation"
        ]
      },
      {
        "name": "manyToMany",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "orm",
        "parameterTypes": []
      },
      {
        "name": "prepareFindFirstQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "prepareFindPageQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "queueCascadeDelete",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.xlang.xmeta.IObjPropMeta",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "recoverDeleted",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "recoverLogicalDeleted",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "removeManyToManyRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Collection",
          "io.nop.api.core.beans.TreeBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "removeManyToManyRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Collection",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "removeRelation",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "removeRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection",
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "requireEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "requireManyToManyPropMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requirePropMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "save_update",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizObjectManager",
        "parameterTypes": [
          "io.nop.biz.api.IBizObjectManager"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQueryTransformer",
        "parameterTypes": [
          "io.nop.biz.crud.IQueryTransformer"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      },
      {
        "name": "tryDelete",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "trySave",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "tryUpdate",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "txn",
        "parameterTypes": []
      },
      {
        "name": "update",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "updateByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "updateManyToManyRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Collection",
          "io.nop.api.core.beans.TreeBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "updateManyToManyRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Collection",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "updateRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "updateRelations",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.util.Collection",
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "updateRelationsEx",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Map",
          "io.nop.api.core.beans.TreeBean",
          "boolean",
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "updateRelationsEx",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.util.Map",
          "java.util.function.Predicate",
          "boolean",
          "java.lang.String",
          "java.util.Collection"
        ]
      }
    ],
    "name": "io.nop.biz.crud.CrudBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "normalize",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      }
    ],
    "name": "io.nop.biz.crud.FilterArgsNormalizer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "normalize",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      }
    ],
    "name": "io.nop.biz.crud.QueryBeanArgsNormalizer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "graphQLEngine"
      }
    ],
    "methods": [
      {
        "name": "beans",
        "parameterTypes": []
      },
      {
        "name": "configVars",
        "parameterTypes": []
      },
      {
        "name": "dependsSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.eval.global.IGlobalVariableDefinition"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel",
          "io.nop.core.reflect.IFunctionArgument"
        ]
      },
      {
        "name": "getFunctionDocKey",
        "parameterTypes": [
          "io.nop.core.reflect.IFunctionModel"
        ]
      },
      {
        "name": "globalFunctions",
        "parameterTypes": []
      },
      {
        "name": "globalVars",
        "parameterTypes": []
      },
      {
        "name": "graphql",
        "parameterTypes": []
      },
      {
        "name": "methods",
        "parameterTypes": [
          "io.nop.biz.dev.beans.GlobalVariableDefBean"
        ]
      },
      {
        "name": "toArgBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel",
          "io.nop.core.reflect.IFunctionArgument"
        ]
      },
      {
        "name": "toArgsBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel"
        ]
      },
      {
        "name": "toFunctionBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.reflect.IFunctionModel"
        ]
      }
    ],
    "name": "io.nop.biz.dev.DevDocBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "graphQLEngine"
      }
    ],
    "methods": [
      {
        "name": "clearComponentCache",
        "parameterTypes": []
      },
      {
        "name": "refreshVirtualFileSystem",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.biz.dev.DevToolBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.ConfigVarBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.FunctionArgBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getDeclaringClass",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "isMacro",
        "parameterTypes": []
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDeclaringClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMacro",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.FunctionDefBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getMethods",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isStaticClass",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStaticClass",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dev.beans.GlobalVariableDefBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDict",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.biz.dict.DictProviderBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "existsDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "setBizObjectManager",
        "parameterTypes": [
          "io.nop.biz.api.IBizObjectManager"
        ]
      },
      {
        "name": "supportDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.dict.ObjDictLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildResponse",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "delayInit",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getBizObjNames",
        "parameterTypes": []
      },
      {
        "name": "getBizObject",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBizOperationDefinitions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFragmentDefinition",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getGraphQLDocument",
        "parameterTypes": []
      },
      {
        "name": "getObjectTypeDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOperationDefinition",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType",
          "java.lang.String"
        ]
      },
      {
        "name": "getOperationDefinitions",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType"
        ]
      },
      {
        "name": "getTypeDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTypeDefinitions",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "removeCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveTypeDefinition",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLType"
        ]
      },
      {
        "name": "setActionDecoratorCollectors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBizInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBizModelBeans",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMakerCheckerProvider",
        "parameterTypes": [
          "io.nop.biz.makerchecker.IMakerCheckerProvider"
        ]
      },
      {
        "name": "setSchemaInitializers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTypeRegistry",
        "parameterTypes": [
          "io.nop.graphql.core.schema.TypeRegistry"
        ]
      },
      {
        "name": "updateDynBizModels",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.biz.impl.BizObjectManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAuth",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "io.nop.api.core.auth.ISecurityContext"
        ]
      },
      {
        "name": "setBizObjectManager",
        "parameterTypes": [
          "io.nop.biz.api.IBizObjectManager"
        ]
      }
    ],
    "name": "io.nop.biz.impl.DefaultBizAuthChecker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.biz.model.BizActionArgModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getExecutable",
        "parameterTypes": []
      },
      {
        "name": "getOperationType",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isReturnMandatory",
        "parameterTypes": []
      },
      {
        "name": "setExecutable",
        "parameterTypes": [
          "io.nop.core.context.action.IServiceAction"
        ]
      }
    ],
    "name": "io.nop.biz.model.BizActionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.biz.model.BizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.biz.model.BizReturnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.biz.model.BizActionArgModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultExpr",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "io.nop.api.core.annotations.biz.BizActionArgKind"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      }
    ],
    "name": "io.nop.biz.model._gen._BizActionArgModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addArg",
        "parameterTypes": [
          "io.nop.biz.model.BizActionArgModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.biz.model.BizActionModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getArgsNormalizer",
        "parameterTypes": []
      },
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getCacheEvicts",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExecutor",
        "parameterTypes": []
      },
      {
        "name": "getMakerChecker",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReturn",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTcc",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getTxn",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "hasArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasArgs",
        "parameterTypes": []
      },
      {
        "name": "isAsync",
        "parameterTypes": []
      },
      {
        "name": "isBizSequential",
        "parameterTypes": []
      },
      {
        "name": "isDisabled",
        "parameterTypes": []
      },
      {
        "name": "isIdempotent",
        "parameterTypes": []
      },
      {
        "name": "isSafe",
        "parameterTypes": []
      },
      {
        "name": "keySet_args",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setArgsNormalizer",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalFunction"
        ]
      },
      {
        "name": "setAsync",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAuth",
        "parameterTypes": [
          "io.nop.api.core.auth.ActionAuthMeta"
        ]
      },
      {
        "name": "setBizSequential",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "io.nop.biz.model.BizCacheModel"
        ]
      },
      {
        "name": "setCacheEvicts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExecutor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdempotent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMakerChecker",
        "parameterTypes": [
          "io.nop.biz.model.BizMakerCheckerModel"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturn",
        "parameterTypes": [
          "io.nop.biz.model.BizReturnModel"
        ]
      },
      {
        "name": "setSafe",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setTcc",
        "parameterTypes": [
          "io.nop.biz.model.BizTccModel"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTxn",
        "parameterTypes": [
          "io.nop.biz.model.BizTxnModel"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.model._gen._BizActionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAction",
        "parameterTypes": [
          "io.nop.biz.model.BizActionModel"
        ]
      },
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "io.nop.biz.model.BizInterceptorModel"
        ]
      },
      {
        "name": "addLoader",
        "parameterTypes": [
          "io.nop.biz.model.BizLoaderModel"
        ]
      },
      {
        "name": "addObserve",
        "parameterTypes": [
          "io.nop.biz.model.BizObserveModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.biz.model.BizModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getActions",
        "parameterTypes": []
      },
      {
        "name": "getDisabledActions",
        "parameterTypes": []
      },
      {
        "name": "getInheritActions",
        "parameterTypes": []
      },
      {
        "name": "getInterceptor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLoaders",
        "parameterTypes": []
      },
      {
        "name": "getMetaDir",
        "parameterTypes": []
      },
      {
        "name": "getObserve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getObserves",
        "parameterTypes": []
      },
      {
        "name": "getStateMachine",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getWfName",
        "parameterTypes": []
      },
      {
        "name": "hasAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasActions",
        "parameterTypes": []
      },
      {
        "name": "hasInterceptor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasInterceptors",
        "parameterTypes": []
      },
      {
        "name": "hasLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasLoaders",
        "parameterTypes": []
      },
      {
        "name": "hasObserve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasObserves",
        "parameterTypes": []
      },
      {
        "name": "keySet_actions",
        "parameterTypes": []
      },
      {
        "name": "keySet_interceptors",
        "parameterTypes": []
      },
      {
        "name": "keySet_loaders",
        "parameterTypes": []
      },
      {
        "name": "keySet_observes",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setActions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisabledActions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setInheritActions",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLoaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMetaDir",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setObserves",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStateMachine",
        "parameterTypes": [
          "io.nop.fsm.model.StateMachineModel"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.biz.model._gen._BizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.biz.model.BizReturnModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      }
    ],
    "name": "io.nop.biz.model._gen._BizReturnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectField"
        ]
      },
      {
        "name": "addMethod",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getMethods",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAllDeclaredConstructors",
        "parameterTypes": []
      },
      {
        "name": "isAllDeclaredMethods",
        "parameterTypes": []
      },
      {
        "name": "isAllPublicConstructors",
        "parameterTypes": []
      },
      {
        "name": "isAllPublicMethods",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "isUnsafeAllocated",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectClass"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectClass"
        ]
      },
      {
        "name": "setAllDeclaredConstructors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllDeclaredMethods",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllPublicConstructors",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllPublicMethods",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnsafeAllocated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "sort",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectClass",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAllowUnsafeAccess",
        "parameterTypes": []
      },
      {
        "name": "isAllowWrite",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectField"
        ]
      },
      {
        "name": "setAllowUnsafeAccess",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowWrite",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectField",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getParameterTypes",
        "parameterTypes": []
      },
      {
        "name": "getSignature",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "io.nop.codegen.graalvm.ReflectMethod"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParameterTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toParamString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.codegen.graalvm.ReflectMethod",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.codegen.initialize.CodeGenAfterInitialization",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.codegen.initialize.CodeGenCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "async",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "expireAfterAccess",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "expireAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "getExpireAfterAccess",
        "parameterTypes": []
      },
      {
        "name": "getExpireAfterWrite",
        "parameterTypes": []
      },
      {
        "name": "getMaximumSize",
        "parameterTypes": []
      },
      {
        "name": "getMaximumWeight",
        "parameterTypes": []
      },
      {
        "name": "getRefreshAfterWrite",
        "parameterTypes": []
      },
      {
        "name": "isAsync",
        "parameterTypes": []
      },
      {
        "name": "isCacheTypeChanged",
        "parameterTypes": [
          "io.nop.commons.cache.CacheConfig"
        ]
      },
      {
        "name": "isDestroyOnRemove",
        "parameterTypes": []
      },
      {
        "name": "isUseMetrics",
        "parameterTypes": []
      },
      {
        "name": "isWeakKeys",
        "parameterTypes": []
      },
      {
        "name": "isWeakValues",
        "parameterTypes": []
      },
      {
        "name": "newConfig",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "newConfig",
        "parameterTypes": [
          "int",
          "long"
        ]
      },
      {
        "name": "setAsync",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDestroyOnRemove",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExpireAfterAccess",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setExpireAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaximumSize",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMaximumWeight",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setRefreshAfterWrite",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUseMetrics",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWeakKeys",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWeakValues",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "useMetrics",
        "parameterTypes": []
      },
      {
        "name": "weakKeys",
        "parameterTypes": []
      },
      {
        "name": "weakValues",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.cache.CacheConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "buildFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearAllCache",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConfig",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.cache.LocalCacheProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAllUnique",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "emptyList",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "freezeList",
        "parameterTypes": []
      },
      {
        "name": "fromList",
        "parameterTypes": [
          "java.util.List",
          "java.util.function.Function"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getByKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeByKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": [
          "java.util.Comparator"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.collections.KeyedList",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "doProcess",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "getProcessingCount",
        "parameterTypes": []
      },
      {
        "name": "getQueue",
        "parameterTypes": []
      },
      {
        "name": "getQueueSize",
        "parameterTypes": []
      },
      {
        "name": "getThreadPoolName",
        "parameterTypes": []
      },
      {
        "name": "isAllProcessed",
        "parameterTypes": []
      },
      {
        "name": "setQueueConfig",
        "parameterTypes": [
          "io.nop.commons.concurrent.batch.BatchQueueConfig"
        ]
      },
      {
        "name": "setSpecialMessageProcessor",
        "parameterTypes": [
          "io.nop.api.core.message.ISpecialMessageProcessor"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.concurrent.batch.AbstractBatchProcessService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAttributes",
        "parameterTypes": []
      },
      {
        "name": "setAttribute",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.commons.lang.IAttributeSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getTagSet",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.lang.ITagSetSupport",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "s_instance"
      }
    ],
    "methods": [
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "print",
        "parameterTypes": []
      },
      {
        "name": "registerInstance",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ],
    "name": "io.nop.commons.metrics.GlobalMeterRegistry",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.service.ILifeCycle",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "beginStop",
        "parameterTypes": []
      },
      {
        "name": "checkIsActive",
        "parameterTypes": []
      },
      {
        "name": "doStart",
        "parameterTypes": []
      },
      {
        "name": "doStop",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "isActive",
        "parameterTypes": []
      },
      {
        "name": "isAllowRestart",
        "parameterTypes": []
      },
      {
        "name": "isStopping",
        "parameterTypes": []
      },
      {
        "name": "setAllowRestart",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.service.LifeCycleSupport",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "lower"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "upper"
      }
    ],
    "methods": [
      {
        "name": "normalize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.text.CharacterCase",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ANY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BIGINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BOOLEAN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BYTE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BYTES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CHAR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATETIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DECIMAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DOUBLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DURATION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FILES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FLOAT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GEOMETRY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LIST"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LONG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NEVER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NULL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "POINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SHORT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "STRING"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIMESTAMP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "UNKNOWN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "VOID"
      }
    ],
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function"
        ]
      },
      {
        "name": "fromIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "fromJavaClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "fromJavaClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fromJsonName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fromStdName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getDemoJsonValue",
        "parameterTypes": []
      },
      {
        "name": "getIndex",
        "parameterTypes": []
      },
      {
        "name": "getJavaClass",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getJsonType",
        "parameterTypes": []
      },
      {
        "name": "getMandatoryJavaClass",
        "parameterTypes": []
      },
      {
        "name": "getMandatoryJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getMaxIndex",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getSimpleClassName",
        "parameterTypes": []
      },
      {
        "name": "guessFromValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isAbstractType",
        "parameterTypes": []
      },
      {
        "name": "isBoolType",
        "parameterTypes": []
      },
      {
        "name": "isGeoType",
        "parameterTypes": []
      },
      {
        "name": "isListType",
        "parameterTypes": []
      },
      {
        "name": "isMapType",
        "parameterTypes": []
      },
      {
        "name": "isNumericType",
        "parameterTypes": []
      },
      {
        "name": "isPrimitiveType",
        "parameterTypes": []
      },
      {
        "name": "isSimpleType",
        "parameterTypes": []
      },
      {
        "name": "isSimpleType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isTemporalType",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toBinaryScalarType",
        "parameterTypes": []
      },
      {
        "name": "toInitializer",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "toLiteral",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.type.StdDataType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ANY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ARRAY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BIGINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "BOOLEAN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CHAR"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DATETIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DECIMAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DOUBLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FLOAT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "GEOMETRY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INTEGER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "JSON"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NUMERIC"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "OTHER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "REAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "SMALLINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TIMESTAMP"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TINYINT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "VARBINARY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "VARCHAR"
      }
    ],
    "methods": [
      {
        "name": "convert",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function"
        ]
      },
      {
        "name": "fromJdbcType",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "fromStdDataTYpe",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "fromStdName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJdbcType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNames",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "isAllowPrecision",
        "parameterTypes": []
      },
      {
        "name": "isAllowScale",
        "parameterTypes": []
      },
      {
        "name": "isCompatibleWith",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.commons.type.StdSqlType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_DOUBLE_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_INTEGER_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_INT_LENGTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_JS_LONG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_JS_LONG_LENGTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_LONG_LENGTH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_LONG_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MIN_DOUBLE_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MIN_INTEGER_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MIN_LONG_VALUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MIN_REAL_TYPE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NaN"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PI"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ZERO_INT"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ZERO_LONG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "primitiveDefaults"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "s_secureRand"
      }
    ],
    "methods": [
      {
        "name": "abs",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "band",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "bneg",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "bor",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "bxor",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "ceil",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "compareBoolean",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "compareInt",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "compareLong",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "compareUnsignedInt",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "compareUnsignedLong",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "compareWithConversion",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "compareWithDouble",
        "parameterTypes": [
          "double",
          "double",
          "double"
        ]
      },
      {
        "name": "cos",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "digitsOfInt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "digitsOfLong",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "divide",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "divideByAndCeilToInt",
        "parameterTypes": [
          "double",
          "int"
        ]
      },
      {
        "name": "divideByAndCeilToLong",
        "parameterTypes": [
          "double",
          "int"
        ]
      },
      {
        "name": "divideByAndRoundToInt",
        "parameterTypes": [
          "double",
          "int"
        ]
      },
      {
        "name": "divideByAndRoundToLong",
        "parameterTypes": [
          "double",
          "int"
        ]
      },
      {
        "name": "divide_int",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "eq",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "exp",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "floor",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "gcd",
        "parameterTypes": [
          "[I"
        ]
      },
      {
        "name": "gcd",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "ge",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "getNumericType",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "getNumericType",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getNumericType",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "getPrimitiveDefaultValue",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "gt",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "isInteger",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "isPowerOfTwoForLong",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "isSafeJsLong",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "isSameReference",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "le",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "log",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "log10",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "log2Int",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "log2Long",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "longToIntWithBitMixing",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "lt",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "max",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "min",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "minus",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "mod",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "modPowerOfTwo",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "modPowerOfTwoForLong",
        "parameterTypes": [
          "long",
          "int"
        ]
      },
      {
        "name": "multiply",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "neg",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "newInteger",
        "parameterTypes": [
          "int",
          "long"
        ]
      },
      {
        "name": "newReal",
        "parameterTypes": [
          "int",
          "double"
        ]
      },
      {
        "name": "nextPowerOfTwo",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "nextPowerOfTwoForLong",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "nonNegativeMod",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "normalizeInt",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "normalizeLong",
        "parameterTypes": [
          "long",
          "int"
        ]
      },
      {
        "name": "pow",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "random",
        "parameterTypes": []
      },
      {
        "name": "randomChoose",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "randomPositiveLong",
        "parameterTypes": []
      },
      {
        "name": "randomSelect",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "randomizeDouble",
        "parameterTypes": [
          "double",
          "double"
        ]
      },
      {
        "name": "randomizeLong",
        "parameterTypes": [
          "long",
          "double"
        ]
      },
      {
        "name": "roundDown",
        "parameterTypes": [
          "java.lang.Object",
          "int"
        ]
      },
      {
        "name": "roundHalfEven",
        "parameterTypes": [
          "java.lang.Object",
          "int"
        ]
      },
      {
        "name": "roundHalfUp",
        "parameterTypes": [
          "java.lang.Object",
          "int"
        ]
      },
      {
        "name": "safeDoubleToFloat",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "safeIntToByte",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "safeIntToChar",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "safeIntToShort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "safeLongToInt",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "safeNextPowerOfTwo",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "secureRandom",
        "parameterTypes": []
      },
      {
        "name": "sin",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "sl",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "sqrt",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "square",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "sr",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "usr",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "xlangEq",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.commons.util.MathHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.config.initialize.ConfigInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "create",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.config.source.IConfigSource"
        ]
      },
      {
        "name": "createConnection",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getRefreshInterval",
        "parameterTypes": []
      },
      {
        "name": "getSelectAllQuery",
        "parameterTypes": []
      },
      {
        "name": "getUserName",
        "parameterTypes": []
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setSelectAllQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valid",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.config.source.jdbc.JdbcConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getEvalScope",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.context.IEvalContext",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAfterComplete",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "addBeforeComplete",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "addErrorBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ErrorBean"
        ]
      },
      {
        "name": "awaitAsyncResults",
        "parameterTypes": []
      },
      {
        "name": "cancelAsyncResults",
        "parameterTypes": []
      },
      {
        "name": "complete",
        "parameterTypes": []
      },
      {
        "name": "completeExceptionally",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "fireBeforeComplete",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "getError",
        "parameterTypes": []
      },
      {
        "name": "getErrorBeans",
        "parameterTypes": []
      },
      {
        "name": "getExecutionId",
        "parameterTypes": []
      },
      {
        "name": "getMostSevereErrorBean",
        "parameterTypes": []
      },
      {
        "name": "hasAsyncResult",
        "parameterTypes": []
      },
      {
        "name": "isDone",
        "parameterTypes": []
      },
      {
        "name": "registerAsyncResult",
        "parameterTypes": [
          "java.util.concurrent.Future"
        ]
      },
      {
        "name": "setError",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "setEvalScope",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope"
        ]
      }
    ],
    "name": "io.nop.core.context.IExecutionContext",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "bindingCtx",
        "parameterTypes": []
      },
      {
        "name": "fromEvalContext",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "getActionAuthChecker",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getContext",
        "parameterTypes": []
      },
      {
        "name": "getDataAuthChecker",
        "parameterTypes": []
      },
      {
        "name": "getParentContext",
        "parameterTypes": []
      },
      {
        "name": "getRequest",
        "parameterTypes": []
      },
      {
        "name": "getRequestHeaders",
        "parameterTypes": []
      },
      {
        "name": "getResponse",
        "parameterTypes": []
      },
      {
        "name": "getResponseHeaders",
        "parameterTypes": []
      },
      {
        "name": "getUserContext",
        "parameterTypes": []
      },
      {
        "name": "newChildContext",
        "parameterTypes": []
      },
      {
        "name": "setActionAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IActionAuthChecker"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "io.nop.commons.cache.ICache"
        ]
      },
      {
        "name": "setContext",
        "parameterTypes": [
          "io.nop.api.core.context.IContext"
        ]
      },
      {
        "name": "setDataAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IDataAuthChecker"
        ]
      },
      {
        "name": "setRequest",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setRequestHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setResponse",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setResponseHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setUserContext",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserContext"
        ]
      }
    ],
    "name": "io.nop.core.context.IServiceContext",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.core.dict.DictModelParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.ReflectionHelperMethodInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.initialize.impl.VirtualFileSystemInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "checkMandatory",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "checkMaxItems",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "checkMinItems",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "copyExtFieldsTo",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "detach",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getASTParent",
        "parameterTypes": []
      },
      {
        "name": "getASTParentParent",
        "parameterTypes": []
      },
      {
        "name": "getASTType",
        "parameterTypes": []
      },
      {
        "name": "getDisplayString",
        "parameterTypes": []
      },
      {
        "name": "getLeadingComment",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getTrailingComment",
        "parameterTypes": []
      },
      {
        "name": "isEquivalentTo",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "isListEquivalent",
        "parameterTypes": [
          "java.util.List",
          "java.util.List"
        ]
      },
      {
        "name": "isNodeEquivalent",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode",
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "isValueEquivalent",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "nextSibling",
        "parameterTypes": []
      },
      {
        "name": "nextSibling",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "normalize",
        "parameterTypes": []
      },
      {
        "name": "prevSibling",
        "parameterTypes": []
      },
      {
        "name": "prevSibling",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "processChild",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "removeChild",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "removeInList",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "replaceChild",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode",
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "replaceInList",
        "parameterTypes": [
          "java.util.List",
          "int",
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "requireParentheses",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "serializeFields",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setASTParent",
        "parameterTypes": [
          "io.nop.core.lang.ast.ASTNode"
        ]
      },
      {
        "name": "setLeadingComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setTrailingComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.ast.ASTNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getASTType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.ast.IASTNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NULL_ACTION"
      }
    ],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      }
    ],
    "name": "io.nop.core.lang.eval.IEvalAction",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ALWAYS_FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ALWAYS_TRUE"
      }
    ],
    "methods": [
      {
        "name": "passConditions",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      }
    ],
    "name": "io.nop.core.lang.eval.IEvalPredicate",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.core.lang.json.IJsonSerializable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkReadOnly",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "flatten",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "forEachEntry",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getLocValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.json.JObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateSql",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      }
    ],
    "name": "io.nop.core.lang.sql.ISqlGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "avg",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "avg",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "chunk",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "compact",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "countBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "delete",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Collection"
        ]
      },
      {
        "name": "filterNull",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "findIndex",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Map"
        ]
      },
      {
        "name": "first",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "first",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "getFieldValue",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String"
        ]
      },
      {
        "name": "groupBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "indexBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "indexByFields",
        "parameterTypes": [
          "java.util.Collection",
          "[Ljava.lang.String;"
        ]
      },
      {
        "name": "invert",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "last",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "last",
        "parameterTypes": [
          "java.util.List",
          "int"
        ]
      },
      {
        "name": "leftjoinMerge",
        "parameterTypes": [
          "java.util.List",
          "java.util.List",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "max",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "max",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "mergeMap",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "min",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "min",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "omit",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Collection"
        ]
      },
      {
        "name": "pairs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "partition",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "pick",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "pickNotNull",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.Collection"
        ]
      },
      {
        "name": "pluck",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "pluckAsMap",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "pluckThenJoin",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "removeAllWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "removeWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "rename",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "retainAllWhere",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "sortBy",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.Object"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.function.Function"
        ]
      },
      {
        "name": "toJObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toKeyedList",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String"
        ]
      },
      {
        "name": "unique",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "where",
        "parameterTypes": [
          "java.util.Collection",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "where",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.core.lang.utils.Underscore",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateNode",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      }
    ],
    "name": "io.nop.core.lang.xml.IXNodeGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "_assignAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "_assignParent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "_getElements",
        "parameterTypes": []
      },
      {
        "name": "_isAllChildText",
        "parameterTypes": []
      },
      {
        "name": "_isAnyChildCDATA",
        "parameterTypes": []
      },
      {
        "name": "_isElement",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "java.lang.String"
        ]
      },
      {
        "name": "addAttrCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addJsonPrefix",
        "parameterTypes": []
      },
      {
        "name": "appendBodyXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "appendBodyXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "appendChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "appendChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "appendContent",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "appendContent",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "appendScript",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "appendTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.TreeBean"
        ]
      },
      {
        "name": "assureAtMostOneChild",
        "parameterTypes": []
      },
      {
        "name": "attachChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "attrBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrBoolean",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Boolean"
        ]
      },
      {
        "name": "attrCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrDouble",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrDouble",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Double"
        ]
      },
      {
        "name": "attrInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrInt",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Integer"
        ]
      },
      {
        "name": "attrLoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrLong",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "attrText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrText",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "attrTextOrEmpty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrValueLoc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "attrValueLoc",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.commons.util.objects.ValueWithLocation"
        ]
      },
      {
        "name": "attrValueLocs",
        "parameterTypes": []
      },
      {
        "name": "attrValueLocs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "bodyFullXml",
        "parameterTypes": []
      },
      {
        "name": "bodyFullXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "bodyToXJson",
        "parameterTypes": []
      },
      {
        "name": "checkNotReadOnly",
        "parameterTypes": []
      },
      {
        "name": "child",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "childAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "childByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childIndex",
        "parameterTypes": []
      },
      {
        "name": "childIndexOfSameTag",
        "parameterTypes": []
      },
      {
        "name": "childValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childWithAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childrenByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "childrenByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "childrenToJson",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearAttrs",
        "parameterTypes": []
      },
      {
        "name": "clearBody",
        "parameterTypes": []
      },
      {
        "name": "clearChildren",
        "parameterTypes": []
      },
      {
        "name": "clearComment",
        "parameterTypes": []
      },
      {
        "name": "clearLocation",
        "parameterTypes": []
      },
      {
        "name": "cloneChildren",
        "parameterTypes": []
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "closest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectXPath",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "commonAncestor",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "contains",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "content",
        "parameterTypes": []
      },
      {
        "name": "content",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "content",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "contentAsInt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "contentText",
        "parameterTypes": []
      },
      {
        "name": "countChild",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "countChildByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "countChildByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "depth",
        "parameterTypes": []
      },
      {
        "name": "detach",
        "parameterTypes": []
      },
      {
        "name": "detachChildren",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "element",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "elementAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "elementText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "elements",
        "parameterTypes": []
      },
      {
        "name": "elements",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "find",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findAll",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findAllByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findAllByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "findChild",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "findChildren",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "firstChild",
        "parameterTypes": []
      },
      {
        "name": "firstLeaf",
        "parameterTypes": []
      },
      {
        "name": "forEachAttr",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "forEachNode",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "fromTreeBean",
        "parameterTypes": [
          "io.nop.api.core.beans.ITreeBean"
        ]
      },
      {
        "name": "fromValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "fullXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrCount",
        "parameterTypes": []
      },
      {
        "name": "getAttrNames",
        "parameterTypes": []
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getChildCount",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getContentValue",
        "parameterTypes": []
      },
      {
        "name": "getDocType",
        "parameterTypes": []
      },
      {
        "name": "getDumpString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInstruction",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getParentParent",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "getTagNameWithoutNs",
        "parameterTypes": []
      },
      {
        "name": "getTreeLevel",
        "parameterTypes": []
      },
      {
        "name": "getXmlnsForUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttr",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasBody",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": []
      },
      {
        "name": "hasChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasContent",
        "parameterTypes": []
      },
      {
        "name": "hasMixedContent",
        "parameterTypes": []
      },
      {
        "name": "html",
        "parameterTypes": []
      },
      {
        "name": "innerHtml",
        "parameterTypes": []
      },
      {
        "name": "innerXml",
        "parameterTypes": []
      },
      {
        "name": "innerXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "insertAfterXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "insertAfterXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "insertBeforeXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "insertBeforeXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "insertChild",
        "parameterTypes": [
          "int",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "insertChildren",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "insertParent",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isCDataText",
        "parameterTypes": []
      },
      {
        "name": "isDummyNode",
        "parameterTypes": []
      },
      {
        "name": "isElementNode",
        "parameterTypes": []
      },
      {
        "name": "isTextNode",
        "parameterTypes": []
      },
      {
        "name": "isXmlEquals",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "isXmlEquals",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.commons.functional.IEqualsChecker"
        ]
      },
      {
        "name": "jsonText",
        "parameterTypes": []
      },
      {
        "name": "jsonText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "lastChild",
        "parameterTypes": []
      },
      {
        "name": "lastLeaf",
        "parameterTypes": []
      },
      {
        "name": "make",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "make",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeChildWithAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "makeDocNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeNode",
        "parameterTypes": []
      },
      {
        "name": "makeTextNode",
        "parameterTypes": []
      },
      {
        "name": "matchAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "mergeAttrs",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "needAddJsonPrefix",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "newAttrError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode",
          "java.lang.String"
        ]
      },
      {
        "name": "newError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode"
        ]
      },
      {
        "name": "nextElementSibling",
        "parameterTypes": []
      },
      {
        "name": "nextLeaf",
        "parameterTypes": []
      },
      {
        "name": "nextSibling",
        "parameterTypes": []
      },
      {
        "name": "nodeWithAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "normalizeContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeExpr",
        "parameterTypes": []
      },
      {
        "name": "normalizeExprInContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeScriptContent",
        "parameterTypes": []
      },
      {
        "name": "normalizeText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "normalizeValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "outerXml",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "output",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalOutput"
        ]
      },
      {
        "name": "ownText",
        "parameterTypes": []
      },
      {
        "name": "parent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "parents",
        "parameterTypes": []
      },
      {
        "name": "prependBodyXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "prependBodyXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prependChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "prependChildren",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "prependContent",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "prependContent",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "prevElementSibling",
        "parameterTypes": []
      },
      {
        "name": "prevLeaf",
        "parameterTypes": []
      },
      {
        "name": "prevSibling",
        "parameterTypes": []
      },
      {
        "name": "process",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXNodeHandler"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": []
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "removeAllByAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeAttrCsvSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeAttrs",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeAttrsIf",
        "parameterTypes": [
          "java.util.function.BiPredicate"
        ]
      },
      {
        "name": "removeAttrsWithPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "removeChildByIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeChildByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeChildrenByTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeExtension",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeJsonPrefix",
        "parameterTypes": []
      },
      {
        "name": "removeNextSiblings",
        "parameterTypes": []
      },
      {
        "name": "renameAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renameChild",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "renameNsPrefix",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceBy",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "replaceByList",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "replaceByXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "replaceChild",
        "parameterTypes": [
          "int",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "replaceChildren",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "requireAttrCsvSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrDouble",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrInt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrLong",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "requireAttrText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "root",
        "parameterTypes": []
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "saveToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "java.lang.String"
        ]
      },
      {
        "name": "saveToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "saveToWriter",
        "parameterTypes": [
          "java.lang.Appendable"
        ]
      },
      {
        "name": "saveToWriter",
        "parameterTypes": [
          "java.lang.Appendable",
          "java.lang.String",
          "boolean",
          "boolean",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "selectMany",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector"
        ]
      },
      {
        "name": "selectOne",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttr",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContentValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDocType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtension",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.xml.IXNodeExtension"
        ]
      },
      {
        "name": "setInnerXml",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "setInnerXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstruction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "syncAllExtensionFromNode",
        "parameterTypes": []
      },
      {
        "name": "syncAllExtensionToNode",
        "parameterTypes": []
      },
      {
        "name": "text",
        "parameterTypes": []
      },
      {
        "name": "toJsonObject",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toTreeBean",
        "parameterTypes": []
      },
      {
        "name": "toXJson",
        "parameterTypes": []
      },
      {
        "name": "transformAttr",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "transformChild",
        "parameterTypes": [
          "java.util.function.Predicate",
          "java.util.function.Function",
          "boolean"
        ]
      },
      {
        "name": "uniqueAttr",
        "parameterTypes": []
      },
      {
        "name": "uniqueAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uniqueChild",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uniqueChild",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "updateSelected",
        "parameterTypes": [
          "io.nop.core.lang.xml.IXSelector",
          "java.lang.Object"
        ]
      },
      {
        "name": "visit",
        "parameterTypes": [
          "io.nop.core.model.tree.ITreeVisitor"
        ]
      },
      {
        "name": "wrapChildren",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.xml.XNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "attr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "child"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "comment"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "tag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "value"
      }
    ],
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.lang.xml.XNodeValuePosition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendChild",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "assignAttrs",
        "parameterTypes": [
          "io.nop.core.lang.json.JObject",
          "java.util.Map"
        ]
      },
      {
        "name": "beginListItem",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "beginNode",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "beginObjectChild",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "comment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "current",
        "parameterTypes": []
      },
      {
        "name": "currentList",
        "parameterTypes": []
      },
      {
        "name": "currentObject",
        "parameterTypes": []
      },
      {
        "name": "currentTagInfo",
        "parameterTypes": []
      },
      {
        "name": "endDoc",
        "parameterTypes": []
      },
      {
        "name": "endNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getList",
        "parameterTypes": []
      },
      {
        "name": "getPropName",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "boolean"
        ]
      },
      {
        "name": "getResult",
        "parameterTypes": []
      },
      {
        "name": "hasObjAttr",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isListType",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "newList",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "newObject",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeValue",
        "parameterTypes": [
          "io.nop.commons.util.objects.ValueWithLocation"
        ]
      },
      {
        "name": "processNode",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "simpleNode",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "value",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.core.lang.xml.handler.CollectJObjectHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendChild",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "beginDoc",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "beginNode",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "comment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "endDoc",
        "parameterTypes": []
      },
      {
        "name": "endNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrBoolean",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getAttrDouble",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "java.lang.Double"
        ]
      },
      {
        "name": "getAttrInt",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "simpleNode",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "text",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "value",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.core.lang.xml.handler.XNodeHandlerAdapter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "addPropDefault",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "defineMethod",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.eval.IEvalFunction",
          "boolean"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getComplexProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComplexProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "key",
        "parameterTypes": []
      },
      {
        "name": "makeComplexPropDefault",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "makeList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "method_invoke",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "obj_name",
        "parameterTypes": []
      },
      {
        "name": "obj_propValues",
        "parameterTypes": []
      },
      {
        "name": "prop_allow",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_make",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_names",
        "parameterTypes": []
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "toMap",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.object.DynamicObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "col1",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "colDelta",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.model.table.CellAnchor"
        ]
      },
      {
        "name": "dx1",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "dx2",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "dy1",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "dy2",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "getCol1",
        "parameterTypes": []
      },
      {
        "name": "getCol2",
        "parameterTypes": []
      },
      {
        "name": "getColDelta",
        "parameterTypes": []
      },
      {
        "name": "getDx1",
        "parameterTypes": []
      },
      {
        "name": "getDx2",
        "parameterTypes": []
      },
      {
        "name": "getDy1",
        "parameterTypes": []
      },
      {
        "name": "getDy2",
        "parameterTypes": []
      },
      {
        "name": "getRow1",
        "parameterTypes": []
      },
      {
        "name": "getRow2",
        "parameterTypes": []
      },
      {
        "name": "getRowDelta",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "row1",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "rowDelta",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCol1",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setColDelta",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDx1",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setDx2",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setDy1",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setDy2",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setRow1",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRowDelta",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.core.model.table.CellAnchor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMergeAcross",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMergeDown",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRow",
        "parameterTypes": [
          "io.nop.core.model.table.IRow"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.core.model.table.ICell",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getFormula",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getMergeAcross",
        "parameterTypes": []
      },
      {
        "name": "getMergeDown",
        "parameterTypes": []
      },
      {
        "name": "getRealCell",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.ICellView",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCells",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "internalAddCell",
        "parameterTypes": [
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "internalAddCells",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "internalInsertCell",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "internalRemoveCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalSetCell",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "makeCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTable",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      }
    ],
    "name": "io.nop.core.model.table.IRow",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCells",
        "parameterTypes": []
      },
      {
        "name": "getColCount",
        "parameterTypes": []
      },
      {
        "name": "getHeight",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.IRowView",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addToRow",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "cbind",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "getCell",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "getRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertCol",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertCols",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "insertRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertRows",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "isSpaceAvailable",
        "parameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "makeCell",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "makeRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "mergeCell",
        "parameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "rbind",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "removeCol",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeCols",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "removeRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeRows",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "setCell",
        "parameterTypes": [
          "int",
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "setFooterCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setHeaderCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSideCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "trimBlankCols",
        "parameterTypes": []
      },
      {
        "name": "trimBlankRows",
        "parameterTypes": []
      },
      {
        "name": "trimTable",
        "parameterTypes": [
          "int",
          "int"
        ]
      }
    ],
    "name": "io.nop.core.model.table.ITable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getColCount",
        "parameterTypes": []
      },
      {
        "name": "getCols",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRowCount",
        "parameterTypes": []
      },
      {
        "name": "getRows",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.ITableView",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendInfo",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.model.table.impl.AbstractCell"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRow",
        "parameterTypes": [
          "io.nop.core.model.table.IRow"
        ]
      },
      {
        "name": "setStyleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.impl.AbstractCell",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "appendInfo",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getColCount",
        "parameterTypes": []
      },
      {
        "name": "getHeight",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "internalAddCell",
        "parameterTypes": [
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "internalAddCells",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "internalInsertCell",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "internalRemoveCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalSetCell",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTable",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.table.impl.AbstractRow",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "_deleteCols",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "_expandProxy",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "_insertCols",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "_isSpaceAvailable",
        "parameterTypes": [
          "io.nop.core.model.table.IRow",
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "_removeProxy",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "addRow",
        "parameterTypes": [
          "io.nop.core.model.table.impl.AbstractRow"
        ]
      },
      {
        "name": "addToRow",
        "parameterTypes": [
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "cbind",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "doRemoveCell",
        "parameterTypes": [
          "io.nop.core.model.table.ICell",
          "int",
          "int"
        ]
      },
      {
        "name": "doSetCell",
        "parameterTypes": [
          "io.nop.core.model.table.IRow",
          "int",
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "dump",
        "parameterTypes": []
      },
      {
        "name": "dump",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCell",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "getColCount",
        "parameterTypes": []
      },
      {
        "name": "getCols",
        "parameterTypes": []
      },
      {
        "name": "getFooterCount",
        "parameterTypes": []
      },
      {
        "name": "getHeaderCount",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getProxy",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "getRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getRowCount",
        "parameterTypes": []
      },
      {
        "name": "getRows",
        "parameterTypes": []
      },
      {
        "name": "getSideCount",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "insertCol",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertCols",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "insertRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "insertRows",
        "parameterTypes": [
          "int",
          "int",
          "[I"
        ]
      },
      {
        "name": "internalSetCell",
        "parameterTypes": [
          "io.nop.core.model.table.IRow",
          "int",
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "invalidateColCount",
        "parameterTypes": []
      },
      {
        "name": "isSpaceAvailable",
        "parameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "makeCell",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "makeRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "mergeCell",
        "parameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "newRow",
        "parameterTypes": []
      },
      {
        "name": "normalizeMergeRanges",
        "parameterTypes": []
      },
      {
        "name": "normalizeText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "rbind",
        "parameterTypes": [
          "io.nop.core.model.table.ITable"
        ]
      },
      {
        "name": "removeCol",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeCols",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "removeRow",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeRows",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "setCell",
        "parameterTypes": [
          "int",
          "int",
          "io.nop.core.model.table.ICell"
        ]
      },
      {
        "name": "setFooterCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setHeaderCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSideCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStyleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toDebugString",
        "parameterTypes": []
      },
      {
        "name": "toHtmlString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "trimBlankCols",
        "parameterTypes": []
      },
      {
        "name": "trimBlankRows",
        "parameterTypes": []
      },
      {
        "name": "trimTable",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      },
      {
        "name": "validateProxy",
        "parameterTypes": [
          "io.nop.core.model.table.ICell",
          "int",
          "int"
        ]
      },
      {
        "name": "validateRealCell",
        "parameterTypes": [
          "io.nop.core.model.table.ICell",
          "int",
          "int"
        ]
      }
    ],
    "name": "io.nop.core.model.table.impl.AbstractTable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.model.table.impl.BaseCell"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getFormula",
        "parameterTypes": []
      },
      {
        "name": "getMergeAcross",
        "parameterTypes": []
      },
      {
        "name": "getMergeDown",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMergeAcross",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMergeDown",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.core.model.table.impl.BaseCell",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getChildren",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.tree.ITreeChildrenStructure",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "toNode",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.validator.ValidatorCheckModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "toNode",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.model.validator.ValidatorModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorCheckModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBizFatal",
        "parameterTypes": []
      },
      {
        "name": "getCondition",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": []
      },
      {
        "name": "getErrorDescription",
        "parameterTypes": []
      },
      {
        "name": "getErrorParams",
        "parameterTypes": []
      },
      {
        "name": "getErrorStatus",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getSeverity",
        "parameterTypes": []
      },
      {
        "name": "hasErrorParams",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBizFatal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCondition",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorParams",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setErrorStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeverity",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.core.model.validator._gen._ValidatorCheckModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addCheck",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorCheckModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBizFatal",
        "parameterTypes": []
      },
      {
        "name": "getCheck",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCheckLibPath",
        "parameterTypes": []
      },
      {
        "name": "getChecks",
        "parameterTypes": []
      },
      {
        "name": "getCondition",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": []
      },
      {
        "name": "getErrorDescription",
        "parameterTypes": []
      },
      {
        "name": "getErrorParams",
        "parameterTypes": []
      },
      {
        "name": "getErrorStatus",
        "parameterTypes": []
      },
      {
        "name": "getFatalSeverity",
        "parameterTypes": []
      },
      {
        "name": "getObj",
        "parameterTypes": []
      },
      {
        "name": "getSeverity",
        "parameterTypes": []
      },
      {
        "name": "hasCheck",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasChecks",
        "parameterTypes": []
      },
      {
        "name": "hasErrorParams",
        "parameterTypes": []
      },
      {
        "name": "keySet_checks",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBizFatal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCheckLibPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setChecks",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCondition",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorParams",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setErrorStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setFatalSeverity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setObj",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setSeverity",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.core.model.validator._gen._ValidatorModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "discover",
        "parameterTypes": []
      },
      {
        "name": "findModuleResources",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getAllModuleResources",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEnabledModuleNames",
        "parameterTypes": []
      },
      {
        "name": "getEnabledModules",
        "parameterTypes": []
      },
      {
        "name": "getModuleResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "loadModules",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "registerInstance",
        "parameterTypes": [
          "io.nop.core.module.ModuleManager"
        ]
      },
      {
        "name": "updateDynModules",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.core.module.ModuleManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "forModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAuthor",
        "parameterTypes": []
      },
      {
        "name": "getDependsOn",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getModuleId",
        "parameterTypes": []
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getPublishDate",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "isDynamic",
        "parameterTypes": []
      },
      {
        "name": "setAuthor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDependsOn",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDynamic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublishDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.module.ModuleModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IExtensibleObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IPropGetMissingHook",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.core.reflect.hook.IPropSetMissingHook",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "copyExtPropsTo",
        "parameterTypes": [
          "io.nop.core.reflect.hook.SerializableExtensibleObject"
        ]
      },
      {
        "name": "getExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllowedExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "mergeExtPropsIfAbsent",
        "parameterTypes": [
          "io.nop.core.reflect.hook.SerializableExtensibleObject"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_names",
        "parameterTypes": []
      },
      {
        "name": "prop_remove",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "readExtProps",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "java.lang.Object"
        ]
      },
      {
        "name": "removeExtProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setExtProps",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.core.reflect.hook.SerializableExtensibleObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "createNewFile",
        "parameterTypes": []
      },
      {
        "name": "createTempFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "deleteOnExit",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "mkdirs",
        "parameterTypes": []
      },
      {
        "name": "renameTo",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.core.resource.IFile",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getResourceRegion",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": []
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      },
      {
        "name": "writeToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      }
    ],
    "name": "io.nop.core.resource.IResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getChildren",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.IResourceLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "s_zipTool"
      }
    ],
    "methods": [
      {
        "name": "assertDirectory",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "buildClassPath",
        "parameterTypes": [
          "java.lang.Package",
          "java.lang.String"
        ]
      },
      {
        "name": "buildDeltaPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildNamespacePath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildResourceFromURL",
        "parameterTypes": [
          "java.lang.String",
          "java.net.URL"
        ]
      },
      {
        "name": "buildTenantPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "buildTextScanner",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "checkNormalVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkValidModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkValidModuleIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "checkValidModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkValidRelativeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "copy",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile",
          "java.util.function.Predicate",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "copyDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "copyDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IFile",
          "java.util.function.Predicate",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "deleteAll",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "deleteChildren",
        "parameterTypes": [
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "deleteChildren",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.api.core.util.progress.IProgressListener"
        ]
      },
      {
        "name": "dumpResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "filePostfixFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "genDayRandPath",
        "parameterTypes": []
      },
      {
        "name": "getAppProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getClassPathResource",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getClassPathResource",
        "parameterTypes": [
          "java.lang.Package",
          "java.lang.String"
        ]
      },
      {
        "name": "getCpPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDeltaLayerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDumpPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleIdFromModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleIdFromStdPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModuleNameFromModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOverrideVFsDir",
        "parameterTypes": []
      },
      {
        "name": "getParentPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPathNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRelatedResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getSibling",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getSiblingWithExt",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStepListener",
        "parameterTypes": [
          "io.nop.api.core.util.progress.IProgressListener",
          "java.lang.String",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "getSubPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTempResource",
        "parameterTypes": []
      },
      {
        "name": "getTempResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getZipTool",
        "parameterTypes": []
      },
      {
        "name": "hasNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "isDeltaPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isNormalVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isTenantPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isTextResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isValidRelativeName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isZipFile",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "newDynamicPath",
        "parameterTypes": []
      },
      {
        "name": "normalizePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "readBytes",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.reflect.Type"
        ]
      },
      {
        "name": "readObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "readProperties",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable"
        ]
      },
      {
        "name": "readState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "readText",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "readTextHeader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "readXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "registerZipTool",
        "parameterTypes": [
          "io.nop.core.resource.zip.IZipTool"
        ]
      },
      {
        "name": "removeNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativePathResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRelativeStdPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveResource",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveSibling",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveSiblingWithExt",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "saveFromStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream"
        ]
      },
      {
        "name": "saveFromStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "startsWithNamespace",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "toCharReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toReader",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "toWriter",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "toWriter",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "unzip",
        "parameterTypes": [
          "io.nop.core.resource.IFile"
        ]
      },
      {
        "name": "unzipToDir",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      },
      {
        "name": "writeBytes",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "[B"
        ]
      },
      {
        "name": "writeJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object"
        ]
      },
      {
        "name": "writeJson",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "writeObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object"
        ]
      },
      {
        "name": "writeObject",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.Object",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "writeProperties",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.util.Properties"
        ]
      },
      {
        "name": "writeState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable"
        ]
      },
      {
        "name": "writeState",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.commons.io.serialize.IStateSerializable",
          "io.nop.commons.io.serialize.IStreamSerializer"
        ]
      },
      {
        "name": "writeStream",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.io.InputStream"
        ]
      },
      {
        "name": "writeText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "writeText",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "writeXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "writeXml",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.core.lang.xml.XNode",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "zipDir",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "io.nop.core.resource.IResource",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      },
      {
        "name": "zipDirToStream",
        "parameterTypes": [
          "io.nop.core.resource.IFile",
          "java.io.OutputStream",
          "io.nop.core.resource.zip.ZipOptions"
        ]
      }
    ],
    "name": "io.nop.core.resource.ResourceHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "isInitialized",
        "parameterTypes": []
      },
      {
        "name": "registerInstance",
        "parameterTypes": [
          "io.nop.core.resource.IVirtualFileSystem"
        ]
      },
      {
        "name": "unregisterInstance",
        "parameterTypes": [
          "io.nop.core.resource.IVirtualFileSystem"
        ]
      }
    ],
    "name": "io.nop.core.resource.VirtualFileSystem",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.core.resource.component.AbstractComponentModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "serializeToJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.component.AbstractComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkAllowChange",
        "parameterTypes": []
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "frozen",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.component.AbstractFreezable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildComponentPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "clearAllCache",
        "parameterTypes": []
      },
      {
        "name": "clearCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "collectDepends",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "collectDependsTo",
        "parameterTypes": [
          "io.nop.core.resource.deps.ResourceDependencySet",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "dumpDependsSet",
        "parameterTypes": [
          "io.nop.core.resource.deps.ResourceDependencySet"
        ]
      },
      {
        "name": "findModelTypeFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponentModelLoader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModelConfigByModelPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getModelDepends",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceDepends",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSubComponent",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.util.IComponentModel",
          "java.lang.String"
        ]
      },
      {
        "name": "ignoreDepends",
        "parameterTypes": [
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "isAnyDependsChange",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "isDependencyChanged",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadComponentModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadComponentModel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "loadComponentModelByUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadGeneratedComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadPrecompiledObject",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseComponentModel",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "parseComponentModel",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.lang.String"
        ]
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "registerComponentModelConfig",
        "parameterTypes": [
          "io.nop.core.resource.component.ComponentModelConfig"
        ]
      },
      {
        "name": "registerComponentModelLoader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.resource.IResourceObjectLoader",
          "boolean"
        ]
      },
      {
        "name": "registerComponentModelTransformer",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.resource.component.IComponentTransformer",
          "boolean"
        ]
      },
      {
        "name": "registerInstance",
        "parameterTypes": [
          "io.nop.core.resource.component.IResourceComponentManager"
        ]
      },
      {
        "name": "removeCachedModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveModelLoader",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "runWhenDependsChanged",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "setChangeChecker",
        "parameterTypes": [
          "io.nop.core.resource.deps.IResourceChangeChecker"
        ]
      },
      {
        "name": "setDependsPersister",
        "parameterTypes": [
          "io.nop.core.resource.deps.IResourceDependsPersister"
        ]
      },
      {
        "name": "traceAllDepends",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "traceDepends",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.ResourceComponentManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "findResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getResourceName",
        "parameterTypes": []
      },
      {
        "name": "getResourceNameNoExt",
        "parameterTypes": []
      },
      {
        "name": "getResourcePath",
        "parameterTypes": []
      },
      {
        "name": "getResourceStdPath",
        "parameterTypes": []
      },
      {
        "name": "getSiblingResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isUseCpCache",
        "parameterTypes": []
      },
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "boolean"
        ]
      },
      {
        "name": "setResourcePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "shouldTraceDepends",
        "parameterTypes": []
      },
      {
        "name": "shouldTraceDepends",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.AbstractResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": []
      },
      {
        "name": "parseFromText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.AbstractTextResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "parseFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.IResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "parseFromText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.component.parse.ITextResourceParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "createTempFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "doGetRelative",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "generateName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.core.resource.impl.AbstractFile",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "checkNotReadonly",
        "parameterTypes": []
      },
      {
        "name": "checkSupportStream",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "getResourceRegion",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "getStdPath",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "internalObj",
        "parameterTypes": []
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      },
      {
        "name": "writeToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      }
    ],
    "name": "io.nop.core.resource.impl.AbstractResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": []
      },
      {
        "name": "getResourceRegion",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "internalObj",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "saveToResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      },
      {
        "name": "writeToStream",
        "parameterTypes": [
          "java.io.OutputStream"
        ]
      },
      {
        "name": "writeToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "io.nop.api.core.util.progress.IStepProgressListener"
        ]
      }
    ],
    "name": "io.nop.core.resource.impl.DelegateResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildPath",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "createNewFile",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": []
      },
      {
        "name": "deleteOnExit",
        "parameterTypes": []
      },
      {
        "name": "doGetRelative",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getCanonicalPath",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "internalObj",
        "parameterTypes": []
      },
      {
        "name": "isDirectory",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "lastModified",
        "parameterTypes": []
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "mkdirs",
        "parameterTypes": []
      },
      {
        "name": "renameTo",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "saveToFile",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.impl.FileResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getExternalPath",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "internalObj",
        "parameterTypes": []
      },
      {
        "name": "toFile",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toURL",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.resource.impl.URLResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "createNewFile",
        "parameterTypes": []
      },
      {
        "name": "createTempFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "deleteOnExit",
        "parameterTypes": []
      },
      {
        "name": "error",
        "parameterTypes": []
      },
      {
        "name": "exists",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getOutputStream",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalObj",
        "parameterTypes": []
      },
      {
        "name": "isReadOnly",
        "parameterTypes": []
      },
      {
        "name": "mkdirs",
        "parameterTypes": []
      },
      {
        "name": "renameTo",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.core.resource.impl.UnknownResource",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildResourceStore",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getClassPathResources",
        "parameterTypes": []
      },
      {
        "name": "getInMemoryLayer",
        "parameterTypes": []
      },
      {
        "name": "getRawResource",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "registerNamespaceHandler",
        "parameterTypes": [
          "io.nop.core.resource.IResourceNamespaceHandler"
        ]
      },
      {
        "name": "saveResource",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.resource.IResource",
          "io.nop.api.core.util.progress.IStepProgressListener",
          "java.util.Map"
        ]
      },
      {
        "name": "supportSave",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unregisterNamespaceHandler",
        "parameterTypes": [
          "io.nop.core.resource.IResourceNamespaceHandler"
        ]
      },
      {
        "name": "updateInMemoryLayer",
        "parameterTypes": [
          "io.nop.core.resource.IResourceStore"
        ]
      }
    ],
    "name": "io.nop.core.resource.store.DefaultVirtualFileSystem",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateToStream",
        "parameterTypes": [
          "java.io.OutputStream",
          "io.nop.core.context.IEvalContext"
        ]
      }
    ],
    "name": "io.nop.core.resource.tpl.ITemplateOutput",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "generateToWriter",
        "parameterTypes": [
          "java.io.Writer",
          "io.nop.core.context.IEvalContext"
        ]
      }
    ],
    "name": "io.nop.core.resource.tpl.ITextTemplateOutput",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getRawClass",
        "parameterTypes": []
      },
      {
        "name": "getRawTypeName",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getTypeName",
        "parameterTypes": []
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "io.nop.core.type.IRawTypeResolver"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.type.IGenericType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "arrayType",
        "parameterTypes": [
          "io.nop.core.type.impl.PredefinedGenericType",
          "java.lang.Class"
        ]
      },
      {
        "name": "containsTypeVariable",
        "parameterTypes": []
      },
      {
        "name": "getPredefinedName",
        "parameterTypes": []
      },
      {
        "name": "getRawClass",
        "parameterTypes": []
      },
      {
        "name": "getRawTypeName",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getTypeName",
        "parameterTypes": []
      },
      {
        "name": "isArray",
        "parameterTypes": []
      },
      {
        "name": "isPredefined",
        "parameterTypes": []
      },
      {
        "name": "isResolved",
        "parameterTypes": []
      },
      {
        "name": "javaType",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      },
      {
        "name": "parameterizedType",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.type.impl.PredefinedRawType",
          "[Lio.nop.core.type.impl.PredefinedGenericType;"
        ]
      },
      {
        "name": "primitiveType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "java.lang.String"
        ]
      },
      {
        "name": "refine",
        "parameterTypes": [
          "io.nop.core.type.ITypeScope"
        ]
      },
      {
        "name": "resolve",
        "parameterTypes": [
          "io.nop.core.type.IRawTypeResolver"
        ]
      },
      {
        "name": "simpleType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "variableType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "writeReplace",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.type.impl.PredefinedGenericType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getComponentType",
        "parameterTypes": []
      },
      {
        "name": "getFuncArgTypes",
        "parameterTypes": []
      },
      {
        "name": "getFuncReturnType",
        "parameterTypes": []
      },
      {
        "name": "getGenericType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "getGenericType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getMapKeyType",
        "parameterTypes": []
      },
      {
        "name": "getMapValueType",
        "parameterTypes": []
      },
      {
        "name": "getRawClass",
        "parameterTypes": []
      },
      {
        "name": "getRawTypeName",
        "parameterTypes": []
      },
      {
        "name": "getSuperType",
        "parameterTypes": []
      },
      {
        "name": "getTypeParameters",
        "parameterTypes": []
      },
      {
        "name": "isCollectionLike",
        "parameterTypes": []
      },
      {
        "name": "isFunctionalClass",
        "parameterTypes": []
      },
      {
        "name": "isListLike",
        "parameterTypes": []
      },
      {
        "name": "isMapLike",
        "parameterTypes": []
      },
      {
        "name": "isSetLike",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.core.type.impl.PredefinedRawType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "FIND_FIRST_RANGE"
      }
    ],
    "methods": [
      {
        "name": "exists",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.dataset.IRowMapper"
        ]
      }
    ],
    "name": "io.nop.dao.api.AbstractSqlExecutor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.api.IDaoComponent",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "get_id",
        "parameterTypes": []
      },
      {
        "name": "orm_clearDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_initedValues",
        "parameterTypes": []
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_restoreValues",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.dao.api.IDaoEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clearQueryCache",
        "parameterTypes": []
      },
      {
        "name": "clearQueryCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evictQueryCache",
        "parameterTypes": [
          "java.lang.String",
          "java.io.Serializable"
        ]
      },
      {
        "name": "executeQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "executeStatement",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "executeUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "exists",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "findFirst",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.dataset.IRowMapper"
        ]
      },
      {
        "name": "getCacheProvider",
        "parameterTypes": []
      },
      {
        "name": "getDefaultRowMapper",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.api.ISqlExecutor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compare",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "compare",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.dao.dialect.DialectSelector"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDialectName",
        "parameterTypes": []
      },
      {
        "name": "getDriverMajorVersion",
        "parameterTypes": []
      },
      {
        "name": "getDriverMinorVersion",
        "parameterTypes": []
      },
      {
        "name": "getDriverName",
        "parameterTypes": []
      },
      {
        "name": "getPdmTargetType",
        "parameterTypes": []
      },
      {
        "name": "getProductName",
        "parameterTypes": []
      },
      {
        "name": "getProductVersion",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "match",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "setDialectName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDriverMajorVersion",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDriverMinorVersion",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDriverName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPdmTargetType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProductName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProductVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.DialectSelector",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "escapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBitValueLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBooleanValueLiteral",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getCreateSequenceSql",
        "parameterTypes": [
          "java.lang.String",
          "long",
          "int"
        ]
      },
      {
        "name": "getCurrentTimestampSql",
        "parameterTypes": []
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getDialectModel",
        "parameterTypes": []
      },
      {
        "name": "getDropSequenceSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDropTableSql",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getForUpdateSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getFunction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFunctionNames",
        "parameterTypes": []
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getHexValueLiteral",
        "parameterTypes": [
          "io.nop.commons.bytes.ByteString"
        ]
      },
      {
        "name": "getJsonTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getLockHintSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getSQLExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDualSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSequenceNextValSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStringLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": [
          "java.time.LocalTime"
        ]
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "getValueLiteral",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isReservedKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "isSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportILike",
        "parameterTypes": []
      },
      {
        "name": "isSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "isSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "isSupportReturningForUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "isSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "isSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "isSupportSomeSubQuery",
        "parameterTypes": []
      },
      {
        "name": "isSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "isSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "isUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "jdbcGet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcGetString",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "unescapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.IDialect",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.IDialectProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildFunctionSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBitValueLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBooleanValueLiteral",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getCreateSequenceSql",
        "parameterTypes": [
          "java.lang.String",
          "long",
          "int"
        ]
      },
      {
        "name": "getCurrentTimestampSql",
        "parameterTypes": []
      },
      {
        "name": "getDataParameterBinder",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "getDialectModel",
        "parameterTypes": []
      },
      {
        "name": "getDropSequenceSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDropTableSql",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getExceptKeyword",
        "parameterTypes": []
      },
      {
        "name": "getForUpdateSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getFunction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFunctionNames",
        "parameterTypes": []
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getHexValueLiteral",
        "parameterTypes": [
          "io.nop.commons.bytes.ByteString"
        ]
      },
      {
        "name": "getJsonTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getKeywordQuote",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getLockHintSql",
        "parameterTypes": [
          "io.nop.dao.dialect.lock.LockOption"
        ]
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getSQLExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDualSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSequenceNextValSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStringLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": [
          "java.time.LocalTime"
        ]
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "getUpdateKeyword",
        "parameterTypes": []
      },
      {
        "name": "getValueLiteral",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "initDataTypes",
        "parameterTypes": []
      },
      {
        "name": "initFunctions",
        "parameterTypes": []
      },
      {
        "name": "isReservedKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "isSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportILike",
        "parameterTypes": []
      },
      {
        "name": "isSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "isSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "isSupportReturningForUpdate",
        "parameterTypes": []
      },
      {
        "name": "isSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "isSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "isSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "isSupportSomeSubQuery",
        "parameterTypes": []
      },
      {
        "name": "isSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "isSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "isSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "isSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "isUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "jdbcGet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcGetString",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSet",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetBlob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "io.nop.api.core.convert.IByteArrayView"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.PreparedStatement",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "jdbcSetClob",
        "parameterTypes": [
          "java.sql.ResultSet",
          "int",
          "java.lang.String"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "stdToNativeSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType",
          "int",
          "int"
        ]
      },
      {
        "name": "unescapeSQLName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.impl.DialectImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "fromLiteral",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.dialect.IDialect"
        ]
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int"
        ]
      },
      {
        "name": "isJavaType",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "toLiteral",
        "parameterTypes": [
          "java.lang.Object",
          "io.nop.dao.dialect.IDialect"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.json.DefaultJsonTypeHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setValue",
        "parameterTypes": [
          "io.nop.dataset.binder.IDataParameters",
          "int",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.json.H2JsonTypeHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.loader.DialectModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectDiscoverySqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectErrorCodeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectFeatures",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.dialect.model.DialectSqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCodeOrName",
        "parameterTypes": []
      },
      {
        "name": "isAllowPrecision",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlDataTypeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlNativeFunctionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.dialect.model.SqlTemplateModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectDiscoverySqls"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSelectCatalogs",
        "parameterTypes": []
      },
      {
        "name": "getSelectConstaints",
        "parameterTypes": []
      },
      {
        "name": "getSelectIndexes",
        "parameterTypes": []
      },
      {
        "name": "getSelectPrimaryKeys",
        "parameterTypes": []
      },
      {
        "name": "getSelectSchemas",
        "parameterTypes": []
      },
      {
        "name": "getSelectSequences",
        "parameterTypes": []
      },
      {
        "name": "getSelectTableColumnComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectTableComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectTables",
        "parameterTypes": []
      },
      {
        "name": "getSelectViewColumnComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectViewComments",
        "parameterTypes": []
      },
      {
        "name": "getSelectViews",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSelectCatalogs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectConstaints",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectIndexes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectPrimaryKeys",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectSchemas",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectSequences",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTableColumnComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTableComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectTables",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViewColumnComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViewComments",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectViews",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectDiscoverySqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectErrorCodeModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getUseSqlState",
        "parameterTypes": []
      },
      {
        "name": "getValues",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseSqlState",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setValues",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectErrorCodeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectFeatures"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSupportBatchUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportBatchUpdateCount",
        "parameterTypes": []
      },
      {
        "name": "getSupportDeleteFromJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportDeleteTableAlias",
        "parameterTypes": []
      },
      {
        "name": "getSupportExecuteLargeUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportFullJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportILike",
        "parameterTypes": []
      },
      {
        "name": "getSupportLargeMaxRows",
        "parameterTypes": []
      },
      {
        "name": "getSupportNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getSupportOutputForUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportQueryTimeout",
        "parameterTypes": []
      },
      {
        "name": "getSupportReturningForUpdate",
        "parameterTypes": []
      },
      {
        "name": "getSupportRightJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportRowValueConstructor",
        "parameterTypes": []
      },
      {
        "name": "getSupportSavePoint",
        "parameterTypes": []
      },
      {
        "name": "getSupportSequence",
        "parameterTypes": []
      },
      {
        "name": "getSupportSomeSubQuery",
        "parameterTypes": []
      },
      {
        "name": "getSupportTransaction",
        "parameterTypes": []
      },
      {
        "name": "getSupportTruncateTable",
        "parameterTypes": []
      },
      {
        "name": "getSupportUpdateFromJoin",
        "parameterTypes": []
      },
      {
        "name": "getSupportUpdateTableAlias",
        "parameterTypes": []
      },
      {
        "name": "getSupportWithAsClause",
        "parameterTypes": []
      },
      {
        "name": "getUseGetStringForDate",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSupportBatchUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportBatchUpdateCount",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportDeleteFromJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportDeleteTableAlias",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportExecuteLargeUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportFullJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportILike",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportLargeMaxRows",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportOutputForUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportQueryTimeout",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportReturningForUpdate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportRightJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportRowValueConstructor",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportSavePoint",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportSequence",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportSomeSubQuery",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportTransaction",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportTruncateTable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportUpdateFromJoin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportUpdateTableAlias",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSupportWithAsClause",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseGetStringForDate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectFeatures",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addErrorCode",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectErrorCodeModel"
        ]
      },
      {
        "name": "addSqlDataType",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlDataTypeModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAllSchemaPattern",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumnNameCase",
        "parameterTypes": []
      },
      {
        "name": "getDbProductNames",
        "parameterTypes": []
      },
      {
        "name": "getDefaultNullsFirst",
        "parameterTypes": []
      },
      {
        "name": "getDiscoverySqls",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getErrorCodes",
        "parameterTypes": []
      },
      {
        "name": "getFeatures",
        "parameterTypes": []
      },
      {
        "name": "getFunctions",
        "parameterTypes": []
      },
      {
        "name": "getGeometryTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrlPattern",
        "parameterTypes": []
      },
      {
        "name": "getJsonTypeHandler",
        "parameterTypes": []
      },
      {
        "name": "getKeywordQuote",
        "parameterTypes": []
      },
      {
        "name": "getKeywordUnderscore",
        "parameterTypes": []
      },
      {
        "name": "getMaxBytesSize",
        "parameterTypes": []
      },
      {
        "name": "getMaxStringSize",
        "parameterTypes": []
      },
      {
        "name": "getPaginationHandler",
        "parameterTypes": []
      },
      {
        "name": "getRename",
        "parameterTypes": []
      },
      {
        "name": "getReservedKeywords",
        "parameterTypes": []
      },
      {
        "name": "getSqlDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "getSqlExceptionTranslator",
        "parameterTypes": []
      },
      {
        "name": "getSqls",
        "parameterTypes": []
      },
      {
        "name": "getTableNameCase",
        "parameterTypes": []
      },
      {
        "name": "getUpsertHandler",
        "parameterTypes": []
      },
      {
        "name": "hasErrorCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasErrorCodes",
        "parameterTypes": []
      },
      {
        "name": "hasFunctions",
        "parameterTypes": []
      },
      {
        "name": "hasRename",
        "parameterTypes": []
      },
      {
        "name": "hasSqlDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "keySet_errorCodes",
        "parameterTypes": []
      },
      {
        "name": "keySet_functions",
        "parameterTypes": []
      },
      {
        "name": "keySet_sqlDataTypes",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAllSchemaPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumnNameCase",
        "parameterTypes": [
          "io.nop.commons.text.CharacterCase"
        ]
      },
      {
        "name": "setDbProductNames",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDefaultNullsFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDiscoverySqls",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectDiscoverySqls"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrorCodes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFeatures",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectFeatures"
        ]
      },
      {
        "name": "setFunctions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGeometryTypeHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJdbcUrlPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJsonTypeHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeywordQuote",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setKeywordUnderscore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxBytesSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxStringSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPaginationHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRename",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setReservedKeywords",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSqlDataTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSqlExceptionTranslator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqls",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectSqls"
        ]
      },
      {
        "name": "setTableNameCase",
        "parameterTypes": [
          "io.nop.commons.text.CharacterCase"
        ]
      },
      {
        "name": "setUpsertHandler",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.DialectSqls"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCreateSequence",
        "parameterTypes": []
      },
      {
        "name": "getDateLiteral",
        "parameterTypes": []
      },
      {
        "name": "getDateTimeLiteral",
        "parameterTypes": []
      },
      {
        "name": "getDropSequence",
        "parameterTypes": []
      },
      {
        "name": "getDropTable",
        "parameterTypes": []
      },
      {
        "name": "getEscapeSlash",
        "parameterTypes": []
      },
      {
        "name": "getExceptKeyword",
        "parameterTypes": []
      },
      {
        "name": "getFalseString",
        "parameterTypes": []
      },
      {
        "name": "getForUpdate",
        "parameterTypes": []
      },
      {
        "name": "getInsertKeyword",
        "parameterTypes": []
      },
      {
        "name": "getLockHint",
        "parameterTypes": []
      },
      {
        "name": "getSelectFromDual",
        "parameterTypes": []
      },
      {
        "name": "getSequenceNextVal",
        "parameterTypes": []
      },
      {
        "name": "getTimeLiteral",
        "parameterTypes": []
      },
      {
        "name": "getTimestampLiteral",
        "parameterTypes": []
      },
      {
        "name": "getTrueString",
        "parameterTypes": []
      },
      {
        "name": "getUpdateKeyword",
        "parameterTypes": []
      },
      {
        "name": "getValidationQuery",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCreateSequence",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateTimeLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDropSequence",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDropTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEscapeSlash",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExceptKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFalseString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInsertKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectFromDual",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSequenceNextVal",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestampLiteral",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrueString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateKeyword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._DialectSqls",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlDataTypeModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getAllowPrecision",
        "parameterTypes": []
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getJdbcBinder",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "isAllowExceedPrecision",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setAllowExceedPrecision",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowPrecision",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJdbcBinder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlDataTypeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlNativeFunctionModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArgTypes",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getHasParenthesis",
        "parameterTypes": []
      },
      {
        "name": "getMaxArgCount",
        "parameterTypes": []
      },
      {
        "name": "getMinArgCount",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRealName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "getSpecial",
        "parameterTypes": []
      },
      {
        "name": "getTestSql",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isOnlyForWindowExpr",
        "parameterTypes": []
      },
      {
        "name": "isReturnFirstArgType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHasParenthesis",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxArgCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinArgCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnlyForWindowExpr",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRealName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnFirstArgType",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setSpecial",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTestSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlNativeFunctionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.dao.dialect.model.SqlTemplateModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArgTypes",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTestSql",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isOnlyForWindowExpr",
        "parameterTypes": []
      },
      {
        "name": "isReturnFirstArgType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnlyForWindowExpr",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReturnFirstArgType",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTestSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.model._gen._SqlTemplateModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "prepareResultSet",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.ResultSet"
        ]
      },
      {
        "name": "prepareStatement",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.PreparedStatement"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.AbstractPaginationHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildPageExpr",
        "parameterTypes": [
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr"
        ]
      },
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "prepareResultSet",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.ResultSet"
        ]
      },
      {
        "name": "prepareStatement",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "java.sql.PreparedStatement"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.IPaginationHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "buildPageExpr",
        "parameterTypes": [
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr",
          "io.nop.core.lang.sql.ISqlExpr"
        ]
      },
      {
        "name": "getPagedSql",
        "parameterTypes": [
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.lang.sql.SQL"
        ]
      }
    ],
    "name": "io.nop.dao.dialect.pagination.LimitOffsetPaginationHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dao.initialize.DaoDialectInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBackgroundValidationInterval",
        "parameterTypes": []
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": []
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": []
      },
      {
        "name": "getInitialSize",
        "parameterTypes": []
      },
      {
        "name": "getJdbcUrl",
        "parameterTypes": []
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": []
      },
      {
        "name": "getMaxSize",
        "parameterTypes": []
      },
      {
        "name": "getMinSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPassword",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getUsername",
        "parameterTypes": []
      },
      {
        "name": "getValidationQuerySql",
        "parameterTypes": []
      },
      {
        "name": "isMetricsEnabled",
        "parameterTypes": []
      },
      {
        "name": "setBackgroundValidationInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setInitialSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setJdbcUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMetricsEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMinSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationQuerySql",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.jdbc.datasource.DataSourceConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "callFunc",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "clearQueryCache",
        "parameterTypes": []
      },
      {
        "name": "clearQueryCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "currentConnection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evictQueryCache",
        "parameterTypes": [
          "java.lang.String",
          "java.io.Serializable"
        ]
      },
      {
        "name": "executeQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "executeStatement",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "executeUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "existsTable",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getCacheProvider",
        "parameterTypes": []
      },
      {
        "name": "getDaoMetrics",
        "parameterTypes": []
      },
      {
        "name": "getDbCurrentTimestamp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDbEstimatedClock",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefaultRowMapper",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isQuerySpaceDefined",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "runWithConnection",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "java.util.function.Function"
        ]
      },
      {
        "name": "runWithConnection",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "setCacheProvider",
        "parameterTypes": [
          "io.nop.commons.cache.ICacheProvider"
        ]
      },
      {
        "name": "setDaoMetrics",
        "parameterTypes": [
          "io.nop.dao.metrics.IDaoMetrics"
        ]
      },
      {
        "name": "setDialectProvider",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialectProvider"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      },
      {
        "name": "txn",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dao.jdbc.impl.JdbcTemplateImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getConnection",
        "parameterTypes": []
      },
      {
        "name": "getDaoMetrics",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDaoMetrics",
        "parameterTypes": [
          "io.nop.dao.metrics.IDaoMetrics"
        ]
      },
      {
        "name": "setEagerReleaseConnection",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.dao.jdbc.txn.JdbcTransactionFactory",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "beginBatchUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "beginExecuteUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "beginQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean"
        ]
      },
      {
        "name": "endBatchUpdate",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "endExecuteUpdate",
        "parameterTypes": [
          "java.lang.Object",
          "long"
        ]
      },
      {
        "name": "endQuery",
        "parameterTypes": [
          "java.lang.Object",
          "long",
          "boolean"
        ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": []
      },
      {
        "name": "getRegistry",
        "parameterTypes": []
      },
      {
        "name": "onObtainConnection",
        "parameterTypes": []
      },
      {
        "name": "onTransactionFailure",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "onTransactionOpen",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "onTransactionSuccess",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.metrics.DaoMetricsImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "isSupportShard",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "selectShard",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "selectShards",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.dao.shard.EmptyShardSelector",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "addDataSource",
        "parameterTypes": [
          "java.lang.String",
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "addQuerySpace",
        "parameterTypes": [
          "java.lang.String",
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "addTransactionFactory",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.txn.ITransactionFactory"
        ]
      },
      {
        "name": "getDefaultListener",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMainTxnGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedQuerySpaces",
        "parameterTypes": []
      },
      {
        "name": "getRegisteredTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTransactionFactory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isQuerySpaceDefined",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerTransaction",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction"
        ]
      },
      {
        "name": "removeDataSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeTransactionFactory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDefaultFactory",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionFactory"
        ]
      },
      {
        "name": "setDefaultListener",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionListener"
        ]
      },
      {
        "name": "setQuerySpaceToDialectConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuerySpaceToDialectMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTransactionFactoryMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTransactionMetrics",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionMetrics"
        ]
      },
      {
        "name": "setTxnGroupMap",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setTxnGroupMapConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "unregisterTransaction",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction"
        ]
      }
    ],
    "name": "io.nop.dao.txn.impl.DefaultTransactionManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getMainTxnGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRegisteredTransaction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTransactionManager",
        "parameterTypes": []
      },
      {
        "name": "isQuerySpaceDefined",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "runInTransaction",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.annotations.txn.TransactionPropagation",
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInTransactionAsync",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.annotations.txn.TransactionPropagation",
          "java.util.function.Function"
        ]
      },
      {
        "name": "runWithoutTransaction",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "setTransactionManager",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionManager"
        ]
      }
    ],
    "name": "io.nop.dao.txn.impl.TransactionTemplateImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "io.nop.core.reflect.aop.IMethodInvocation"
        ]
      }
    ],
    "name": "io.nop.dao.txn.interceptor.TransactionalMethodInterceptor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "setPropagation",
        "parameterTypes": [
          "io.nop.api.core.annotations.txn.TransactionPropagation"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      },
      {
        "name": "setTxnGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dao.utils.TransactionalFunctionInvoker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.demo.annotations.SendEmail",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "changeLogLevel",
        "parameterTypes": [
          "io.nop.api.core.util.LogLevel",
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadProcessCard",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "testMethod1",
        "parameterTypes": [
          "io.nop.demo.biz.MyRequest"
        ]
      },
      {
        "name": "testValidate",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.demo.biz.DemoBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.demo.biz.DemoBizModel__aop",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.demo.biz.MyRequest",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "io.nop.core.reflect.aop.IMethodInvocation"
        ]
      }
    ],
    "name": "io.nop.demo.interceptors.SendEmailInterceptor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addModelPath",
        "parameterTypes": [
          "io.nop.dev.core.module.DevResourcePath"
        ]
      },
      {
        "name": "getModelPaths",
        "parameterTypes": []
      },
      {
        "name": "getModuleId",
        "parameterTypes": []
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getRootPath",
        "parameterTypes": []
      },
      {
        "name": "setModelPaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRootPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dev.core.module.DevModuleResourcePaths",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDevResourcePath",
        "parameterTypes": []
      },
      {
        "name": "getEditorObjName",
        "parameterTypes": []
      },
      {
        "name": "getModelType",
        "parameterTypes": []
      },
      {
        "name": "isExists",
        "parameterTypes": []
      },
      {
        "name": "setDevResourcePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEditorObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExists",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setModelType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.dev.core.module.DevResourcePath",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "INSTANCE"
      }
    ],
    "methods": [
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.resource.IResourceStore"
        ]
      },
      {
        "name": "register",
        "parameterTypes": []
      },
      {
        "name": "unregister",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dev.core.resource.DevResourceNamespaceHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildDelta",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.xlang.xdef.IXDefNode",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveModel",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.dev.core.store.DevModelStoreImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getModules",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dev.service.biz.DevModuleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "DEFAULT_BASE_PACKAGE_NAME"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "EXT_ORM_REF_TABLE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_IMPORT_FILE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "XDEF_BIZ"
      }
    ],
    "methods": [],
    "name": "io.nop.dyn.dao.NopDynDaoConstants",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "APP_STATUS_PUBLISHED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "APP_STATUS_UNPUBLISHED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ENTITY_STORE_TYPE_REAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "ENTITY_STORE_TYPE_VIRTUAL"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FUNCTION_TYPE_LOADER"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FUNCTION_TYPE_MUTATION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FUNCTION_TYPE_QUERY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FUNCTION_TYPE_SUBSCRIPTION"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MODULE_STATUS_PUBLISHED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MODULE_STATUS_UNPUBLISHED"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PAGE_SCHEMA_TYPE_AMIS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PAGE_SCHEMA_TYPE_FORMILY"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PAGE_SCHEMA_TYPE_OPEN_TINY"
      }
    ],
    "methods": [],
    "name": "io.nop.dyn.dao._NopDynDaoConstants",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.dao.entity.NopDynApp",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dyn.dao.entity.NopDynAppModule",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynDomain"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity.NopDynDomain",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.dao.entity.NopDynEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "forceGetTableName",
        "parameterTypes": []
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getMainPagePath",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "isHasProp",
        "parameterTypes": []
      },
      {
        "name": "setEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity.NopDynEntityMeta",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.dao.entity.NopDynEntityRelation",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.dao.entity.NopDynEntityRelationMeta",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.dao.entity.NopDynFile",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFuncMetaNode",
        "parameterTypes": []
      },
      {
        "name": "getSourceXml",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dyn.dao.entity.NopDynFunctionMeta",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getNopModuleId",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dyn.dao.entity.NopDynModule",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dyn.dao.entity.NopDynModuleDep",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getPagePath",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.dyn.dao.entity.NopDynPage",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity.NopDynPropMeta",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.dao.entity.NopDynSql",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_appId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_appName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_appId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_appName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_moduleMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAppId",
        "parameterTypes": []
      },
      {
        "name": "getAppName",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getModuleMappings",
        "parameterTypes": []
      },
      {
        "name": "getRelatedModuleIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedModuleList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedModuleList_label",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAppId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAppName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelatedModuleIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynApp",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_appId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_app"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_appId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_module"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getApp",
        "parameterTypes": []
      },
      {
        "name": "getAppId",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getModule",
        "parameterTypes": []
      },
      {
        "name": "getModuleId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setApp",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynApp"
        ]
      },
      {
        "name": "setAppId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModule",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      },
      {
        "name": "setModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynAppModule",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_domainId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_domainName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_precision"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_scale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stdDomainName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stdSqlType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_domainId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_domainName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_precision"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_scale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stdDomainName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stdSqlType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomainId",
        "parameterTypes": []
      },
      {
        "name": "getDomainName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getStdDomainName",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomainId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomainName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStdDomainName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynDomain",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopBizState"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopDateFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopDateFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopDecimalFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopDecimalFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopDisplayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopFileFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopFileFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopFlowId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopIntFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopIntFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopLongFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopLongFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopObjType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopOwnerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopOwnerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopParentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopSortOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopStringFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopStringFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopTimestampFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nopTimestampFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extFields"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopBizState"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopChildren"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopDateFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopDateFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopDecimalFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopDecimalFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopDisplayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopFileFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopFileFld1Component"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopFileFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopFileFld2Component"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopFlowId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopIntFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopIntFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopLongFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopLongFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopObjType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopOwnerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopOwnerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopParent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopParentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopSortOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopStringFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopStringFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopTimestampFld1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nopTimestampFld2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getExtFields",
        "parameterTypes": []
      },
      {
        "name": "getNopBizState",
        "parameterTypes": []
      },
      {
        "name": "getNopChildren",
        "parameterTypes": []
      },
      {
        "name": "getNopDateFld1",
        "parameterTypes": []
      },
      {
        "name": "getNopDateFld2",
        "parameterTypes": []
      },
      {
        "name": "getNopDecimalFld1",
        "parameterTypes": []
      },
      {
        "name": "getNopDecimalFld2",
        "parameterTypes": []
      },
      {
        "name": "getNopDeptId",
        "parameterTypes": []
      },
      {
        "name": "getNopDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getNopFileFld1",
        "parameterTypes": []
      },
      {
        "name": "getNopFileFld1Component",
        "parameterTypes": []
      },
      {
        "name": "getNopFileFld2",
        "parameterTypes": []
      },
      {
        "name": "getNopFileFld2Component",
        "parameterTypes": []
      },
      {
        "name": "getNopFlowId",
        "parameterTypes": []
      },
      {
        "name": "getNopIntFld1",
        "parameterTypes": []
      },
      {
        "name": "getNopIntFld2",
        "parameterTypes": []
      },
      {
        "name": "getNopLongFld1",
        "parameterTypes": []
      },
      {
        "name": "getNopLongFld2",
        "parameterTypes": []
      },
      {
        "name": "getNopName",
        "parameterTypes": []
      },
      {
        "name": "getNopObjType",
        "parameterTypes": []
      },
      {
        "name": "getNopOwnerId",
        "parameterTypes": []
      },
      {
        "name": "getNopOwnerName",
        "parameterTypes": []
      },
      {
        "name": "getNopParent",
        "parameterTypes": []
      },
      {
        "name": "getNopParentId",
        "parameterTypes": []
      },
      {
        "name": "getNopSortOrder",
        "parameterTypes": []
      },
      {
        "name": "getNopStatus",
        "parameterTypes": []
      },
      {
        "name": "getNopStringFld1",
        "parameterTypes": []
      },
      {
        "name": "getNopStringFld2",
        "parameterTypes": []
      },
      {
        "name": "getNopTimestampFld1",
        "parameterTypes": []
      },
      {
        "name": "getNopTimestampFld2",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopBizState",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopDateFld1",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setNopDateFld2",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setNopDecimalFld1",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setNopDecimalFld2",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setNopDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopFileFld1",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopFileFld2",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopFlowId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopIntFld1",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNopIntFld2",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNopLongFld1",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNopLongFld2",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNopName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopObjType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopOwnerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopOwnerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopParent",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynEntity"
        ]
      },
      {
        "name": "setNopParentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopSortOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNopStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNopStringFld1",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopStringFld2",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNopTimestampFld1",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setNopTimestampFld2",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityMetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_extConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isExternal"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_querySpace"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_storeType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tableName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tagsText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityMetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extConfigComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_functionMetas"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isExternal"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_module"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_propMetas"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_querySpace"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_relationMetasForEntity1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_storeType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tableName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tagsText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getEntityMetaId",
        "parameterTypes": []
      },
      {
        "name": "getEntityName",
        "parameterTypes": []
      },
      {
        "name": "getExtConfig",
        "parameterTypes": []
      },
      {
        "name": "getExtConfigComponent",
        "parameterTypes": []
      },
      {
        "name": "getFunctionMetas",
        "parameterTypes": []
      },
      {
        "name": "getIsExternal",
        "parameterTypes": []
      },
      {
        "name": "getModule",
        "parameterTypes": []
      },
      {
        "name": "getModuleId",
        "parameterTypes": []
      },
      {
        "name": "getPropMetas",
        "parameterTypes": []
      },
      {
        "name": "getQuerySpace",
        "parameterTypes": []
      },
      {
        "name": "getRelationMetasForEntity1",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getStoreType",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTagsText",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityMetaId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsExternal",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setModule",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      },
      {
        "name": "setModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStoreType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagsText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynEntityMeta",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityId1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityId2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityName1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityName2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_relationName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityId1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityId2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityName1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityName2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_relationName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getEntityId1",
        "parameterTypes": []
      },
      {
        "name": "getEntityId2",
        "parameterTypes": []
      },
      {
        "name": "getEntityName1",
        "parameterTypes": []
      },
      {
        "name": "getEntityName2",
        "parameterTypes": []
      },
      {
        "name": "getRelationName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityId1",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityId2",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityName1",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityName2",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelationName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynEntityRelation",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entity1DisplayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entity1MetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entity1PropName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entity2DisplayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entity2MetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entity2PropName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_extConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_relMetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_relationName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_relationType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tableName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tagsText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entity1DisplayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entity1MetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entity1PropName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entity2DisplayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entity2MetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entity2PropName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityMeta1"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityMeta2"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extConfigComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_relMetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_relationName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_relationType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tableName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tagsText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getEntity1DisplayName",
        "parameterTypes": []
      },
      {
        "name": "getEntity1MetaId",
        "parameterTypes": []
      },
      {
        "name": "getEntity1PropName",
        "parameterTypes": []
      },
      {
        "name": "getEntity2DisplayName",
        "parameterTypes": []
      },
      {
        "name": "getEntity2MetaId",
        "parameterTypes": []
      },
      {
        "name": "getEntity2PropName",
        "parameterTypes": []
      },
      {
        "name": "getEntityMeta1",
        "parameterTypes": []
      },
      {
        "name": "getEntityMeta2",
        "parameterTypes": []
      },
      {
        "name": "getExtConfig",
        "parameterTypes": []
      },
      {
        "name": "getExtConfigComponent",
        "parameterTypes": []
      },
      {
        "name": "getRelMetaId",
        "parameterTypes": []
      },
      {
        "name": "getRelationName",
        "parameterTypes": []
      },
      {
        "name": "getRelationType",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTagsText",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntity1DisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntity1MetaId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntity1PropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntity2DisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntity2MetaId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntity2PropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityMeta1",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynEntityMeta"
        ]
      },
      {
        "name": "setEntityMeta2",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynEntityMeta"
        ]
      },
      {
        "name": "setExtConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelMetaId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelationName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRelationType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagsText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynEntityRelationMeta",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileLength"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_filePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileLength"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_filePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_module"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getFileId",
        "parameterTypes": []
      },
      {
        "name": "getFileLength",
        "parameterTypes": []
      },
      {
        "name": "getFileName",
        "parameterTypes": []
      },
      {
        "name": "getFilePath",
        "parameterTypes": []
      },
      {
        "name": "getFileType",
        "parameterTypes": []
      },
      {
        "name": "getModule",
        "parameterTypes": []
      },
      {
        "name": "getModuleId",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModule",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      },
      {
        "name": "setModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynFile",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityMetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_funcMeta"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_funcMetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_functionType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_returnGqlType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_returnType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_source"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tagsText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityMeta"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityMetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_funcMeta"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_funcMetaComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_funcMetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_functionType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_returnGqlType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_returnType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_source"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tagsText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getEntityMeta",
        "parameterTypes": []
      },
      {
        "name": "getEntityMetaId",
        "parameterTypes": []
      },
      {
        "name": "getFuncMeta",
        "parameterTypes": []
      },
      {
        "name": "getFuncMetaComponent",
        "parameterTypes": []
      },
      {
        "name": "getFuncMetaId",
        "parameterTypes": []
      },
      {
        "name": "getFunctionType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getReturnGqlType",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTagsText",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityMeta",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynEntityMeta"
        ]
      },
      {
        "name": "setEntityMetaId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFuncMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFuncMetaId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFunctionType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnGqlType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTagsText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynFunctionMeta",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_baseModuleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_basePackageName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_mavenGroupId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_moduleName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_moduleVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_appMappings"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_baseModule"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_baseModuleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_basePackageName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_derivedModules"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityMetas"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_files"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_mavenGroupId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_moduleName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_moduleVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_pages"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sqls"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAppMappings",
        "parameterTypes": []
      },
      {
        "name": "getBaseModule",
        "parameterTypes": []
      },
      {
        "name": "getBaseModuleId",
        "parameterTypes": []
      },
      {
        "name": "getBasePackageName",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDerivedModules",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getEntityMetas",
        "parameterTypes": []
      },
      {
        "name": "getFiles",
        "parameterTypes": []
      },
      {
        "name": "getMavenGroupId",
        "parameterTypes": []
      },
      {
        "name": "getModuleId",
        "parameterTypes": []
      },
      {
        "name": "getModuleName",
        "parameterTypes": []
      },
      {
        "name": "getModuleVersion",
        "parameterTypes": []
      },
      {
        "name": "getPages",
        "parameterTypes": []
      },
      {
        "name": "getRelatedAppIdList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedAppList",
        "parameterTypes": []
      },
      {
        "name": "getRelatedAppList_label",
        "parameterTypes": []
      },
      {
        "name": "getSqls",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBaseModule",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      },
      {
        "name": "setBaseModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBasePackageName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMavenGroupId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModuleVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRelatedAppIdList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynModule",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_depModuleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_depModule"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_depModuleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_module"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDepModule",
        "parameterTypes": []
      },
      {
        "name": "getDepModuleId",
        "parameterTypes": []
      },
      {
        "name": "getModule",
        "parameterTypes": []
      },
      {
        "name": "getModuleId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDepModule",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      },
      {
        "name": "setDepModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModule",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      },
      {
        "name": "setModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynModuleDep",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_pageContent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_pageGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_pageId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_pageName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_pageSchemaType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_module"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_pageContent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_pageContentComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_pageGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_pageId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_pageName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_pageSchemaType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getModule",
        "parameterTypes": []
      },
      {
        "name": "getModuleId",
        "parameterTypes": []
      },
      {
        "name": "getPageContent",
        "parameterTypes": []
      },
      {
        "name": "getPageContentComponent",
        "parameterTypes": []
      },
      {
        "name": "getPageGroup",
        "parameterTypes": []
      },
      {
        "name": "getPageId",
        "parameterTypes": []
      },
      {
        "name": "getPageName",
        "parameterTypes": []
      },
      {
        "name": "getPageSchemaType",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModule",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      },
      {
        "name": "setModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPageContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPageGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPageId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPageName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPageSchemaType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynPage",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_defaultValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dictName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_domainId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dynPropMapping"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityMetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_extConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isMandatory"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_precision"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_propId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_propMetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_propName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_refEntityName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_refPropDisplayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_refPropName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_refSetSort"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_refTagsText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_scale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stdDomainName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stdSqlType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tagsText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_uiControl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_uiShow"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_defaultValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dictName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_domain"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_domainId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dynPropMapping"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityMeta"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityMetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extConfigComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isMandatory"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_precision"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_propId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_propMetaId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_propName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_refEntityName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_refPropDisplayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_refPropName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_refSetSort"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_refTagsText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_scale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stdDomainName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stdSqlType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tagsText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_uiControl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_uiShow"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDictName",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getDomainId",
        "parameterTypes": []
      },
      {
        "name": "getDynPropMapping",
        "parameterTypes": []
      },
      {
        "name": "getEntityMeta",
        "parameterTypes": []
      },
      {
        "name": "getEntityMetaId",
        "parameterTypes": []
      },
      {
        "name": "getExtConfig",
        "parameterTypes": []
      },
      {
        "name": "getExtConfigComponent",
        "parameterTypes": []
      },
      {
        "name": "getIsMandatory",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getPropId",
        "parameterTypes": []
      },
      {
        "name": "getPropMetaId",
        "parameterTypes": []
      },
      {
        "name": "getPropName",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityName",
        "parameterTypes": []
      },
      {
        "name": "getRefPropDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getRefPropName",
        "parameterTypes": []
      },
      {
        "name": "getRefSetSort",
        "parameterTypes": []
      },
      {
        "name": "getRefTagsText",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getStdDomainName",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "getTagsText",
        "parameterTypes": []
      },
      {
        "name": "getUiControl",
        "parameterTypes": []
      },
      {
        "name": "getUiShow",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDictName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynDomain"
        ]
      },
      {
        "name": "setDomainId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDynPropMapping",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityMeta",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynEntityMeta"
        ]
      },
      {
        "name": "setEntityMetaId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsMandatory",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPropId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPropMetaId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefPropDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefSetSort",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefTagsText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStdDomainName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagsText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUiControl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUiShow",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynPropMeta",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_args"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_batchLoadSelection"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cacheKeyExpr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cacheName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_colNameCamelCase"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_disableLogicalDelete"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_enableFilter"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fetchSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_querySpace"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_refreshBehavior"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_rowType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_source"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sqlId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sqlKind"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sqlMethod"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_timeout"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_args"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_argsComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_batchLoadSelection"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cacheKeyExpr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cacheName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_colNameCamelCase"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_disableLogicalDelete"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_enableFilter"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fetchSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_module"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_moduleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_querySpace"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_refreshBehavior"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_rowType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_source"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sqlId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sqlKind"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sqlMethod"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_timeout"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getArgsComponent",
        "parameterTypes": []
      },
      {
        "name": "getBatchLoadSelection",
        "parameterTypes": []
      },
      {
        "name": "getCacheKeyExpr",
        "parameterTypes": []
      },
      {
        "name": "getCacheName",
        "parameterTypes": []
      },
      {
        "name": "getColNameCamelCase",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisableLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getEnableFilter",
        "parameterTypes": []
      },
      {
        "name": "getFetchSize",
        "parameterTypes": []
      },
      {
        "name": "getModule",
        "parameterTypes": []
      },
      {
        "name": "getModuleId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getQuerySpace",
        "parameterTypes": []
      },
      {
        "name": "getRefreshBehavior",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRowType",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getSqlId",
        "parameterTypes": []
      },
      {
        "name": "getSqlKind",
        "parameterTypes": []
      },
      {
        "name": "getSqlMethod",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBatchLoadSelection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCacheKeyExpr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCacheName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColNameCamelCase",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisableLogicalDelete",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnableFilter",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setFetchSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setModule",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      },
      {
        "name": "setModuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefreshBehavior",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRowType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlKind",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.dyn.dao.entity._gen._NopDynSql",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "bizObjectManager"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "formatGenCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "genWebFiles"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "ormSessionFactory"
      }
    ],
    "methods": [
      {
        "name": "batchLoadApp",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynApp"
        ]
      },
      {
        "name": "batchLoadModule",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      },
      {
        "name": "genModuleBizModels",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      },
      {
        "name": "genModuleCoreFiles",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      },
      {
        "name": "genModuleCoreFiles",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule",
          "io.nop.orm.model.OrmModel"
        ]
      },
      {
        "name": "genModuleWebFiles",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      },
      {
        "name": "genModuleWebFiles",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule",
          "io.nop.core.resource.store.InMemoryResourceStore"
        ]
      },
      {
        "name": "generateBizModel",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynEntityMeta"
        ]
      },
      {
        "name": "generateForAllApps",
        "parameterTypes": []
      },
      {
        "name": "generateForAllModules",
        "parameterTypes": []
      },
      {
        "name": "generateForApp",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynApp"
        ]
      },
      {
        "name": "generateForModule",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "reloadModel",
        "parameterTypes": []
      },
      {
        "name": "removeDynModule",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynModule"
        ]
      }
    ],
    "name": "io.nop.dyn.service.codegen.DynCodeGen",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.service.codegen.DynCodeGen__aop",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.service.entity.NopDynAppBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.service.entity.NopDynAppModuleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.service.entity.NopDynDomainBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.service.entity.NopDynEntityBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.service.entity.NopDynEntityMetaBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.service.entity.NopDynEntityRelationBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.service.entity.NopDynEntityRelationMetaBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.service.entity.NopDynFileBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "codeGen"
      }
    ],
    "methods": [
      {
        "name": "afterEntityChange",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynFunctionMeta",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.dyn.service.entity.NopDynFunctionMetaBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "dynCodeGen"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "fileStore"
      }
    ],
    "methods": [
      {
        "name": "exportExcel",
        "parameterTypes": [
          "java.util.List",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "generateByAI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "importExcel",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.dyn.service.entity.NopDynModuleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.service.entity.NopDynModuleDepBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkValidPage",
        "parameterTypes": [
          "io.nop.dyn.dao.entity.NopDynPage"
        ]
      },
      {
        "name": "defaultPrepareSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareUpdate",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getPage",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getPageJson",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "savePageJson",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.dyn.service.entity.NopDynPageBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.service.entity.NopDynPropMetaBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.dyn.service.entity.NopDynSqlBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFieldLabel",
        "parameterTypes": []
      },
      {
        "name": "getFieldModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldNameMap",
        "parameterTypes": []
      },
      {
        "name": "getPropOrName",
        "parameterTypes": []
      },
      {
        "name": "getResultComponentType",
        "parameterTypes": []
      },
      {
        "name": "getResultType",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "initStripText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "toNameMap",
        "parameterTypes": [
          "java.util.List",
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model.ImportFieldModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.excel.imp.model.ImportModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFieldLabel",
        "parameterTypes": []
      },
      {
        "name": "getFieldModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldNameMap",
        "parameterTypes": []
      },
      {
        "name": "getResultComponentType",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "initStripText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "matchNamePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model.ImportSheetModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getDisplayMode",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExportExpr",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFieldDecider",
        "parameterTypes": []
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getGroupField",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNormalizeFieldsExpr",
        "parameterTypes": []
      },
      {
        "name": "getParentProp",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getStripText",
        "parameterTypes": []
      },
      {
        "name": "getTypeProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownField",
        "parameterTypes": []
      },
      {
        "name": "getValueExpr",
        "parameterTypes": []
      },
      {
        "name": "getWhen",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasFields",
        "parameterTypes": []
      },
      {
        "name": "isComputed",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreWhenEmpty",
        "parameterTypes": []
      },
      {
        "name": "isList",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isVirtual",
        "parameterTypes": []
      },
      {
        "name": "keySet_fields",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setComputed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDisplayMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExportExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setFieldDecider",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setGroupField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreWhenEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setList",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNormalizeFieldsExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setParentProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setStripText",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTypeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownField",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "setValueExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setVirtual",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWhen",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model._gen._ImportFieldModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addSheet",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportSheetModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAfterParse",
        "parameterTypes": []
      },
      {
        "name": "getBeforeParse",
        "parameterTypes": []
      },
      {
        "name": "getResultType",
        "parameterTypes": []
      },
      {
        "name": "getSheet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSheets",
        "parameterTypes": []
      },
      {
        "name": "getTemplatePath",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "getXdef",
        "parameterTypes": []
      },
      {
        "name": "hasSheet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSheets",
        "parameterTypes": []
      },
      {
        "name": "isDefaultStripText",
        "parameterTypes": []
      },
      {
        "name": "isDump",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreUnknownSheet",
        "parameterTypes": []
      },
      {
        "name": "keySet_sheets",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAfterParse",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setBeforeParse",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setDefaultStripText",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDump",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIgnoreUnknownSheet",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setResultType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setSheets",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTemplatePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      },
      {
        "name": "setXdef",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model._gen._ImportModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportSheetModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAfterParse",
        "parameterTypes": []
      },
      {
        "name": "getBeforeParse",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayMode",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFieldDecider",
        "parameterTypes": []
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNamePattern",
        "parameterTypes": []
      },
      {
        "name": "getNormalizeFieldsExpr",
        "parameterTypes": []
      },
      {
        "name": "getResultType",
        "parameterTypes": []
      },
      {
        "name": "getSheetNameProp",
        "parameterTypes": []
      },
      {
        "name": "getSheetVarName",
        "parameterTypes": []
      },
      {
        "name": "getUnknownField",
        "parameterTypes": []
      },
      {
        "name": "getWhen",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasFields",
        "parameterTypes": []
      },
      {
        "name": "isIgnore",
        "parameterTypes": []
      },
      {
        "name": "isList",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isMultiple",
        "parameterTypes": []
      },
      {
        "name": "isMultipleAsMap",
        "parameterTypes": []
      },
      {
        "name": "keySet_fields",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAfterParse",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setBeforeParse",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldDecider",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIgnore",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setList",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMultiple",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMultipleAsMap",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNamePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNormalizeFieldsExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setResultType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setSheetNameProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSheetVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownField",
        "parameterTypes": [
          "io.nop.excel.imp.model.ImportFieldModel"
        ]
      },
      {
        "name": "setWhen",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      }
    ],
    "name": "io.nop.excel.imp.model._gen._ImportSheetModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "isSameStyle",
        "parameterTypes": [
          "io.nop.excel.model.ExcelBorderStyle",
          "io.nop.excel.model.ExcelBorderStyle"
        ]
      }
    ],
    "name": "io.nop.excel.model.ExcelBorderStyle",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getColIndex",
        "parameterTypes": []
      },
      {
        "name": "getColOffset",
        "parameterTypes": []
      },
      {
        "name": "getDownRealCell",
        "parameterTypes": []
      },
      {
        "name": "getLeftRealCell",
        "parameterTypes": []
      },
      {
        "name": "getModelCellName",
        "parameterTypes": []
      },
      {
        "name": "getRealCell",
        "parameterTypes": []
      },
      {
        "name": "getRightRealCell",
        "parameterTypes": []
      },
      {
        "name": "getRowIndex",
        "parameterTypes": []
      },
      {
        "name": "getRowOffset",
        "parameterTypes": []
      },
      {
        "name": "getTopRealCell",
        "parameterTypes": []
      },
      {
        "name": "isExportFormattedValue",
        "parameterTypes": []
      },
      {
        "name": "isProxyCell",
        "parameterTypes": []
      },
      {
        "name": "makeModel",
        "parameterTypes": []
      },
      {
        "name": "setColOffset",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRealCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "setRowOffset",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.excel.model.ExcelCell",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "copy",
        "parameterTypes": []
      },
      {
        "name": "getStartPosition",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.excel.model.ExcelClientAnchor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.ExcelColumnConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "DEFAULT_FONT"
      }
    ],
    "methods": [
      {
        "name": "getFontSizeString",
        "parameterTypes": []
      },
      {
        "name": "toCssStyle",
        "parameterTypes": [
          "java.lang.StringBuilder"
        ]
      }
    ],
    "name": "io.nop.excel.model.ExcelFont",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "calcSize",
        "parameterTypes": [
          "io.nop.excel.model.IExcelSheet"
        ]
      },
      {
        "name": "data",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getEmbedId",
        "parameterTypes": []
      },
      {
        "name": "getHeight",
        "parameterTypes": []
      },
      {
        "name": "getLeft",
        "parameterTypes": []
      },
      {
        "name": "getMimeType",
        "parameterTypes": []
      },
      {
        "name": "getTop",
        "parameterTypes": []
      },
      {
        "name": "getWidth",
        "parameterTypes": []
      },
      {
        "name": "makeAnchor",
        "parameterTypes": []
      },
      {
        "name": "setDataBytes",
        "parameterTypes": [
          "[B"
        ]
      },
      {
        "name": "setEmbedId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeight",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setLeft",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setTop",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setWidth",
        "parameterTypes": [
          "double"
        ]
      }
    ],
    "name": "io.nop.excel.model.ExcelImage",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.ExcelPageMargins",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "makeCell",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.excel.model.ExcelRow",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.excel.model.ExcelSheet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBorder",
        "parameterTypes": []
      },
      {
        "name": "hasBorder",
        "parameterTypes": []
      },
      {
        "name": "isAllBorderSameStyle",
        "parameterTypes": []
      },
      {
        "name": "isDateFormat",
        "parameterTypes": []
      },
      {
        "name": "setNumberFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toCssStyle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.excel.model.ExcelStyle",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getColTypes",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "newCell",
        "parameterTypes": []
      },
      {
        "name": "newProxyCell",
        "parameterTypes": [
          "io.nop.core.model.table.ICell",
          "int",
          "int"
        ]
      },
      {
        "name": "newRow",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.excel.model.ExcelTable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getExcelFormatValue",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "removeSheet",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.excel.model.ExcelWorkbook",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addColChildCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "addColDuplicateCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "addColDuplicateCells",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addColExtendCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "addRowChildCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "addRowDuplicateCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "addRowDuplicateCells",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addRowExtendCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "getCellPosition",
        "parameterTypes": []
      },
      {
        "name": "getColChildCells",
        "parameterTypes": []
      },
      {
        "name": "getColDuplicateCells",
        "parameterTypes": []
      },
      {
        "name": "getColExpandLevel",
        "parameterTypes": []
      },
      {
        "name": "getColExpandOffset",
        "parameterTypes": []
      },
      {
        "name": "getColExpandSpan",
        "parameterTypes": []
      },
      {
        "name": "getColExtendCells",
        "parameterTypes": []
      },
      {
        "name": "getColIndex",
        "parameterTypes": []
      },
      {
        "name": "getColParent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColParentCell",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRowChildCells",
        "parameterTypes": []
      },
      {
        "name": "getRowDuplicateCells",
        "parameterTypes": []
      },
      {
        "name": "getRowExpandLevel",
        "parameterTypes": []
      },
      {
        "name": "getRowExpandOffset",
        "parameterTypes": []
      },
      {
        "name": "getRowExpandSpan",
        "parameterTypes": []
      },
      {
        "name": "getRowExtendCells",
        "parameterTypes": []
      },
      {
        "name": "getRowIndex",
        "parameterTypes": []
      },
      {
        "name": "getRowParent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRowParentCell",
        "parameterTypes": []
      },
      {
        "name": "isColDuplicate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isRowDuplicate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isTopColCell",
        "parameterTypes": []
      },
      {
        "name": "isTopRowCell",
        "parameterTypes": []
      },
      {
        "name": "setCellPosition",
        "parameterTypes": [
          "io.nop.core.model.table.CellPosition"
        ]
      },
      {
        "name": "setColExpandLevel",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setColExpandOffset",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setColExpandSpan",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setColParentCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRowExpandLevel",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRowExpandOffset",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRowExpandSpan",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRowParentCell",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      }
    ],
    "name": "io.nop.excel.model.XptCellModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "isUseExportFormula",
        "parameterTypes": []
      },
      {
        "name": "setUseExportFormula",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.excel.model.XptSheetModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.excel.model.XptWorkbookModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelBorderStyle"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColor",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getWeight",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setColor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.excel.model.constants.ExcelLineStyle"
        ]
      },
      {
        "name": "setWeight",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelBorderStyle",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelCell"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getFormula",
        "parameterTypes": []
      },
      {
        "name": "getMergeAcross",
        "parameterTypes": []
      },
      {
        "name": "getMergeDown",
        "parameterTypes": []
      },
      {
        "name": "getModel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRichText",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFormula",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMergeAcross",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMergeDown",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setModel",
        "parameterTypes": [
          "io.nop.excel.model.XptCellModel"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRichText",
        "parameterTypes": [
          "io.nop.excel.model.ExcelRichText"
        ]
      },
      {
        "name": "setStyleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelCell",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelClientAnchor"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.excel.model.constants.ExcelAnchorType"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelClientAnchor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelColumnConfig"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getStyleIdExpr",
        "parameterTypes": []
      },
      {
        "name": "getWidth",
        "parameterTypes": []
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStyleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStyleIdExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setWidth",
        "parameterTypes": [
          "java.lang.Double"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelColumnConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelFont"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCharSet",
        "parameterTypes": []
      },
      {
        "name": "getFontColor",
        "parameterTypes": []
      },
      {
        "name": "getFontFamily",
        "parameterTypes": []
      },
      {
        "name": "getFontName",
        "parameterTypes": []
      },
      {
        "name": "getFontSize",
        "parameterTypes": []
      },
      {
        "name": "getUnderlineStyle",
        "parameterTypes": []
      },
      {
        "name": "getVerticalAlign",
        "parameterTypes": []
      },
      {
        "name": "isBold",
        "parameterTypes": []
      },
      {
        "name": "isItalic",
        "parameterTypes": []
      },
      {
        "name": "isStrikeout",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBold",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCharSet",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setFontColor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFontFamily",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFontName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFontSize",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setItalic",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStrikeout",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUnderlineStyle",
        "parameterTypes": [
          "io.nop.excel.model.constants.ExcelFontUnderline"
        ]
      },
      {
        "name": "setVerticalAlign",
        "parameterTypes": [
          "io.nop.excel.model.constants.ExcelFontVerticalAlign"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelFont",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelImage"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAnchor",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getDataExpr",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getImgType",
        "parameterTypes": []
      },
      {
        "name": "getLinkExpr",
        "parameterTypes": []
      },
      {
        "name": "getLinkUrl",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRotateDegree",
        "parameterTypes": []
      },
      {
        "name": "getTestExpr",
        "parameterTypes": []
      },
      {
        "name": "isNoChangeAspect",
        "parameterTypes": []
      },
      {
        "name": "isPrint",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAnchor",
        "parameterTypes": [
          "io.nop.excel.model.ExcelClientAnchor"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "io.nop.commons.bytes.ByteString"
        ]
      },
      {
        "name": "setDataExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImgType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLinkExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setLinkUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNoChangeAspect",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPrint",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRotateDegree",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "setTestExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelImage",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelPageMargins"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBottom",
        "parameterTypes": []
      },
      {
        "name": "getFooter",
        "parameterTypes": []
      },
      {
        "name": "getHeader",
        "parameterTypes": []
      },
      {
        "name": "getLeft",
        "parameterTypes": []
      },
      {
        "name": "getRight",
        "parameterTypes": []
      },
      {
        "name": "getTop",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBottom",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setFooter",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setHeader",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setLeft",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setRight",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setTop",
        "parameterTypes": [
          "java.lang.Double"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelPageMargins",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelRow"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCells",
        "parameterTypes": []
      },
      {
        "name": "getHeight",
        "parameterTypes": []
      },
      {
        "name": "getModel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "isAutoFitHeight",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAutoFitHeight",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCells",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setHeight",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setModel",
        "parameterTypes": [
          "io.nop.excel.model.XptRowModel"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStyleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelRow",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAnnotation",
        "parameterTypes": [
          "io.nop.excel.model.ExcelAnnotation"
        ]
      },
      {
        "name": "addConditionalStyle",
        "parameterTypes": [
          "io.nop.excel.model.ExcelConditionalStyle"
        ]
      },
      {
        "name": "addImage",
        "parameterTypes": [
          "io.nop.excel.model.ExcelImage"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelSheet"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAnnotation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAnnotations",
        "parameterTypes": []
      },
      {
        "name": "getConditionalStyle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConditionalStyles",
        "parameterTypes": []
      },
      {
        "name": "getDefaultColumnWidth",
        "parameterTypes": []
      },
      {
        "name": "getDefaultRowHeight",
        "parameterTypes": []
      },
      {
        "name": "getImage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getImages",
        "parameterTypes": []
      },
      {
        "name": "getModel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPageBreaks",
        "parameterTypes": []
      },
      {
        "name": "getPageMargins",
        "parameterTypes": []
      },
      {
        "name": "getPageSetup",
        "parameterTypes": []
      },
      {
        "name": "getPrint",
        "parameterTypes": []
      },
      {
        "name": "getSheetOptions",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "hasAnnotation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAnnotations",
        "parameterTypes": []
      },
      {
        "name": "hasConditionalStyle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasConditionalStyles",
        "parameterTypes": []
      },
      {
        "name": "hasImage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasImages",
        "parameterTypes": []
      },
      {
        "name": "keySet_annotations",
        "parameterTypes": []
      },
      {
        "name": "keySet_conditionalStyles",
        "parameterTypes": []
      },
      {
        "name": "keySet_images",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAnnotations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setConditionalStyles",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultColumnWidth",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setDefaultRowHeight",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setImages",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setModel",
        "parameterTypes": [
          "io.nop.excel.model.XptSheetModel"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPageBreaks",
        "parameterTypes": [
          "io.nop.excel.model.ExcelPageBreaks"
        ]
      },
      {
        "name": "setPageMargins",
        "parameterTypes": [
          "io.nop.excel.model.ExcelPageMargins"
        ]
      },
      {
        "name": "setPageSetup",
        "parameterTypes": [
          "io.nop.excel.model.ExcelPageSetup"
        ]
      },
      {
        "name": "setPrint",
        "parameterTypes": [
          "io.nop.excel.model.ExcelPrint"
        ]
      },
      {
        "name": "setSheetOptions",
        "parameterTypes": [
          "io.nop.excel.model.ExcelSheetOptions"
        ]
      },
      {
        "name": "setTable",
        "parameterTypes": [
          "io.nop.excel.model.ExcelTable"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelSheet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelStyle"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBottomBorder",
        "parameterTypes": []
      },
      {
        "name": "getDiagonalLeftBorder",
        "parameterTypes": []
      },
      {
        "name": "getDiagonalRightBorder",
        "parameterTypes": []
      },
      {
        "name": "getFillBgColor",
        "parameterTypes": []
      },
      {
        "name": "getFillFgColor",
        "parameterTypes": []
      },
      {
        "name": "getFillPattern",
        "parameterTypes": []
      },
      {
        "name": "getFont",
        "parameterTypes": []
      },
      {
        "name": "getHorizontalAlign",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIndent",
        "parameterTypes": []
      },
      {
        "name": "getLeftBorder",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNumberFormat",
        "parameterTypes": []
      },
      {
        "name": "getRightBorder",
        "parameterTypes": []
      },
      {
        "name": "getRotate",
        "parameterTypes": []
      },
      {
        "name": "getTopBorder",
        "parameterTypes": []
      },
      {
        "name": "getVerticalAlign",
        "parameterTypes": []
      },
      {
        "name": "isShrinkToFit",
        "parameterTypes": []
      },
      {
        "name": "isWrapText",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBottomBorder",
        "parameterTypes": [
          "io.nop.excel.model.ExcelBorderStyle"
        ]
      },
      {
        "name": "setDiagonalLeftBorder",
        "parameterTypes": [
          "io.nop.excel.model.ExcelBorderStyle"
        ]
      },
      {
        "name": "setDiagonalRightBorder",
        "parameterTypes": [
          "io.nop.excel.model.ExcelBorderStyle"
        ]
      },
      {
        "name": "setFillBgColor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFillFgColor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFillPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFont",
        "parameterTypes": [
          "io.nop.excel.model.ExcelFont"
        ]
      },
      {
        "name": "setHorizontalAlign",
        "parameterTypes": [
          "io.nop.excel.model.constants.ExcelHorizontalAlignment"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIndent",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLeftBorder",
        "parameterTypes": [
          "io.nop.excel.model.ExcelBorderStyle"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNumberFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRightBorder",
        "parameterTypes": [
          "io.nop.excel.model.ExcelBorderStyle"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setShrinkToFit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTopBorder",
        "parameterTypes": [
          "io.nop.excel.model.ExcelBorderStyle"
        ]
      },
      {
        "name": "setVerticalAlign",
        "parameterTypes": [
          "io.nop.excel.model.constants.ExcelVerticalAlignment"
        ]
      },
      {
        "name": "setWrapText",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelStyle",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelTable"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCols",
        "parameterTypes": []
      },
      {
        "name": "getRows",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCols",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRows",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelTable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "io.nop.excel.model.ExcelProperty"
        ]
      },
      {
        "name": "addSheet",
        "parameterTypes": [
          "io.nop.excel.model.ExcelSheet"
        ]
      },
      {
        "name": "addStyle",
        "parameterTypes": [
          "io.nop.excel.model.ExcelStyle"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.ExcelWorkbook"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultFont",
        "parameterTypes": []
      },
      {
        "name": "getModel",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getSheet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSheets",
        "parameterTypes": []
      },
      {
        "name": "getStyle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStyles",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "hasSheet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSheets",
        "parameterTypes": []
      },
      {
        "name": "hasStyle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasStyles",
        "parameterTypes": []
      },
      {
        "name": "keySet_props",
        "parameterTypes": []
      },
      {
        "name": "keySet_sheets",
        "parameterTypes": []
      },
      {
        "name": "keySet_styles",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultFont",
        "parameterTypes": [
          "io.nop.excel.model.ExcelFont"
        ]
      },
      {
        "name": "setModel",
        "parameterTypes": [
          "io.nop.excel.model.XptWorkbookModel"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSheets",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStyles",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._ExcelWorkbook",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.XptCellModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColParent",
        "parameterTypes": []
      },
      {
        "name": "getColTestExpr",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getDs",
        "parameterTypes": []
      },
      {
        "name": "getEditorId",
        "parameterTypes": []
      },
      {
        "name": "getExpandExpr",
        "parameterTypes": []
      },
      {
        "name": "getExpandInplaceCount",
        "parameterTypes": []
      },
      {
        "name": "getExpandOrderBy",
        "parameterTypes": []
      },
      {
        "name": "getExpandType",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": []
      },
      {
        "name": "getFormatExpr",
        "parameterTypes": []
      },
      {
        "name": "getLinkExpr",
        "parameterTypes": []
      },
      {
        "name": "getProcessExpr",
        "parameterTypes": []
      },
      {
        "name": "getRowParent",
        "parameterTypes": []
      },
      {
        "name": "getRowTestExpr",
        "parameterTypes": []
      },
      {
        "name": "getStyleIdExpr",
        "parameterTypes": []
      },
      {
        "name": "getValueExpr",
        "parameterTypes": []
      },
      {
        "name": "getViewerId",
        "parameterTypes": []
      },
      {
        "name": "isColExtendForSibling",
        "parameterTypes": []
      },
      {
        "name": "isExportFormattedValue",
        "parameterTypes": []
      },
      {
        "name": "isExportFormula",
        "parameterTypes": []
      },
      {
        "name": "isKeepExpandEmpty",
        "parameterTypes": []
      },
      {
        "name": "isRowExtendForSibling",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setColExtendForSibling",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setColParent",
        "parameterTypes": [
          "io.nop.core.model.table.CellPosition"
        ]
      },
      {
        "name": "setColTestExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEditorId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExpandExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setExpandInplaceCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setExpandOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setExpandType",
        "parameterTypes": [
          "io.nop.excel.model.constants.XptExpandType"
        ]
      },
      {
        "name": "setExportFormattedValue",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExportFormula",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFormatExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setKeepExpandEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLinkExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setProcessExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setRowExtendForSibling",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRowParent",
        "parameterTypes": [
          "io.nop.core.model.table.CellPosition"
        ]
      },
      {
        "name": "setRowTestExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "setStyleIdExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setValueExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setViewerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._XptCellModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.XptSheetModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAfterExpand",
        "parameterTypes": []
      },
      {
        "name": "getBeforeExpand",
        "parameterTypes": []
      },
      {
        "name": "getBeginLoop",
        "parameterTypes": []
      },
      {
        "name": "getEndLoop",
        "parameterTypes": []
      },
      {
        "name": "getLoopIndexName",
        "parameterTypes": []
      },
      {
        "name": "getLoopItemsName",
        "parameterTypes": []
      },
      {
        "name": "getLoopVarName",
        "parameterTypes": []
      },
      {
        "name": "getSheetNameExpr",
        "parameterTypes": []
      },
      {
        "name": "getSheetVarName",
        "parameterTypes": []
      },
      {
        "name": "getTestExpr",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAfterExpand",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setBeforeExpand",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setBeginLoop",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setEndLoop",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setLoopIndexName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoopItemsName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoopVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSheetNameExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setSheetVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTestExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._XptSheetModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addEditr",
        "parameterTypes": [
          "io.nop.excel.model.XptXplModel"
        ]
      },
      {
        "name": "addViewer",
        "parameterTypes": [
          "io.nop.excel.model.XptXplModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.excel.model.XptWorkbookModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAfterExpand",
        "parameterTypes": []
      },
      {
        "name": "getBeforeExpand",
        "parameterTypes": []
      },
      {
        "name": "getBeginLoop",
        "parameterTypes": []
      },
      {
        "name": "getEditors",
        "parameterTypes": []
      },
      {
        "name": "getEditr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEndLoop",
        "parameterTypes": []
      },
      {
        "name": "getLoopIndexName",
        "parameterTypes": []
      },
      {
        "name": "getLoopItemsName",
        "parameterTypes": []
      },
      {
        "name": "getLoopVarName",
        "parameterTypes": []
      },
      {
        "name": "getViewer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getViewers",
        "parameterTypes": []
      },
      {
        "name": "hasEditors",
        "parameterTypes": []
      },
      {
        "name": "hasEditr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasViewer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasViewers",
        "parameterTypes": []
      },
      {
        "name": "keySet_editors",
        "parameterTypes": []
      },
      {
        "name": "keySet_viewers",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAfterExpand",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setBeforeExpand",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setBeginLoop",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setEditors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEndLoop",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setLoopIndexName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoopItemsName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLoopVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setViewers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.excel.model._gen._XptWorkbookModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "c"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "r"
      }
    ],
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.excel.model.constants.XptExpandType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "reportEngine"
      }
    ],
    "methods": [
      {
        "name": "download",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "downloadModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDemoReports",
        "parameterTypes": []
      },
      {
        "name": "getReportBeans",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "renderHtml",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.extensions.demo.biz.ReportDemoBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "IGNORE_HEADERS"
      }
    ],
    "methods": [
      {
        "name": "downloadAsync",
        "parameterTypes": [
          "io.nop.api.core.beans.ApiRequest"
        ]
      },
      {
        "name": "getGraphQLEngine",
        "parameterTypes": []
      },
      {
        "name": "shouldIgnoreHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uploadAsync",
        "parameterTypes": [
          "io.nop.api.core.beans.ApiRequest"
        ]
      }
    ],
    "name": "io.nop.file.core.AbstractGraphQLFileService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "fileStore"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "maxFileSize"
      }
    ],
    "methods": [
      {
        "name": "checkBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkFileExt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkMaxSize",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "checkUploadAuth",
        "parameterTypes": [
          "io.nop.file.core.UploadRequestBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "download",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "loadFileRecord",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setAllowedFileExts",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setBizAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IBizAuthChecker"
        ]
      },
      {
        "name": "setFileStore",
        "parameterTypes": [
          "io.nop.file.core.IFileStore"
        ]
      },
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "upload",
        "parameterTypes": [
          "io.nop.file.core.UploadRequestBean",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.file.core.NopFileStoreBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBizObjId",
        "parameterTypes": []
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFileExt",
        "parameterTypes": []
      },
      {
        "name": "getFileName",
        "parameterTypes": []
      },
      {
        "name": "getInputStream",
        "parameterTypes": []
      },
      {
        "name": "getLastModified",
        "parameterTypes": []
      },
      {
        "name": "getLength",
        "parameterTypes": []
      },
      {
        "name": "getMimeType",
        "parameterTypes": []
      },
      {
        "name": "setBizObjId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInputStream",
        "parameterTypes": [
          "java.io.InputStream"
        ]
      },
      {
        "name": "setLastModified",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setLength",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setMimeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.file.core.UploadRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFilename",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.file.core.UploadResponseBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.file.dao.entity.NopFileRecord",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileExt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileHash"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileLastModified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileLength"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_filePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_mimeType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileExt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileHash"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileLastModified"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileLength"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_filePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_mimeType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBizObjId",
        "parameterTypes": []
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFileExt",
        "parameterTypes": []
      },
      {
        "name": "getFileHash",
        "parameterTypes": []
      },
      {
        "name": "getFileId",
        "parameterTypes": []
      },
      {
        "name": "getFileLastModified",
        "parameterTypes": []
      },
      {
        "name": "getFileLength",
        "parameterTypes": []
      },
      {
        "name": "getFileName",
        "parameterTypes": []
      },
      {
        "name": "getFilePath",
        "parameterTypes": []
      },
      {
        "name": "getMimeType",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBizObjId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileExt",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileHash",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileLastModified",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setFileLength",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMimeType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.file.dao.entity._gen._NopFileRecord",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "attachFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "checkMaxSize",
        "parameterTypes": [
          "long",
          "long"
        ]
      },
      {
        "name": "decodeFileId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "detachFile",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFileLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFileResource",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "newFileId",
        "parameterTypes": []
      },
      {
        "name": "newPath",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "removeTempFileByOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveFile",
        "parameterTypes": [
          "io.nop.file.core.UploadRequestBean",
          "long"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setKeepFileExt",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocalDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setResourceStore",
        "parameterTypes": [
          "io.nop.core.resource.IResourceStore"
        ]
      }
    ],
    "name": "io.nop.file.dao.store.DaoResourceFileStore",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildRequest",
        "parameterTypes": [
          "io.vertx.core.http.HttpServerRequest",
          "java.lang.Object"
        ]
      },
      {
        "name": "download",
        "parameterTypes": [
          "io.vertx.ext.web.RoutingContext",
          "java.lang.String",
          "java.lang.String",
          "io.vertx.core.http.HttpServerRequest"
        ]
      },
      {
        "name": "uploadFileAsync",
        "parameterTypes": [
          "io.vertx.ext.web.RoutingContext",
          "org.jboss.resteasy.plugins.providers.multipart.MultipartFormDataInput",
          "io.vertx.core.http.HttpServerRequest"
        ]
      }
    ],
    "name": "io.nop.file.quarkus.web.QuarkusFileService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBizObjName",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.graphql.core.IBizModelImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "findConnection"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "findCount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "findFirst"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "findList"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "findPage"
      }
    ],
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.graphql.core.biz.GraphQLQueryMethod",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doFindCount0",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindFirst0",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindList0",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "doFindPage0",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "java.lang.String",
          "java.util.function.BiConsumer",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.graphql.core.biz.IBizObjectQueryProcessor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getActions",
        "parameterTypes": []
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getEntityName",
        "parameterTypes": []
      },
      {
        "name": "getExtAttribute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getObjectDefinition",
        "parameterTypes": []
      },
      {
        "name": "getOperations",
        "parameterTypes": []
      },
      {
        "name": "isAllowInheritAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.graphql.core.biz.IGraphQLBizObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "setTransactionalInvoker",
        "parameterTypes": [
          "io.nop.commons.functional.IAsyncFunctionInvoker"
        ]
      }
    ],
    "name": "io.nop.graphql.core.engine.DefaultOperationFunctionInvoker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildGraphQLResponse",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Throwable",
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "buildRpcResponse",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Throwable",
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "buildSelectionBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "buildSelectionBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.graphql.core.ast.GraphQLSelectionSet",
          "java.util.Map"
        ]
      },
      {
        "name": "cancel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkOperationArgs",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLFieldDefinition",
          "java.util.Map"
        ]
      },
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "executeGraphQLAsync",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "executeRpcAsync",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "getDirective",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDocumentCache",
        "parameterTypes": []
      },
      {
        "name": "getExecutionInvoker",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "getOperationDefinition",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperationType",
          "java.lang.String"
        ]
      },
      {
        "name": "getSchemaLoader",
        "parameterTypes": []
      },
      {
        "name": "getTypeDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "initGraphQLContext",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext",
          "io.nop.graphql.core.ParsedGraphQLRequest"
        ]
      },
      {
        "name": "initRpcContext",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext",
          "io.nop.graphql.core.ast.GraphQLOperationType",
          "java.lang.String",
          "io.nop.api.core.beans.ApiRequest"
        ]
      },
      {
        "name": "isEnableActionAuth",
        "parameterTypes": []
      },
      {
        "name": "isEnableDataAuth",
        "parameterTypes": []
      },
      {
        "name": "isIntrospection",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLOperation"
        ]
      },
      {
        "name": "makeRpcProxy",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "newGraphQLContext",
        "parameterTypes": []
      },
      {
        "name": "parseOperation",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "resolveSelection",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.graphql.core.ast.GraphQLSelectionSet",
          "java.util.Map"
        ]
      },
      {
        "name": "resolveSelections",
        "parameterTypes": [
          "io.nop.graphql.core.ast.GraphQLDocument",
          "int"
        ]
      },
      {
        "name": "setActionAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IActionAuthChecker"
        ]
      },
      {
        "name": "setBuiltinSchema",
        "parameterTypes": [
          "io.nop.graphql.core.schema.GraphQLSchema"
        ]
      },
      {
        "name": "setDataAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IDataAuthChecker"
        ]
      },
      {
        "name": "setEnableActionAuth",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableDataAuth",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExecutionInvoker",
        "parameterTypes": [
          "io.nop.commons.functional.IAsyncFunctionInvoker"
        ]
      },
      {
        "name": "setFlowControlRunner",
        "parameterTypes": [
          "io.nop.rpc.api.flowcontrol.IFlowControlRunner"
        ]
      },
      {
        "name": "setGraphQLHook",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLHook"
        ]
      },
      {
        "name": "setOperationInvoker",
        "parameterTypes": [
          "io.nop.commons.functional.IAsyncFunctionInvoker"
        ]
      },
      {
        "name": "setSchemaLoader",
        "parameterTypes": [
          "io.nop.graphql.core.schema.IGraphQLSchemaLoader"
        ]
      },
      {
        "name": "subscribeGraphQL",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      }
    ],
    "name": "io.nop.graphql.core.engine.GraphQLEngine",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "beginDataFetch",
        "parameterTypes": [
          "io.nop.graphql.core.IDataFetchingEnvironment"
        ]
      },
      {
        "name": "beginExecute",
        "parameterTypes": [
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "beginInvoke",
        "parameterTypes": [
          "io.nop.graphql.core.IDataFetchingEnvironment"
        ]
      },
      {
        "name": "createTimer",
        "parameterTypes": [
          "java.lang.String",
          "[Lio.micrometer.core.instrument.Tag;"
        ]
      },
      {
        "name": "endDataFetch",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Throwable",
          "io.nop.graphql.core.IDataFetchingEnvironment"
        ]
      },
      {
        "name": "endExecute",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Throwable",
          "io.nop.graphql.core.IGraphQLExecutionContext"
        ]
      },
      {
        "name": "endInvoke",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Throwable",
          "io.nop.graphql.core.IDataFetchingEnvironment"
        ]
      },
      {
        "name": "meterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.graphql.core.engine.MetricsGraphQLHook",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getIsRepeatable",
        "parameterTypes": []
      },
      {
        "name": "getLocations",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsRepeatable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.graphql.core.schema.introspection.__Directive",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDeprecationReason",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getIsDeprecated",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "setDeprecationReason",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsDeprecated",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.graphql.core.schema.introspection.__EnumValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getDeprecationReason",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getIsDeprecated",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDeprecationReason",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsDeprecated",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.graphql.core.schema.introspection.__Type"
        ]
      }
    ],
    "name": "io.nop.graphql.core.schema.introspection.__Field",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.graphql.core.schema.introspection.__Type"
        ]
      }
    ],
    "name": "io.nop.graphql.core.schema.introspection.__InputValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getEnumValues",
        "parameterTypes": []
      },
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "getInputFields",
        "parameterTypes": []
      },
      {
        "name": "getInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOfType",
        "parameterTypes": []
      },
      {
        "name": "getPossibleTypes",
        "parameterTypes": []
      },
      {
        "name": "getSpecifiedBy",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnumValues",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInputFields",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInterfaces",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "io.nop.graphql.core.schema.introspection.__TypeKind"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOfType",
        "parameterTypes": [
          "io.nop.graphql.core.schema.introspection.__Type"
        ]
      },
      {
        "name": "setPossibleTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSpecifiedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.graphql.core.schema.introspection.__Type",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "graphQLEngine"
      }
    ],
    "methods": [
      {
        "name": "cancel",
        "parameterTypes": [
          "io.nop.api.core.beans.graphql.CancelRequestBean",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.graphql.core.web.SysBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildRequest",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "filterAsync",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "order",
        "parameterTypes": []
      },
      {
        "name": "setRpcServiceLocator",
        "parameterTypes": [
          "io.nop.rpc.api.IRpcServiceLocator"
        ]
      },
      {
        "name": "write",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "io.nop.api.core.beans.ApiResponse"
        ]
      },
      {
        "name": "writeHeaders",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.graphql.gateway.http.GatewayHttpFilter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getRouter",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.graphql.gateway.model.GatewayModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.graphql.gateway.model.GatewayOnPathModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.graphql.gateway.model.GatewayRouteModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRoute",
        "parameterTypes": [
          "io.nop.graphql.gateway.model.GatewayRouteModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.graphql.gateway.model.GatewayModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getRoute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRoutes",
        "parameterTypes": []
      },
      {
        "name": "hasRoute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRoutes",
        "parameterTypes": []
      },
      {
        "name": "keySet_routes",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setRoutes",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.graphql.gateway.model._gen._GatewayModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.graphql.gateway.model.GatewayOnPathModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.graphql.gateway.model._gen._GatewayOnPathModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addOnPath",
        "parameterTypes": [
          "io.nop.graphql.gateway.model.GatewayOnPathModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.graphql.gateway.model.GatewayRouteModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getHandler",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getMatch",
        "parameterTypes": []
      },
      {
        "name": "getOnError",
        "parameterTypes": []
      },
      {
        "name": "getOnPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOnPaths",
        "parameterTypes": []
      },
      {
        "name": "getOnResponse",
        "parameterTypes": []
      },
      {
        "name": "getServiceName",
        "parameterTypes": []
      },
      {
        "name": "hasOnPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasOnPaths",
        "parameterTypes": []
      },
      {
        "name": "isMock",
        "parameterTypes": []
      },
      {
        "name": "isRawResponse",
        "parameterTypes": []
      },
      {
        "name": "keySet_onPaths",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setHandler",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMatch",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "setMock",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOnError",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setOnPaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOnResponse",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setRawResponse",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setServiceName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.graphql.gateway.model._gen._GatewayRouteModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "initialize",
        "parameterTypes": [
          "io.nop.graphql.core.biz.IGraphQLBizObject",
          "io.nop.graphql.core.biz.IBizObjectQueryProcessorBuilder",
          "io.nop.graphql.core.schema.TypeRegistry"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.graphql.orm.OrmBizInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "ignoreSslCerts"
      }
    ],
    "methods": [
      {
        "name": "getConnectTimeout",
        "parameterTypes": []
      },
      {
        "name": "getDnsResolver",
        "parameterTypes": []
      },
      {
        "name": "getExecutor",
        "parameterTypes": []
      },
      {
        "name": "getHostnameVerifier",
        "parameterTypes": []
      },
      {
        "name": "getHttpProxy",
        "parameterTypes": []
      },
      {
        "name": "getHttpsProxy",
        "parameterTypes": []
      },
      {
        "name": "getKeepAliveDuration",
        "parameterTypes": []
      },
      {
        "name": "getKeyManagers",
        "parameterTypes": []
      },
      {
        "name": "getLogLevel",
        "parameterTypes": []
      },
      {
        "name": "getMaxConnTotal",
        "parameterTypes": []
      },
      {
        "name": "getMaxIdleCount",
        "parameterTypes": []
      },
      {
        "name": "getMaxIdleTime",
        "parameterTypes": []
      },
      {
        "name": "getMaxRequestsPerHost",
        "parameterTypes": []
      },
      {
        "name": "getMaxResultLength",
        "parameterTypes": []
      },
      {
        "name": "getNoProxy",
        "parameterTypes": []
      },
      {
        "name": "getReadTimeout",
        "parameterTypes": []
      },
      {
        "name": "getSecureRandom",
        "parameterTypes": []
      },
      {
        "name": "getSslSocketFactory",
        "parameterTypes": []
      },
      {
        "name": "getSslVersion",
        "parameterTypes": []
      },
      {
        "name": "getThreadName",
        "parameterTypes": []
      },
      {
        "name": "getThreadPoolSize",
        "parameterTypes": []
      },
      {
        "name": "getUserAgent",
        "parameterTypes": []
      },
      {
        "name": "getWriteTimeout",
        "parameterTypes": []
      },
      {
        "name": "getX509TrustManagers",
        "parameterTypes": []
      },
      {
        "name": "isFollowRedirects",
        "parameterTypes": []
      },
      {
        "name": "isHttp2",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreSslCerts",
        "parameterTypes": []
      },
      {
        "name": "isLogBody",
        "parameterTypes": []
      },
      {
        "name": "isPrettyJson",
        "parameterTypes": []
      },
      {
        "name": "isRetryOnConnectionFailure",
        "parameterTypes": []
      },
      {
        "name": "isUseSsl",
        "parameterTypes": []
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDnsResolver",
        "parameterTypes": [
          "io.nop.http.api.IDnsResolver"
        ]
      },
      {
        "name": "setExecutor",
        "parameterTypes": [
          "java.util.concurrent.Executor"
        ]
      },
      {
        "name": "setFollowRedirects",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHostnameVerifier",
        "parameterTypes": [
          "javax.net.ssl.HostnameVerifier"
        ]
      },
      {
        "name": "setHttp2",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHttpProxy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHttpsProxy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreSslCerts",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKeepAliveDuration",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setKeyManagers",
        "parameterTypes": [
          "[Ljavax.net.ssl.KeyManager;"
        ]
      },
      {
        "name": "setLogBody",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogLevel",
        "parameterTypes": [
          "io.nop.api.core.util.LogLevel"
        ]
      },
      {
        "name": "setMaxConnTotal",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxIdleCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxIdleTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxRequestsPerHost",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxResultLength",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNoProxy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrettyJson",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRetryOnConnectionFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSecureRandom",
        "parameterTypes": [
          "java.security.SecureRandom"
        ]
      },
      {
        "name": "setSslSocketFactory",
        "parameterTypes": [
          "javax.net.ssl.SSLSocketFactory"
        ]
      },
      {
        "name": "setSslVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUseSsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUserAgent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWriteTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setX509TrustManagers",
        "parameterTypes": [
          "[Ljavax.net.ssl.X509TrustManager;"
        ]
      }
    ],
    "name": "io.nop.http.api.client.HttpClientConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "filterAsync",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "getPropagateHeaders",
        "parameterTypes": [
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "initContext",
        "parameterTypes": [
          "io.nop.api.core.context.IContext",
          "io.nop.http.api.server.IHttpServerContext"
        ]
      },
      {
        "name": "order",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.http.api.server.ContextHttpServerFilter",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "downloadAsync",
        "parameterTypes": [
          "io.nop.http.api.client.HttpRequest",
          "io.nop.http.api.client.IHttpOutputFile",
          "io.nop.http.api.client.DownloadOptions",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "fetchAsync",
        "parameterTypes": [
          "io.nop.http.api.client.HttpRequest",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "newSSLContext",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "start",
        "parameterTypes": []
      },
      {
        "name": "stop",
        "parameterTypes": []
      },
      {
        "name": "toBody",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "toHttpResponse",
        "parameterTypes": [
          "java.net.http.HttpResponse"
        ]
      },
      {
        "name": "toMap",
        "parameterTypes": [
          "java.net.http.HttpHeaders"
        ]
      },
      {
        "name": "toURI",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "uploadAsync",
        "parameterTypes": [
          "io.nop.http.api.client.HttpRequest",
          "io.nop.http.api.client.IHttpInputFile",
          "io.nop.http.api.client.UploadOptions",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "wrapError",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      }
    ],
    "name": "io.nop.http.client.jdk.JdkHttpClient",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "createQrcodeBytes",
        "parameterTypes": [
          "io.nop.integration.api.qrcode.QrcodeOptions"
        ]
      }
    ],
    "name": "io.nop.integration.qrcode.ZxingQrcodeService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.initialize.IocCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanAliasModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanCollectBeansValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanCollectionValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addMissingBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isDisabled",
        "parameterTypes": []
      },
      {
        "name": "setDisabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanConditionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanConstantModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanConstructorArgModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanIfPropertyCondition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanImportModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanInterceptorModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanListValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAnnotationClasses",
        "parameterTypes": []
      },
      {
        "name": "setAnnotationClasses",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanPointcutModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanPropValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.ioc.model.BeanPropertyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanRefValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeanSimpleValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDepend",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      },
      {
        "name": "getConstructorArgCount",
        "parameterTypes": []
      },
      {
        "name": "getEmbeddedId",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "setEmbeddedId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model.BeanValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.BeansModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.ioc.model.IBeanPropValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanAliasModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanAliasModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanCollectBeansValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      },
      {
        "name": "getByAnnotation",
        "parameterTypes": []
      },
      {
        "name": "getByType",
        "parameterTypes": []
      },
      {
        "name": "getExcludeTag",
        "parameterTypes": []
      },
      {
        "name": "getIncludeTag",
        "parameterTypes": []
      },
      {
        "name": "getNamePrefix",
        "parameterTypes": []
      },
      {
        "name": "isAsMap",
        "parameterTypes": []
      },
      {
        "name": "isIocIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "isIocOptional",
        "parameterTypes": []
      },
      {
        "name": "isOnlyConcreteClasses",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAsMap",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBeanValueType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setByAnnotation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setByType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExcludeTag",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIncludeTag",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocOptional",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnlyConcreteClasses",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanCollectBeansValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanCollectionValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "isMerge",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMerge",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanCollectionValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConditionModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIfProperty",
        "parameterTypes": []
      },
      {
        "name": "getMissingBean",
        "parameterTypes": []
      },
      {
        "name": "getMissingClass",
        "parameterTypes": []
      },
      {
        "name": "getMissingResource",
        "parameterTypes": []
      },
      {
        "name": "getOnBean",
        "parameterTypes": []
      },
      {
        "name": "getOnClass",
        "parameterTypes": []
      },
      {
        "name": "getOnExpr",
        "parameterTypes": []
      },
      {
        "name": "getOnResource",
        "parameterTypes": []
      },
      {
        "name": "getUnlessProperty",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setIfProperty",
        "parameterTypes": [
          "io.nop.ioc.model.BeanIfPropertyCondition"
        ]
      },
      {
        "name": "setMissingBean",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMissingClass",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMissingResource",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnBean",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnClass",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOnExpr",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      },
      {
        "name": "setOnResource",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUnlessProperty",
        "parameterTypes": [
          "io.nop.ioc.model.BeanUnlessPropertyCondition"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanConditionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstantModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getScope",
        "parameterTypes": []
      },
      {
        "name": "getStaticField",
        "parameterTypes": []
      },
      {
        "name": "isIocAllowOverride",
        "parameterTypes": []
      },
      {
        "name": "isIocDefault",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocAllowOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocDefault",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStaticField",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanConstantModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstructorArgModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getIndex",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isIocSkipIfEmpty",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIocSkipIfEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanConstructorArgModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanIfPropertyCondition"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isEnableIfDebug",
        "parameterTypes": []
      },
      {
        "name": "isEnableIfMissing",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setEnableIfDebug",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableIfMissing",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanIfPropertyCondition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanImportModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getResource",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setResource",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanImportModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanInterceptorModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBean",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanInterceptorModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanListValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      },
      {
        "name": "getListClass",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBeanValueType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setListClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanListValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIocPointcut",
        "parameterTypes": []
      },
      {
        "name": "getIocPriority",
        "parameterTypes": []
      },
      {
        "name": "getIocTags",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "isAbstract",
        "parameterTypes": []
      },
      {
        "name": "isIocAllowOverride",
        "parameterTypes": []
      },
      {
        "name": "isIocDefault",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAbstract",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocAllowOverride",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocDefault",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocPointcut",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPointcutModel"
        ]
      },
      {
        "name": "setIocPriority",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIocTags",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPrimary",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPointcutModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAnnotations",
        "parameterTypes": []
      },
      {
        "name": "getOrder",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAnnotations",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanPointcutModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPropValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "io.nop.ioc.model.IBeanPropValue"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanPropValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPropertyModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isIocSkipIfEmpty",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setIocSkipIfEmpty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanPropertyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanRefValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBean",
        "parameterTypes": []
      },
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      },
      {
        "name": "isIocIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "isIocOptional",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBeanValueType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocOptional",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanRefValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanSimpleValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBeanValueType",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBeanValueType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanSimpleValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addConstructorArg",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstructorArgModel"
        ]
      },
      {
        "name": "addIocInterceptor",
        "parameterTypes": [
          "io.nop.ioc.model.BeanInterceptorModel"
        ]
      },
      {
        "name": "addProperty",
        "parameterTypes": [
          "io.nop.ioc.model.BeanPropertyModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeanValue"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAutowire",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getConstructorArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getConstructorArgs",
        "parameterTypes": []
      },
      {
        "name": "getDependsOn",
        "parameterTypes": []
      },
      {
        "name": "getDestroyMethod",
        "parameterTypes": []
      },
      {
        "name": "getFactoryBean",
        "parameterTypes": []
      },
      {
        "name": "getFactoryMethod",
        "parameterTypes": []
      },
      {
        "name": "getInitMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocAfter",
        "parameterTypes": []
      },
      {
        "name": "getIocBeanMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocBefore",
        "parameterTypes": []
      },
      {
        "name": "getIocBuild",
        "parameterTypes": []
      },
      {
        "name": "getIocCondition",
        "parameterTypes": []
      },
      {
        "name": "getIocConfigPrefix",
        "parameterTypes": []
      },
      {
        "name": "getIocDelayMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocDelayStart",
        "parameterTypes": []
      },
      {
        "name": "getIocDestroy",
        "parameterTypes": []
      },
      {
        "name": "getIocInit",
        "parameterTypes": []
      },
      {
        "name": "getIocInitOrder",
        "parameterTypes": []
      },
      {
        "name": "getIocInterceptor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIocInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getIocOnConfigRefresh",
        "parameterTypes": []
      },
      {
        "name": "getIocRefreshConfig",
        "parameterTypes": []
      },
      {
        "name": "getIocRefreshConfigMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocRestart",
        "parameterTypes": []
      },
      {
        "name": "getIocRestartMethod",
        "parameterTypes": []
      },
      {
        "name": "getIocSecurityDomain",
        "parameterTypes": []
      },
      {
        "name": "getIocType",
        "parameterTypes": []
      },
      {
        "name": "getLazyInit",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getProperties",
        "parameterTypes": []
      },
      {
        "name": "getProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getScope",
        "parameterTypes": []
      },
      {
        "name": "hasConstructorArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasConstructorArgs",
        "parameterTypes": []
      },
      {
        "name": "hasIocInterceptor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIocInterceptors",
        "parameterTypes": []
      },
      {
        "name": "hasProperties",
        "parameterTypes": []
      },
      {
        "name": "hasProperty",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAutowireCandidate",
        "parameterTypes": []
      },
      {
        "name": "isIocAop",
        "parameterTypes": []
      },
      {
        "name": "isIocAutoRefresh",
        "parameterTypes": []
      },
      {
        "name": "isIocForceInit",
        "parameterTypes": []
      },
      {
        "name": "isIocProxy",
        "parameterTypes": []
      },
      {
        "name": "keySet_constructorArgs",
        "parameterTypes": []
      },
      {
        "name": "keySet_iocInterceptors",
        "parameterTypes": []
      },
      {
        "name": "keySet_properties",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAutowire",
        "parameterTypes": [
          "io.nop.ioc.model.AutowireType"
        ]
      },
      {
        "name": "setAutowireCandidate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConstructorArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDependsOn",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDestroyMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFactoryBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFactoryMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocAfter",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocAop",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocAutoRefresh",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocBeanMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocBefore",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocBuild",
        "parameterTypes": [
          "io.nop.ioc.model.BeanBuildModel"
        ]
      },
      {
        "name": "setIocCondition",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConditionModel"
        ]
      },
      {
        "name": "setIocConfigPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocDelayMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocDelayStart",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocDestroy",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocForceInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocInit",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocInitOrder",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setIocInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocOnConfigRefresh",
        "parameterTypes": [
          "io.nop.ioc.model.BeanOnConfigRefresh"
        ]
      },
      {
        "name": "setIocProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIocRefreshConfig",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocRefreshConfigMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocRestart",
        "parameterTypes": [
          "io.nop.xlang.api.EvalCode"
        ]
      },
      {
        "name": "setIocRestartMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIocSecurityDomain",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setIocType",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLazyInit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeanValue",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAlias",
        "parameterTypes": [
          "io.nop.ioc.model.BeanAliasModel"
        ]
      },
      {
        "name": "addBean",
        "parameterTypes": [
          "io.nop.ioc.model.BeanModel"
        ]
      },
      {
        "name": "addEntry",
        "parameterTypes": [
          "io.nop.ioc.model.BeanMapModel"
        ]
      },
      {
        "name": "addImport",
        "parameterTypes": [
          "io.nop.ioc.model.BeanImportModel"
        ]
      },
      {
        "name": "addIocConfig",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConfigModel"
        ]
      },
      {
        "name": "addIocListener",
        "parameterTypes": [
          "io.nop.ioc.model.BeanListenerModel"
        ]
      },
      {
        "name": "addUtilConstant",
        "parameterTypes": [
          "io.nop.ioc.model.BeanConstantModel"
        ]
      },
      {
        "name": "addUtilList",
        "parameterTypes": [
          "io.nop.ioc.model.BeanListModel"
        ]
      },
      {
        "name": "addUtilSet",
        "parameterTypes": [
          "io.nop.ioc.model.BeanSetModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.ioc.model.BeansModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBeans",
        "parameterTypes": []
      },
      {
        "name": "getEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getImport",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getImports",
        "parameterTypes": []
      },
      {
        "name": "getIocConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIocConfigs",
        "parameterTypes": []
      },
      {
        "name": "getIocListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIocListeners",
        "parameterTypes": []
      },
      {
        "name": "getIocSecurityDomain",
        "parameterTypes": []
      },
      {
        "name": "getUtilConstant",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilConstants",
        "parameterTypes": []
      },
      {
        "name": "getUtilList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilLists",
        "parameterTypes": []
      },
      {
        "name": "getUtilMaps",
        "parameterTypes": []
      },
      {
        "name": "getUtilSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUtilSets",
        "parameterTypes": []
      },
      {
        "name": "hasAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAliases",
        "parameterTypes": []
      },
      {
        "name": "hasBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasBeans",
        "parameterTypes": []
      },
      {
        "name": "hasEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasImport",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasImports",
        "parameterTypes": []
      },
      {
        "name": "hasIocConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIocConfigs",
        "parameterTypes": []
      },
      {
        "name": "hasIocListener",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIocListeners",
        "parameterTypes": []
      },
      {
        "name": "hasUtilConstant",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilConstants",
        "parameterTypes": []
      },
      {
        "name": "hasUtilList",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilLists",
        "parameterTypes": []
      },
      {
        "name": "hasUtilMaps",
        "parameterTypes": []
      },
      {
        "name": "hasUtilSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUtilSets",
        "parameterTypes": []
      },
      {
        "name": "isDefaultLazyInit",
        "parameterTypes": []
      },
      {
        "name": "keySet_aliases",
        "parameterTypes": []
      },
      {
        "name": "keySet_beans",
        "parameterTypes": []
      },
      {
        "name": "keySet_imports",
        "parameterTypes": []
      },
      {
        "name": "keySet_iocConfigs",
        "parameterTypes": []
      },
      {
        "name": "keySet_iocListeners",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilConstants",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilLists",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilMaps",
        "parameterTypes": []
      },
      {
        "name": "keySet_utilSets",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAliases",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBeans",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDefaultLazyInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setImports",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocConfigs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocListeners",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIocSecurityDomain",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUtilConstants",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUtilLists",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUtilMaps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUtilSets",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.ioc.model._gen._BeansModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.ioc.support.UtilFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doStart",
        "parameterTypes": []
      },
      {
        "name": "doStop",
        "parameterTypes": []
      },
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "reinitWorkers",
        "parameterTypes": []
      },
      {
        "name": "setInitScriptPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJsLibLoader",
        "parameterTypes": [
          "io.nop.core.resource.IResourceTextLoader"
        ]
      },
      {
        "name": "setWorkerCount",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.js.engine.JavaScriptService",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.log.java.JavaLoggerConfiguratorInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "bindToEntity",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.util.Map"
        ]
      },
      {
        "name": "flushToEntity",
        "parameterTypes": []
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.IOrmComponent",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_addPkWatcher",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "orm_attach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntityEnhancer"
        ]
      },
      {
        "name": "orm_attached",
        "parameterTypes": []
      },
      {
        "name": "orm_clearDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_computed",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "orm_detach",
        "parameterTypes": []
      },
      {
        "name": "orm_dirty",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyNewValues",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyOldValues",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyPropIds",
        "parameterTypes": []
      },
      {
        "name": "orm_disableAutoStamp",
        "parameterTypes": []
      },
      {
        "name": "orm_disableAutoStamp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_disableLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "orm_disableLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_entityModel",
        "parameterTypes": []
      },
      {
        "name": "orm_entityModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_extDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_extDirty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_flushComponent",
        "parameterTypes": []
      },
      {
        "name": "orm_flushVisiting",
        "parameterTypes": []
      },
      {
        "name": "orm_flushVisiting",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_forEachDirtyProp",
        "parameterTypes": [
          "java.util.function.ObjIntConsumer"
        ]
      },
      {
        "name": "orm_forEachInitedProp",
        "parameterTypes": [
          "java.util.function.ObjIntConsumer"
        ]
      },
      {
        "name": "orm_forceLoad",
        "parameterTypes": []
      },
      {
        "name": "orm_fullyLoaded",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_inited",
        "parameterTypes": []
      },
      {
        "name": "orm_initedValues",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_locked",
        "parameterTypes": []
      },
      {
        "name": "orm_locked",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_markFullyLoaded",
        "parameterTypes": []
      },
      {
        "name": "orm_propDirty",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propInited",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propLoaded",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propOldValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_proxy",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_refLoaded",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_requireEntity",
        "parameterTypes": []
      },
      {
        "name": "orm_reset",
        "parameterTypes": []
      },
      {
        "name": "orm_state",
        "parameterTypes": []
      },
      {
        "name": "orm_state",
        "parameterTypes": [
          "io.nop.orm.OrmEntityState"
        ]
      },
      {
        "name": "orm_tenantId",
        "parameterTypes": []
      },
      {
        "name": "orm_unload",
        "parameterTypes": []
      },
      {
        "name": "orm_unsetRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_useOldValues",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.IOrmEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.IOrmEntityLifecycle",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBoolean",
        "parameterTypes": []
      },
      {
        "name": "getByte",
        "parameterTypes": []
      },
      {
        "name": "getChar",
        "parameterTypes": []
      },
      {
        "name": "getDate",
        "parameterTypes": []
      },
      {
        "name": "getDatetime",
        "parameterTypes": []
      },
      {
        "name": "getDecimal",
        "parameterTypes": []
      },
      {
        "name": "getDouble",
        "parameterTypes": []
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldType",
        "parameterTypes": []
      },
      {
        "name": "getFloat",
        "parameterTypes": []
      },
      {
        "name": "getInt",
        "parameterTypes": []
      },
      {
        "name": "getLong",
        "parameterTypes": []
      },
      {
        "name": "getShort",
        "parameterTypes": []
      },
      {
        "name": "getString",
        "parameterTypes": []
      },
      {
        "name": "getTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "setBoolean",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setByte",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setChar",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDatetime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDecimal",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setDouble",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setFloat",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setInt",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLong",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setShort",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.IOrmKeyValueTable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "orm_attached",
        "parameterTypes": []
      },
      {
        "name": "orm_clearDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_dirty",
        "parameterTypes": []
      },
      {
        "name": "orm_enhancer",
        "parameterTypes": []
      },
      {
        "name": "orm_proxy",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_reset",
        "parameterTypes": []
      },
      {
        "name": "orm_tenantId",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.IOrmObject",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "bindToEntity",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "java.util.Map"
        ]
      },
      {
        "name": "flushToEntity",
        "parameterTypes": []
      },
      {
        "name": "getColPropId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalGetPropValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalSetPropValue",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "markDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_owner",
        "parameterTypes": []
      },
      {
        "name": "orm_propDirty",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.component.AbstractOrmComponent",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_xmlText"
      }
    ],
    "methods": [
      {
        "name": "flushToEntity",
        "parameterTypes": []
      },
      {
        "name": "getChildBodyXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getChildValue",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getJsonObject",
        "parameterTypes": []
      },
      {
        "name": "getNode",
        "parameterTypes": []
      },
      {
        "name": "getNormalizedXml",
        "parameterTypes": []
      },
      {
        "name": "getXJson",
        "parameterTypes": []
      },
      {
        "name": "getXmlText",
        "parameterTypes": []
      },
      {
        "name": "makeNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setChildBodyXml",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "setChildValue",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setJsonObject",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setNode",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setNormalizedXml",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXmlText",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.component.XmlOrmComponent",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "dao",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "daoForTable",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityNames",
        "parameterTypes": []
      },
      {
        "name": "hasDao",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "normalizeEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "register",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.dao.OrmDaoProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "enhanceBinder",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel",
          "io.nop.orm.model.IColumnModel",
          "io.nop.dataset.binder.IDataParameterBinder"
        ]
      },
      {
        "name": "setTextCipher",
        "parameterTypes": [
          "io.nop.commons.crypto.ITextCipher"
        ]
      }
    ],
    "name": "io.nop.orm.factory.DefaultOrmColumnBinderEnhancer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "refreshConfig",
        "parameterTypes": []
      },
      {
        "name": "reloadOrmModel",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.factory.OrmSessionFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addInterceptor",
        "parameterTypes": [
          "io.nop.orm.IOrmInterceptor"
        ]
      },
      {
        "name": "buildFullName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBeanProvider",
        "parameterTypes": []
      },
      {
        "name": "getColumnBinderEnhancer",
        "parameterTypes": []
      },
      {
        "name": "getDefaultDynamicEntityClass",
        "parameterTypes": []
      },
      {
        "name": "getDefaultQueryExecutor",
        "parameterTypes": []
      },
      {
        "name": "getDialectProvider",
        "parameterTypes": []
      },
      {
        "name": "getDynamicEntityNames",
        "parameterTypes": []
      },
      {
        "name": "getEntityClassLoader",
        "parameterTypes": []
      },
      {
        "name": "getEntityFilterProvider",
        "parameterTypes": []
      },
      {
        "name": "getEqlAstTransformer",
        "parameterTypes": []
      },
      {
        "name": "getGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "getInterceptors",
        "parameterTypes": []
      },
      {
        "name": "getJdbcTemplate",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOrmModel",
        "parameterTypes": []
      },
      {
        "name": "getQueryExecutor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getQueryExecutors",
        "parameterTypes": []
      },
      {
        "name": "getSequenceGenerator",
        "parameterTypes": []
      },
      {
        "name": "getShardSelector",
        "parameterTypes": []
      },
      {
        "name": "isRegisterGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "isUseMetrics",
        "parameterTypes": []
      },
      {
        "name": "removeInterceptor",
        "parameterTypes": [
          "io.nop.orm.IOrmInterceptor"
        ]
      },
      {
        "name": "setBeanProvider",
        "parameterTypes": [
          "io.nop.api.core.ioc.IBeanProvider"
        ]
      },
      {
        "name": "setColumnBinderEnhancer",
        "parameterTypes": [
          "io.nop.orm.eql.binder.IOrmColumnBinderEnhancer"
        ]
      },
      {
        "name": "setDefaultDynamicEntityClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setDefaultQueryExecutor",
        "parameterTypes": [
          "io.nop.orm.loader.IQueryExecutor"
        ]
      },
      {
        "name": "setDialectProvider",
        "parameterTypes": [
          "io.nop.dao.dialect.IDialectProvider"
        ]
      },
      {
        "name": "setDynamicEntityNames",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setEntityClassLoader",
        "parameterTypes": [
          "io.nop.commons.lang.IClassLoader"
        ]
      },
      {
        "name": "setEntityFilterProvider",
        "parameterTypes": [
          "io.nop.orm.sql.IEntityFilterProvider"
        ]
      },
      {
        "name": "setEqlAstTransformer",
        "parameterTypes": [
          "io.nop.orm.eql.IEqlAstTransformer"
        ]
      },
      {
        "name": "setGlobalCache",
        "parameterTypes": [
          "io.nop.commons.cache.ICacheProvider"
        ]
      },
      {
        "name": "setInterceptors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setJdbcTemplate",
        "parameterTypes": [
          "io.nop.dao.jdbc.IJdbcTemplate"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrmModel",
        "parameterTypes": [
          "io.nop.orm.model.IOrmModel"
        ]
      },
      {
        "name": "setQueryExecutors",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRegisterGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSequenceGenerator",
        "parameterTypes": [
          "io.nop.dao.seq.ISequenceGenerator"
        ]
      },
      {
        "name": "setShardSelector",
        "parameterTypes": [
          "io.nop.dao.shard.IShardSelector"
        ]
      },
      {
        "name": "setUseMetrics",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.factory.SessionFactoryConfig",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getObject",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.factory.XplOrmInterceptorFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getEntityFilter",
        "parameterTypes": [
          "io.nop.core.lang.sql.SyntaxMarker",
          "io.nop.core.lang.sql.SQL",
          "io.nop.orm.sql.ISqlCompileTool"
        ]
      },
      {
        "name": "setDataAuthChecker",
        "parameterTypes": [
          "io.nop.api.core.auth.IDataAuthChecker"
        ]
      }
    ],
    "name": "io.nop.orm.filter.DataAuthEntityFilterProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "assembleAllCollectionInMemory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "assembleCollectionInMemory",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "assembleSelectionInMemory",
        "parameterTypes": [
          "java.lang.Object",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "attach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "batchDelete",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "batchLoadProps",
        "parameterTypes": [
          "java.util.Collection",
          "java.util.Collection"
        ]
      },
      {
        "name": "batchLoadSelection",
        "parameterTypes": [
          "java.util.Collection",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "batchSaveOrUpdate",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "cacheGet",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "cacheGet",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Supplier"
        ]
      },
      {
        "name": "cachePut",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "cacheRemove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "castId",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "castIds",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Collection"
        ]
      },
      {
        "name": "clearGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "clearGlobalCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearQueryCache",
        "parameterTypes": []
      },
      {
        "name": "clearQueryCacheFor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "clearQueryPlanCache",
        "parameterTypes": []
      },
      {
        "name": "clearSession",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "currentSession",
        "parameterTypes": []
      },
      {
        "name": "delete",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "deleteDirectly",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "detach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "evict",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "evictAll",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evictQueryCache",
        "parameterTypes": [
          "java.lang.String",
          "java.io.Serializable"
        ]
      },
      {
        "name": "executeQuery",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function"
        ]
      },
      {
        "name": "executeStatement",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL",
          "io.nop.api.core.beans.LongRangeBean",
          "java.util.function.Function",
          "io.nop.api.core.util.ICancelToken"
        ]
      },
      {
        "name": "executeUpdate",
        "parameterTypes": [
          "io.nop.core.lang.sql.SQL"
        ]
      },
      {
        "name": "existsByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean"
        ]
      },
      {
        "name": "findFirstByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.dataset.IRowMapper"
        ]
      },
      {
        "name": "findListByQuery",
        "parameterTypes": [
          "io.nop.api.core.beans.query.QueryBean",
          "io.nop.dataset.IRowMapper"
        ]
      },
      {
        "name": "flushSession",
        "parameterTypes": []
      },
      {
        "name": "forStateless",
        "parameterTypes": []
      },
      {
        "name": "forceLoad",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity",
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getCacheProvider",
        "parameterTypes": []
      },
      {
        "name": "getDbEstimatedClock",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefaultRowMapper",
        "parameterTypes": []
      },
      {
        "name": "getDialectForQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExtension",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "getFullEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOrmModel",
        "parameterTypes": []
      },
      {
        "name": "getSessionFactory",
        "parameterTypes": []
      },
      {
        "name": "initEntityId",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "isValidEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "load",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "lock",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "newEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "refresh",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "registerSession",
        "parameterTypes": [
          "io.nop.orm.IOrmSession"
        ]
      },
      {
        "name": "reloadModel",
        "parameterTypes": []
      },
      {
        "name": "requireSession",
        "parameterTypes": []
      },
      {
        "name": "runInNewSession",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInNewSessionAsync",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInSession",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "runInSession",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "runInSessionAsync",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "saveDirectly",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "saveOrUpdate",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "sessionCache",
        "parameterTypes": []
      },
      {
        "name": "setSessionFactory",
        "parameterTypes": [
          "io.nop.orm.IOrmSessionFactory"
        ]
      },
      {
        "name": "unregisterSession",
        "parameterTypes": []
      },
      {
        "name": "updateDirectly",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      }
    ],
    "name": "io.nop.orm.impl.OrmTemplateImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setJdbcTemplate",
        "parameterTypes": [
          "io.nop.dao.jdbc.IJdbcTemplate"
        ]
      },
      {
        "name": "setOrmSessionFactory",
        "parameterTypes": [
          "io.nop.orm.IOrmSessionFactory"
        ]
      },
      {
        "name": "splitByQuerySpace",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ],
    "name": "io.nop.orm.initialize.AddTenantColInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setJdbcTemplate",
        "parameterTypes": [
          "io.nop.dao.jdbc.IJdbcTemplate"
        ]
      },
      {
        "name": "setOrmSessionFactory",
        "parameterTypes": [
          "io.nop.orm.IOrmSessionFactory"
        ]
      },
      {
        "name": "splitByQuerySpace",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ],
    "name": "io.nop.orm.initialize.DataBaseSchemaInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "io.nop.core.reflect.aop.IMethodInvocation"
        ]
      }
    ],
    "name": "io.nop.orm.interceptor.SingleSessionMethodInterceptor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getColumnRefs",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getPropId",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "isInsertable",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      },
      {
        "name": "isUpdatable",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IColumnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getAllPropIds",
        "parameterTypes": []
      },
      {
        "name": "getAllProps",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByCode",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByPropId",
        "parameterTypes": [
          "int",
          "boolean"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getColumnsRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponents",
        "parameterTypes": []
      },
      {
        "name": "getComputes",
        "parameterTypes": []
      },
      {
        "name": "getCreateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getCreaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getDbCatalog",
        "parameterTypes": []
      },
      {
        "name": "getDbSchema",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagProp",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagPropId",
        "parameterTypes": []
      },
      {
        "name": "getDeleteVersionProp",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getEagerLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getFilters",
        "parameterTypes": []
      },
      {
        "name": "getIdProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getMinimumLazyLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNopFlowIdPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevBeginVerPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevEndVarPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevExtChangePropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevTypePropId",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getPkColumnNames",
        "parameterTypes": []
      },
      {
        "name": "getPkColumns",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getPropByUnderscoreName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPropIdBound",
        "parameterTypes": []
      },
      {
        "name": "getQuerySpace",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getRelations",
        "parameterTypes": []
      },
      {
        "name": "getRevLatestKeyColumns",
        "parameterTypes": []
      },
      {
        "name": "getShardColumn",
        "parameterTypes": []
      },
      {
        "name": "getShardPropId",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTenantPropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getVersionPropId",
        "parameterTypes": []
      },
      {
        "name": "hasLazyColumn",
        "parameterTypes": []
      },
      {
        "name": "hasOneToOneRelation",
        "parameterTypes": []
      },
      {
        "name": "isCheckVersionWhenLazyLoad",
        "parameterTypes": []
      },
      {
        "name": "isEntityModeEnabled",
        "parameterTypes": []
      },
      {
        "name": "isGlobalUniqueId",
        "parameterTypes": []
      },
      {
        "name": "isKvTable",
        "parameterTypes": []
      },
      {
        "name": "isReadonly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterShortName",
        "parameterTypes": []
      },
      {
        "name": "isTableView",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "isUseLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "isUseRevision",
        "parameterTypes": []
      },
      {
        "name": "isUseShard",
        "parameterTypes": []
      },
      {
        "name": "isUseTenant",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IEntityModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IEntityPropModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getJoin",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityName",
        "parameterTypes": []
      },
      {
        "name": "getRefPropIds",
        "parameterTypes": []
      },
      {
        "name": "getRefPropName",
        "parameterTypes": []
      },
      {
        "name": "getSingleColumnJoin",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "isAutoCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isDynamicRelation",
        "parameterTypes": []
      },
      {
        "name": "isJoinOnNonPkColumn",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IEntityRelationModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IOrmDataType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.IPdmElement",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setOwnerEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmAliasModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumnRefs",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getSqlType",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setColumnRefs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOwnerEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setSqlType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.OrmColumnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIdMap",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "requireProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwnerEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getColumnModel",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "setColumnModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmComponentPropModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isCompositePk",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmCompositePKModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmDomainModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      },
      {
        "name": "addTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliasPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAllPropIds",
        "parameterTypes": []
      },
      {
        "name": "getAllProps",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByCode",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getColumnByPropId",
        "parameterTypes": [
          "int",
          "boolean"
        ]
      },
      {
        "name": "getColumnsRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCreateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getCreaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagPropId",
        "parameterTypes": []
      },
      {
        "name": "getEagerLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getIdProp",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getMinimumLazyLoadProps",
        "parameterTypes": []
      },
      {
        "name": "getNopFlowIdPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevBeginVerPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevEndVarPropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevExtChangePropId",
        "parameterTypes": []
      },
      {
        "name": "getNopRevTypePropId",
        "parameterTypes": []
      },
      {
        "name": "getPkColumnNames",
        "parameterTypes": []
      },
      {
        "name": "getPkColumns",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getPropByUnderscoreName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPropIdBound",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getRevLatestKeyColumns",
        "parameterTypes": []
      },
      {
        "name": "getShardColumn",
        "parameterTypes": []
      },
      {
        "name": "getShardPropId",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getTenantPropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimePropId",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterPropId",
        "parameterTypes": []
      },
      {
        "name": "getVersionPropId",
        "parameterTypes": []
      },
      {
        "name": "hasLazyColumn",
        "parameterTypes": []
      },
      {
        "name": "hasOneToOneRelation",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isAllColumnPrimary",
        "parameterTypes": []
      },
      {
        "name": "isGlobalUniqueId",
        "parameterTypes": []
      },
      {
        "name": "setPkColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRevLatestKeyColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.OrmEntityModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLeftPropModel",
        "parameterTypes": []
      },
      {
        "name": "getLeftType",
        "parameterTypes": []
      },
      {
        "name": "getRightPropModel",
        "parameterTypes": []
      },
      {
        "name": "getRightType",
        "parameterTypes": []
      },
      {
        "name": "setLeftPropModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      },
      {
        "name": "setRightPropModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityPropModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmJoinOnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCollectionModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModelByTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModelByUnderscoreName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEntityModels",
        "parameterTypes": []
      },
      {
        "name": "getEntityModelsInTopoOrder",
        "parameterTypes": []
      },
      {
        "name": "getEntityNames",
        "parameterTypes": []
      },
      {
        "name": "getTopoEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "isAnyEntityUseTenant",
        "parameterTypes": []
      },
      {
        "name": "isMerged",
        "parameterTypes": []
      },
      {
        "name": "setMerged",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.orm.model.OrmRefSetModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addJoinOn",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      },
      {
        "name": "getAliasPropPath",
        "parameterTypes": []
      },
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropId",
        "parameterTypes": []
      },
      {
        "name": "getColumnPropIds",
        "parameterTypes": []
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getJavaTypeName",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getOwnerEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityModel",
        "parameterTypes": []
      },
      {
        "name": "getRefPropIds",
        "parameterTypes": []
      },
      {
        "name": "getSingleColumnJoin",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "hasLazyLoadColumn",
        "parameterTypes": []
      },
      {
        "name": "isDynamicRelation",
        "parameterTypes": []
      },
      {
        "name": "isJoinOnNonPkColumn",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "isSingleColumn",
        "parameterTypes": []
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDynamicRelation",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJoinOnNonPkColumn",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOwnerEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setRefEntityModel",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "setRefPropIds",
        "parameterTypes": [
          "[I"
        ]
      },
      {
        "name": "setSingleColumnJoin",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "m2m"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "m2o"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "o2m"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "o2o"
      }
    ],
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.model.OrmRelationType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCollectionName",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getRefSet",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "setCollectionName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefSet",
        "parameterTypes": [
          "io.nop.orm.model.OrmRefSetModel"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmToManyReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "isOneToOne",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "setOneToOne",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmToOneReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColumnModels",
        "parameterTypes": []
      },
      {
        "name": "getColumnModelsWithTenant",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "setColumnModels",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.orm.model.OrmUniqueKeyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmAliasModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPropPath",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmAliasModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getFixedValue",
        "parameterTypes": []
      },
      {
        "name": "getJsonPath",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNativeSqlType",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getPropId",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getUiHint",
        "parameterTypes": []
      },
      {
        "name": "isInsertable",
        "parameterTypes": []
      },
      {
        "name": "isLazy",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isPrimary",
        "parameterTypes": []
      },
      {
        "name": "isUpdatable",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFixedValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInsertable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJsonPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLazy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNativeSqlType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPrimary",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPropId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSqlText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDataType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUiHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdatable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmColumnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "io.nop.orm.model.OrmComponentPropModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmComponentModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "isNeedFlush",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "keySet_props",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNeedFlush",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmComponentModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmComponentPropModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumn",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmComponentPropModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmDomainModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getStdDataType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getStdSqlType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStdDataType",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdSqlType",
        "parameterTypes": [
          "io.nop.commons.type.StdSqlType"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmDomainModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAlias",
        "parameterTypes": [
          "io.nop.orm.model.OrmAliasModel"
        ]
      },
      {
        "name": "addColumn",
        "parameterTypes": [
          "io.nop.orm.model.OrmColumnModel"
        ]
      },
      {
        "name": "addComponent",
        "parameterTypes": [
          "io.nop.orm.model.OrmComponentModel"
        ]
      },
      {
        "name": "addCompute",
        "parameterTypes": [
          "io.nop.orm.model.OrmComputePropModel"
        ]
      },
      {
        "name": "addFilter",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityFilterModel"
        ]
      },
      {
        "name": "addIndex",
        "parameterTypes": [
          "io.nop.orm.model.OrmIndexModel"
        ]
      },
      {
        "name": "addRelation",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "addUniqueKey",
        "parameterTypes": [
          "io.nop.orm.model.OrmUniqueKeyModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAliases",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponents",
        "parameterTypes": []
      },
      {
        "name": "getCompute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComputes",
        "parameterTypes": []
      },
      {
        "name": "getCreateTimeProp",
        "parameterTypes": []
      },
      {
        "name": "getCreaterProp",
        "parameterTypes": []
      },
      {
        "name": "getDbCatalog",
        "parameterTypes": []
      },
      {
        "name": "getDbPkName",
        "parameterTypes": []
      },
      {
        "name": "getDbSchema",
        "parameterTypes": []
      },
      {
        "name": "getDeleteFlagProp",
        "parameterTypes": []
      },
      {
        "name": "getDeleteVersionProp",
        "parameterTypes": []
      },
      {
        "name": "getDimensionalType",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilters",
        "parameterTypes": []
      },
      {
        "name": "getIndex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getIndexes",
        "parameterTypes": []
      },
      {
        "name": "getLabelProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getQuerySpace",
        "parameterTypes": []
      },
      {
        "name": "getRelation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRelations",
        "parameterTypes": []
      },
      {
        "name": "getShardProp",
        "parameterTypes": []
      },
      {
        "name": "getSqlText",
        "parameterTypes": []
      },
      {
        "name": "getStateProp",
        "parameterTypes": []
      },
      {
        "name": "getTableName",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getTenantProp",
        "parameterTypes": []
      },
      {
        "name": "getUniqueKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getUniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTimeProp",
        "parameterTypes": []
      },
      {
        "name": "getUpdaterProp",
        "parameterTypes": []
      },
      {
        "name": "getVersionProp",
        "parameterTypes": []
      },
      {
        "name": "hasAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAliases",
        "parameterTypes": []
      },
      {
        "name": "hasColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasColumns",
        "parameterTypes": []
      },
      {
        "name": "hasComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComponents",
        "parameterTypes": []
      },
      {
        "name": "hasCompute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComputes",
        "parameterTypes": []
      },
      {
        "name": "hasFilter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasFilters",
        "parameterTypes": []
      },
      {
        "name": "hasIndex",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasIndexes",
        "parameterTypes": []
      },
      {
        "name": "hasRelation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRelations",
        "parameterTypes": []
      },
      {
        "name": "hasUniqueKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasUniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "isCheckVersionWhenLazyLoad",
        "parameterTypes": []
      },
      {
        "name": "isEntityModeEnabled",
        "parameterTypes": []
      },
      {
        "name": "isKvTable",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isReadonly",
        "parameterTypes": []
      },
      {
        "name": "isRegisterShortName",
        "parameterTypes": []
      },
      {
        "name": "isTableView",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "isUseLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "isUseRevision",
        "parameterTypes": []
      },
      {
        "name": "isUseShard",
        "parameterTypes": []
      },
      {
        "name": "isUseTenant",
        "parameterTypes": []
      },
      {
        "name": "isUseWorkflow",
        "parameterTypes": []
      },
      {
        "name": "keySet_aliases",
        "parameterTypes": []
      },
      {
        "name": "keySet_columns",
        "parameterTypes": []
      },
      {
        "name": "keySet_components",
        "parameterTypes": []
      },
      {
        "name": "keySet_computes",
        "parameterTypes": []
      },
      {
        "name": "keySet_filters",
        "parameterTypes": []
      },
      {
        "name": "keySet_indexes",
        "parameterTypes": []
      },
      {
        "name": "keySet_relations",
        "parameterTypes": []
      },
      {
        "name": "keySet_uniqueKeys",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAliases",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCheckVersionWhenLazyLoad",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComponents",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComputes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCreateTimeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreaterProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbPkName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleteFlagProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeleteVersionProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDimensionalType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityModeEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFilters",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setIndexes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setKvTable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabelProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxBatchLoadSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPersistDriver",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQuerySpace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterShortName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRelations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setShardProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStateProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableView",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTenantProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUniqueKeys",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUpdateTimeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdaterProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseRevision",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseShard",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTenant",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseWorkflow",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVersionProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmEntityModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmJoinOnModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getLeftProp",
        "parameterTypes": []
      },
      {
        "name": "getLeftValue",
        "parameterTypes": []
      },
      {
        "name": "getRightProp",
        "parameterTypes": []
      },
      {
        "name": "getRightValue",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setLeftProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLeftValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setRightProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRightValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmJoinOnModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDict",
        "parameterTypes": [
          "io.nop.api.core.beans.DictBean"
        ]
      },
      {
        "name": "addDomain",
        "parameterTypes": [
          "io.nop.orm.model.OrmDomainModel"
        ]
      },
      {
        "name": "addEntity",
        "parameterTypes": [
          "io.nop.orm.model.OrmEntityModel"
        ]
      },
      {
        "name": "addPackage",
        "parameterTypes": [
          "io.nop.orm.model.OrmPackageModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDicts",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDomains",
        "parameterTypes": []
      },
      {
        "name": "getEntities",
        "parameterTypes": []
      },
      {
        "name": "getEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getPackages",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "hasDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDicts",
        "parameterTypes": []
      },
      {
        "name": "hasDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDomains",
        "parameterTypes": []
      },
      {
        "name": "hasEntities",
        "parameterTypes": []
      },
      {
        "name": "hasEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasPackages",
        "parameterTypes": []
      },
      {
        "name": "keySet_dicts",
        "parameterTypes": []
      },
      {
        "name": "keySet_domains",
        "parameterTypes": []
      },
      {
        "name": "keySet_entities",
        "parameterTypes": []
      },
      {
        "name": "keySet_packages",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDicts",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEntities",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPackages",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmRefSetModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSort",
        "parameterTypes": []
      },
      {
        "name": "keySet_sort",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSort",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmRefSetModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmReferenceModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getJoin",
        "parameterTypes": []
      },
      {
        "name": "getMaxBatchLoadSize",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPersistDriver",
        "parameterTypes": []
      },
      {
        "name": "getRefDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getRefEntityName",
        "parameterTypes": []
      },
      {
        "name": "getRefPropName",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isAutoCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isCascadeDelete",
        "parameterTypes": []
      },
      {
        "name": "isEmbedded",
        "parameterTypes": []
      },
      {
        "name": "isNotGenCode",
        "parameterTypes": []
      },
      {
        "name": "isQueryable",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAutoCascadeDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCascadeDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmbedded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJoin",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMaxBatchLoadSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNotGenCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPersistDriver",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQueryable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefPropName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmToManyReferenceModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxSize",
        "parameterTypes": []
      },
      {
        "name": "getSort",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSort",
        "parameterTypes": []
      },
      {
        "name": "isUseGlobalCache",
        "parameterTypes": []
      },
      {
        "name": "keySet_sort",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSort",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUseGlobalCache",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmToManyReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmToOneReferenceModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getConstraint",
        "parameterTypes": []
      },
      {
        "name": "getRefSet",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreDepends",
        "parameterTypes": []
      },
      {
        "name": "isReverseDepends",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setConstraint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreDepends",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRefSet",
        "parameterTypes": [
          "io.nop.orm.model.OrmRefSetModel"
        ]
      },
      {
        "name": "setReverseDepends",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmToOneReferenceModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.orm.model.OrmUniqueKeyModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getColumns",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getConstraint",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setColumns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConstraint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.orm.model._gen._OrmUniqueKeyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.resource.IResourceStore"
        ]
      },
      {
        "name": "register",
        "parameterTypes": []
      },
      {
        "name": "unregister",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.resource.DaoResourceNamespaceHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "errorWhenDirty"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "useFirst"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "useLast"
      }
    ],
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.sql_lib.OrmEntityRefreshBehavior",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildQueryBean",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "buildSql",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "checkAllLibValid",
        "parameterTypes": []
      },
      {
        "name": "checkAuth",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlItemModel",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "checkLibValid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkProxyMethods",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Class"
        ]
      },
      {
        "name": "createProxy",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "delayInit",
        "parameterTypes": []
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "doInvoke",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlItemModel",
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "getSqlItemModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSqlItemModel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.api.core.beans.LongRangeBean",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "setJdbcTemplate",
        "parameterTypes": [
          "io.nop.dao.jdbc.IJdbcTemplate"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib.SqlLibManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "execute"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "exists"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "findAll"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "findFirst"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "findPage"
      }
    ],
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.sql_lib.SqlMethod",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "checkDictSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "existsDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "setSqlLibManager",
        "parameterTypes": [
          "io.nop.orm.sql_lib.ISqlLibManager"
        ]
      },
      {
        "name": "supportDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib.dict.SqlLibDictLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "build",
        "parameterTypes": []
      },
      {
        "name": "getMapperClass",
        "parameterTypes": []
      },
      {
        "name": "setMapperClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setSqlLibManager",
        "parameterTypes": [
          "io.nop.orm.sql_lib.SqlLibManager"
        ]
      }
    ],
    "name": "io.nop.orm.sql_lib.proxy.SqlLibProxyFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBigIntValue",
        "parameterTypes": []
      },
      {
        "name": "getBoolean",
        "parameterTypes": []
      },
      {
        "name": "getBooleanValue",
        "parameterTypes": []
      },
      {
        "name": "getByte",
        "parameterTypes": []
      },
      {
        "name": "getByteValue",
        "parameterTypes": []
      },
      {
        "name": "getChar",
        "parameterTypes": []
      },
      {
        "name": "getCharValue",
        "parameterTypes": []
      },
      {
        "name": "getDate",
        "parameterTypes": []
      },
      {
        "name": "getDateTimeValue",
        "parameterTypes": []
      },
      {
        "name": "getDateValue",
        "parameterTypes": []
      },
      {
        "name": "getDatetime",
        "parameterTypes": []
      },
      {
        "name": "getDecimal",
        "parameterTypes": []
      },
      {
        "name": "getDecimalScale",
        "parameterTypes": []
      },
      {
        "name": "getDecimalValue",
        "parameterTypes": []
      },
      {
        "name": "getDouble",
        "parameterTypes": []
      },
      {
        "name": "getDoubleValue",
        "parameterTypes": []
      },
      {
        "name": "getFloat",
        "parameterTypes": []
      },
      {
        "name": "getFloatValue",
        "parameterTypes": []
      },
      {
        "name": "getInt",
        "parameterTypes": []
      },
      {
        "name": "getIntValue",
        "parameterTypes": []
      },
      {
        "name": "getLong",
        "parameterTypes": []
      },
      {
        "name": "getLongValue",
        "parameterTypes": []
      },
      {
        "name": "getNumberValue",
        "parameterTypes": []
      },
      {
        "name": "getShort",
        "parameterTypes": []
      },
      {
        "name": "getShortValue",
        "parameterTypes": []
      },
      {
        "name": "getString",
        "parameterTypes": []
      },
      {
        "name": "getStringValue",
        "parameterTypes": []
      },
      {
        "name": "getTimestamp",
        "parameterTypes": []
      },
      {
        "name": "getTimestampValue",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTypedValue",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType"
        ]
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "orm_refLoaded",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_unsetRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBigIntValue",
        "parameterTypes": [
          "java.math.BigInteger"
        ]
      },
      {
        "name": "setBoolean",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setBooleanValue",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setByte",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setByteValue",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setChar",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setCharValue",
        "parameterTypes": [
          "java.lang.Character"
        ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDateTimeValue",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDateValue",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDatetime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setDecimal",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setDecimalScale",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDecimalValue",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setDouble",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setDoubleValue",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setFloat",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setFloatValue",
        "parameterTypes": [
          "java.lang.Float"
        ]
      },
      {
        "name": "setInt",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIntValue",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLong",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLongValue",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNullValue",
        "parameterTypes": []
      },
      {
        "name": "setShort",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setShortValue",
        "parameterTypes": [
          "java.lang.Short"
        ]
      },
      {
        "name": "setString",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStringValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestamp",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setTimestampValue",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUnknownTypedValue",
        "parameterTypes": [
          "io.nop.commons.type.StdDataType",
          "java.lang.Object"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.orm.support.AbstractOrmKeyValueTable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "internalClearRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalGetAliasValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalGetRefEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "internalGetValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalSetAliasValue",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "internalSetRefEntity",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.orm.IOrmEntity",
          "java.lang.Runnable"
        ]
      },
      {
        "name": "internalSetReverseRefEntity",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.orm.IOrmEntity",
          "java.lang.Runnable"
        ]
      },
      {
        "name": "internalSetValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "nopRevChildChangePropId",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_refEntity",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_refLoaded",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_unsetRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_get",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_has",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "prop_set",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "requireValues",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.support.DynamicOrmEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDateValue",
        "parameterTypes": []
      },
      {
        "name": "getDecimalScale",
        "parameterTypes": []
      },
      {
        "name": "getDecimalValue",
        "parameterTypes": []
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldType",
        "parameterTypes": []
      },
      {
        "name": "getStringValue",
        "parameterTypes": []
      },
      {
        "name": "getTimestampValue",
        "parameterTypes": []
      },
      {
        "name": "setDateValue",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDecimalScale",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDecimalValue",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStringValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestampValue",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      }
    ],
    "name": "io.nop.orm.support.DynamicOrmKeyValueTable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildCompositeId",
        "parameterTypes": [
          "java.util.List",
          "[I"
        ]
      },
      {
        "name": "buildSimpleId",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "checkPropIdRange",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "checkReadonly",
        "parameterTypes": []
      },
      {
        "name": "clearId",
        "parameterTypes": []
      },
      {
        "name": "defaultGetProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "defaultSetProp",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "forcePropLoaded",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "get_t",
        "parameterTypes": []
      },
      {
        "name": "internalClearRefs",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "internalNotifyPkWatcher",
        "parameterTypes": []
      },
      {
        "name": "make_t",
        "parameterTypes": []
      },
      {
        "name": "markPropAccessed",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "markPropDirty",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "newBitSet",
        "parameterTypes": []
      },
      {
        "name": "newError",
        "parameterTypes": [
          "io.nop.api.core.exceptions.ErrorCode"
        ]
      },
      {
        "name": "newOrmEntity",
        "parameterTypes": [
          "java.lang.Class",
          "boolean"
        ]
      },
      {
        "name": "newTypeConversionError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newValuesMap",
        "parameterTypes": []
      },
      {
        "name": "nopRevChildChangePropId",
        "parameterTypes": []
      },
      {
        "name": "onInitProp",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "onPropGet",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "onPropSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_addPkWatcher",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "orm_attach",
        "parameterTypes": [
          "io.nop.orm.IOrmEntityEnhancer"
        ]
      },
      {
        "name": "orm_attached",
        "parameterTypes": []
      },
      {
        "name": "orm_clearDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_computed",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "orm_detach",
        "parameterTypes": []
      },
      {
        "name": "orm_dirty",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyNewValues",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyOldValues",
        "parameterTypes": []
      },
      {
        "name": "orm_dirtyPropIds",
        "parameterTypes": []
      },
      {
        "name": "orm_disableAutoStamp",
        "parameterTypes": []
      },
      {
        "name": "orm_disableAutoStamp",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_disableLogicalDelete",
        "parameterTypes": []
      },
      {
        "name": "orm_disableLogicalDelete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_enhancer",
        "parameterTypes": []
      },
      {
        "name": "orm_entityModel",
        "parameterTypes": []
      },
      {
        "name": "orm_entityModel",
        "parameterTypes": [
          "io.nop.orm.model.IEntityModel"
        ]
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_extDirty",
        "parameterTypes": []
      },
      {
        "name": "orm_extDirty",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_flushComponent",
        "parameterTypes": []
      },
      {
        "name": "orm_flushVisiting",
        "parameterTypes": []
      },
      {
        "name": "orm_flushVisiting",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_forEachDirtyProp",
        "parameterTypes": [
          "java.util.function.ObjIntConsumer"
        ]
      },
      {
        "name": "orm_forEachInitedProp",
        "parameterTypes": [
          "java.util.function.ObjIntConsumer"
        ]
      },
      {
        "name": "orm_forceLoad",
        "parameterTypes": []
      },
      {
        "name": "orm_fullyLoaded",
        "parameterTypes": []
      },
      {
        "name": "orm_getBean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_inited",
        "parameterTypes": []
      },
      {
        "name": "orm_initedValues",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_locked",
        "parameterTypes": []
      },
      {
        "name": "orm_locked",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_markFullyLoaded",
        "parameterTypes": []
      },
      {
        "name": "orm_propDirty",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propInited",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propLoaded",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propOldValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propValueByName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_proxy",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": []
      },
      {
        "name": "orm_readonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "orm_requireEntity",
        "parameterTypes": []
      },
      {
        "name": "orm_reset",
        "parameterTypes": []
      },
      {
        "name": "orm_restoreValues",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "orm_state",
        "parameterTypes": []
      },
      {
        "name": "orm_state",
        "parameterTypes": [
          "io.nop.orm.OrmEntityState"
        ]
      },
      {
        "name": "orm_tenantId",
        "parameterTypes": []
      },
      {
        "name": "orm_unload",
        "parameterTypes": []
      },
      {
        "name": "orm_useOldValues",
        "parameterTypes": [
          "io.nop.orm.IOrmEntity"
        ]
      },
      {
        "name": "requireEnhancer",
        "parameterTypes": []
      },
      {
        "name": "requireEntityModel",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.orm.support.OrmEntity",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "onAfterCompletion",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction",
          "io.nop.dao.txn.ITransactionListener$CompleteStatus",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "onBeforeCommit",
        "parameterTypes": [
          "io.nop.dao.txn.ITransaction"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.orm.txn.OrmTransactionListener",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "invokeAsync",
        "parameterTypes": [
          "java.util.function.Function",
          "java.lang.Object"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      }
    ],
    "name": "io.nop.orm.utils.SingleSessionFunctionInvoker",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "applyConfig",
        "parameterTypes": [
          "io.agroal.api.configuration.supplier.AgroalDataSourceConfigurationSupplier"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "get",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setConfig",
        "parameterTypes": [
          "io.nop.dao.jdbc.datasource.DataSourceConfig"
        ]
      }
    ],
    "name": "io.nop.quarkus.core.dao.AgroalDataSourceFactoryBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "_instance"
      }
    ],
    "methods": [
      {
        "name": "instance",
        "parameterTypes": []
      },
      {
        "name": "loadModelFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "parseFromVirtualPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.report.core.build.XptModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "current",
        "parameterTypes": []
      },
      {
        "name": "getDsItems",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell",
          "java.lang.String"
        ]
      },
      {
        "name": "getDsName",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "makeDataSet",
        "parameterTypes": [
          "io.nop.report.core.engine.IXptRuntime",
          "java.lang.String"
        ]
      },
      {
        "name": "makeDataSetFromValue",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "io.nop.report.core.engine.IXptRuntime"
        ]
      }
    ],
    "name": "io.nop.report.core.dataset.DynamicReportDataSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "avg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "avgBy",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "countIf",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "current",
        "parameterTypes": []
      },
      {
        "name": "each",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "field",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "first",
        "parameterTypes": []
      },
      {
        "name": "getDsName",
        "parameterTypes": []
      },
      {
        "name": "getItems",
        "parameterTypes": []
      },
      {
        "name": "group",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "group",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "groupBy",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "last",
        "parameterTypes": []
      },
      {
        "name": "map",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "max",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "maxBy",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "min",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "minBy",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "newDataSet",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "select",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "sort",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "sort2",
        "parameterTypes": [
          "java.lang.String",
          "boolean",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "sortBy",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "sum",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "sumBy",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "toDynamic",
        "parameterTypes": [
          "io.nop.report.core.engine.IXptRuntime"
        ]
      },
      {
        "name": "where",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "where",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.report.core.dataset.ReportDataSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildXptModelFromImpModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRendererForExcel",
        "parameterTypes": [
          "io.nop.excel.model.ExcelWorkbook",
          "java.lang.String"
        ]
      },
      {
        "name": "getRendererForXptModel",
        "parameterTypes": [
          "io.nop.excel.model.ExcelWorkbook",
          "java.lang.String"
        ]
      },
      {
        "name": "getXptModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRenderers",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.report.core.engine.ReportEngine",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "addSheetCleanup",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "addSheetLoopCleanup",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "addWorkbookCleanup",
        "parameterTypes": [
          "java.lang.Runnable"
        ]
      },
      {
        "name": "cells",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "ds",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evaluateCell",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "field",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCell",
        "parameterTypes": []
      },
      {
        "name": "getEvalScope",
        "parameterTypes": []
      },
      {
        "name": "getImage",
        "parameterTypes": []
      },
      {
        "name": "getNamedCell",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamedCellSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getSheet",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValueByPropPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getWorkbook",
        "parameterTypes": []
      },
      {
        "name": "incAndGet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "makeDs",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "makeImage",
        "parameterTypes": []
      },
      {
        "name": "runSheetCleanup",
        "parameterTypes": []
      },
      {
        "name": "runSheetLoopCleanup",
        "parameterTypes": []
      },
      {
        "name": "runWorkbookCleanup",
        "parameterTypes": []
      },
      {
        "name": "setCell",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setImage",
        "parameterTypes": [
          "io.nop.excel.model.ExcelImage"
        ]
      },
      {
        "name": "setRow",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedRow"
        ]
      },
      {
        "name": "setSheet",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedSheet"
        ]
      },
      {
        "name": "setWorkbook",
        "parameterTypes": [
          "io.nop.excel.model.ExcelWorkbook"
        ]
      }
    ],
    "name": "io.nop.report.core.engine.XptRuntime",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "buildRenderer",
        "parameterTypes": [
          "io.nop.excel.model.ExcelWorkbook",
          "io.nop.ooxml.xlsx.output.IExcelSheetGenerator"
        ]
      }
    ],
    "name": "io.nop.report.core.engine.renderer.HtmlReportRendererFactory",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildRenderer",
        "parameterTypes": [
          "io.nop.excel.model.ExcelWorkbook",
          "io.nop.ooxml.xlsx.output.IExcelSheetGenerator"
        ]
      }
    ],
    "name": "io.nop.report.core.engine.renderer.XlsxReportRendererFactory",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "ACCSUM",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.report.core.model.ExpandedCellSet",
          "io.nop.report.core.model.ExpandedCellSet"
        ]
      },
      {
        "name": "AVERAGE",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "COUNT",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "COUNTA",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "MAX",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "MIN",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "NVL",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "PRODUCT",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "PROPORTION",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.report.core.model.ExpandedCellSet",
          "io.nop.report.core.model.ExpandedCellSet"
        ]
      },
      {
        "name": "RANK",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.report.core.model.ExpandedCellSet",
          "io.nop.report.core.model.ExpandedCellSet"
        ]
      },
      {
        "name": "SUM",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "computeRank",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCellSet"
        ]
      }
    ],
    "name": "io.nop.report.core.functions.ReportFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.core.initialize.ReportCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addColChild",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "addColChildren",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addRowChild",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "addRowChildren",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "addToList",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "changeColSpan",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "changeRowSpan",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "childCell",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.report.core.engine.IXptRuntime"
        ]
      },
      {
        "name": "childSet",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.report.core.engine.IXptRuntime"
        ]
      },
      {
        "name": "childValue",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.report.core.engine.IXptRuntime"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "colChildSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "cv",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "getCol",
        "parameterTypes": []
      },
      {
        "name": "getColChildren",
        "parameterTypes": []
      },
      {
        "name": "getColClosest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getColDescendants",
        "parameterTypes": []
      },
      {
        "name": "getColIndex",
        "parameterTypes": []
      },
      {
        "name": "getColParent",
        "parameterTypes": []
      },
      {
        "name": "getColParentExpandIndex",
        "parameterTypes": []
      },
      {
        "name": "getColRoot",
        "parameterTypes": []
      },
      {
        "name": "getComment",
        "parameterTypes": []
      },
      {
        "name": "getComputed",
        "parameterTypes": [
          "java.lang.String",
          "java.util.function.Function"
        ]
      },
      {
        "name": "getCp",
        "parameterTypes": []
      },
      {
        "name": "getCr",
        "parameterTypes": []
      },
      {
        "name": "getDown",
        "parameterTypes": []
      },
      {
        "name": "getDs",
        "parameterTypes": []
      },
      {
        "name": "getDsName",
        "parameterTypes": []
      },
      {
        "name": "getEi",
        "parameterTypes": []
      },
      {
        "name": "getEv",
        "parameterTypes": []
      },
      {
        "name": "getExpandField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getExpandIndex",
        "parameterTypes": []
      },
      {
        "name": "getExpandKey",
        "parameterTypes": []
      },
      {
        "name": "getExpandType",
        "parameterTypes": []
      },
      {
        "name": "getExpandValue",
        "parameterTypes": []
      },
      {
        "name": "getExportValue",
        "parameterTypes": []
      },
      {
        "name": "getExtValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFormattedValue",
        "parameterTypes": []
      },
      {
        "name": "getFormula",
        "parameterTypes": []
      },
      {
        "name": "getHeight",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getImage",
        "parameterTypes": []
      },
      {
        "name": "getLinkUrl",
        "parameterTypes": []
      },
      {
        "name": "getMergeAcross",
        "parameterTypes": []
      },
      {
        "name": "getMergeDown",
        "parameterTypes": []
      },
      {
        "name": "getModel",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNumberValue",
        "parameterTypes": []
      },
      {
        "name": "getRealCell",
        "parameterTypes": []
      },
      {
        "name": "getRight",
        "parameterTypes": []
      },
      {
        "name": "getRow",
        "parameterTypes": []
      },
      {
        "name": "getRowChildren",
        "parameterTypes": []
      },
      {
        "name": "getRowClosest",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRowDescendants",
        "parameterTypes": []
      },
      {
        "name": "getRowIndex",
        "parameterTypes": []
      },
      {
        "name": "getRowParent",
        "parameterTypes": []
      },
      {
        "name": "getRowParentExpandIndex",
        "parameterTypes": []
      },
      {
        "name": "getRowRoot",
        "parameterTypes": []
      },
      {
        "name": "getRp",
        "parameterTypes": []
      },
      {
        "name": "getRr",
        "parameterTypes": []
      },
      {
        "name": "getStyleId",
        "parameterTypes": []
      },
      {
        "name": "getTable",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "getWidth",
        "parameterTypes": []
      },
      {
        "name": "hasColDescendant",
        "parameterTypes": []
      },
      {
        "name": "hasRowDescendant",
        "parameterTypes": []
      },
      {
        "name": "isColDescendantOf",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "isColParentExpandable",
        "parameterTypes": []
      },
      {
        "name": "isEvaluated",
        "parameterTypes": []
      },
      {
        "name": "isExpandable",
        "parameterTypes": []
      },
      {
        "name": "isExpanded",
        "parameterTypes": []
      },
      {
        "name": "isExportFormattedValue",
        "parameterTypes": []
      },
      {
        "name": "isProxyCell",
        "parameterTypes": []
      },
      {
        "name": "isRemoved",
        "parameterTypes": []
      },
      {
        "name": "isRowDescendantOf",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "isRowParentExpandable",
        "parameterTypes": []
      },
      {
        "name": "isStaticCell",
        "parameterTypes": []
      },
      {
        "name": "makeImage",
        "parameterTypes": []
      },
      {
        "name": "markEvaluated",
        "parameterTypes": []
      },
      {
        "name": "markProxy",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "removeFromList",
        "parameterTypes": [
          "java.util.Map",
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "removeRowChild",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "rowChildSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCol",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCol"
        ]
      },
      {
        "name": "setColDescendants",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setColParent",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setComment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDown",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setEvaluated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExcelImage",
        "parameterTypes": [
          "io.nop.excel.model.ExcelImage"
        ]
      },
      {
        "name": "setExpandIndex",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setExpandValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setExtValue",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setFormattedValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setFormula",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLinkUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMergeAcross",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMergeDown",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setModel",
        "parameterTypes": [
          "io.nop.excel.model.XptCellModel"
        ]
      },
      {
        "name": "setRealCell",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setRemoved",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRight",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setRow",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedRow"
        ]
      },
      {
        "name": "setRowDescendants",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRowParent",
        "parameterTypes": [
          "io.nop.report.core.model.ExpandedCell"
        ]
      },
      {
        "name": "setStyleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.report.core.model.ExpandedCell",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "colChildSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "evaluateAll",
        "parameterTypes": [
          "io.nop.report.core.engine.IXptRuntime"
        ]
      },
      {
        "name": "filter",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "flatMap",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getCell",
        "parameterTypes": []
      },
      {
        "name": "getCellName",
        "parameterTypes": []
      },
      {
        "name": "getCellRanges",
        "parameterTypes": []
      },
      {
        "name": "getCells",
        "parameterTypes": []
      },
      {
        "name": "getColCount",
        "parameterTypes": []
      },
      {
        "name": "getExpandIndex",
        "parameterTypes": []
      },
      {
        "name": "getFirstCell",
        "parameterTypes": []
      },
      {
        "name": "getLastCell",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "getRowCount",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "map",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "realCells",
        "parameterTypes": []
      },
      {
        "name": "rowChildSet",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.report.core.model.ExpandedCellSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.dao.entity.NopReportDataset",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.dao.entity.NopReportDatasetAuth",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.dao.entity.NopReportDefinition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.dao.entity.NopReportResultFile",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dsConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dsMeta"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dsName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dsText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dsType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dsView"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dsConfig"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dsMeta"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dsMetaComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dsName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dsText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dsTextComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dsType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dsView"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dsViewComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDsConfig",
        "parameterTypes": []
      },
      {
        "name": "getDsId",
        "parameterTypes": []
      },
      {
        "name": "getDsMeta",
        "parameterTypes": []
      },
      {
        "name": "getDsMetaComponent",
        "parameterTypes": []
      },
      {
        "name": "getDsName",
        "parameterTypes": []
      },
      {
        "name": "getDsText",
        "parameterTypes": []
      },
      {
        "name": "getDsTextComponent",
        "parameterTypes": []
      },
      {
        "name": "getDsType",
        "parameterTypes": []
      },
      {
        "name": "getDsView",
        "parameterTypes": []
      },
      {
        "name": "getDsViewComponent",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDsConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDsId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDsMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDsName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDsText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDsType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDsView",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.report.dao.entity._gen._NopReportDataset",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_permissions"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_permissions"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDsId",
        "parameterTypes": []
      },
      {
        "name": "getPermissions",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDsId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPermissions",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.report.dao.entity._gen._NopReportDatasetAuth",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_rptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_rptName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_rptText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_rptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_rptName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_rptText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRptId",
        "parameterTypes": []
      },
      {
        "name": "getRptName",
        "parameterTypes": []
      },
      {
        "name": "getRptText",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRptName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRptText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.report.dao.entity._gen._NopReportDefinition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizDate"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dsParams"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_filePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fileType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_rptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizDate"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dsId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dsParams"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_filePath"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fileType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_rptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBizDate",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDsId",
        "parameterTypes": []
      },
      {
        "name": "getDsParams",
        "parameterTypes": []
      },
      {
        "name": "getFileName",
        "parameterTypes": []
      },
      {
        "name": "getFilePath",
        "parameterTypes": []
      },
      {
        "name": "getFileType",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRptId",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBizDate",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDsId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDsParams",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.report.dao.entity._gen._NopReportResultFile",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "reportEngine"
      }
    ],
    "methods": [
      {
        "name": "download",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "downloadModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDemoReports",
        "parameterTypes": []
      },
      {
        "name": "getReportBeans",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "renderHtml",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.report.demo.biz.ReportDemoBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "QRCODE",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope"
        ]
      },
      {
        "name": "QRCODE_IMAGE",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.excel.model.ExcelImage",
          "io.nop.integration.api.qrcode.QrcodeOptions"
        ]
      },
      {
        "name": "register",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.report.ext.ReportExtFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.report.ext.ReportExtInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.service.entity.NopReportDatasetAuthBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.service.entity.NopReportDatasetBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.service.entity.NopReportDefinitionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.report.service.entity.NopReportResultFileBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.rpc.model.proto.ProtoFileParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.rule.api.beans.RuleKeyBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.rule.api.beans.RuleLogMessageBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.rule.api.beans.RuleMetaBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.rule.api.beans.RuleRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.rule.api.beans.RuleResultBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getRuleName",
        "parameterTypes": []
      },
      {
        "name": "getRuleVersion",
        "parameterTypes": []
      },
      {
        "name": "setRuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "name": "io.nop.rule.api.beans._gen._RuleKeyBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLogTime",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "getRuleNodeId",
        "parameterTypes": []
      },
      {
        "name": "getRuleNodeLabel",
        "parameterTypes": []
      },
      {
        "name": "setLogTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setMessage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleNodeId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleNodeLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.rule.api.beans._gen._RuleLogMessageBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getInputs",
        "parameterTypes": []
      },
      {
        "name": "getOutputs",
        "parameterTypes": []
      },
      {
        "name": "getRuleName",
        "parameterTypes": []
      },
      {
        "name": "getRuleVersion",
        "parameterTypes": []
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInputs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOutputs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "name": "io.nop.rule.api.beans._gen._RuleMetaBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getInputs",
        "parameterTypes": []
      },
      {
        "name": "getRuleName",
        "parameterTypes": []
      },
      {
        "name": "getRuleVersion",
        "parameterTypes": []
      },
      {
        "name": "setInputs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "name": "io.nop.rule.api.beans._gen._RuleRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLogMessages",
        "parameterTypes": []
      },
      {
        "name": "getOutputs",
        "parameterTypes": []
      },
      {
        "name": "getRuleMatch",
        "parameterTypes": []
      },
      {
        "name": "getRuleName",
        "parameterTypes": []
      },
      {
        "name": "getRuleVersion",
        "parameterTypes": []
      },
      {
        "name": "setLogMessages",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOutputs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRuleMatch",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "name": "io.nop.rule.api.beans._gen._RuleResultBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "executeRule",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long",
          "io.nop.rule.core.IRuleRuntime"
        ]
      },
      {
        "name": "getRule",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "getRuleModel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "newRuntime",
        "parameterTypes": []
      },
      {
        "name": "newRuntime",
        "parameterTypes": [
          "io.nop.commons.cache.ICache",
          "io.nop.core.lang.eval.IEvalScope"
        ]
      }
    ],
    "name": "io.nop.rule.core.execute.RuleManager",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.rule.core.model.compile.RuleDslModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.rule.core.model.compile.RuleExcelModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "executeRule",
        "parameterTypes": [
          "io.nop.rule.api.beans.RuleRequestBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getRuleMeta",
        "parameterTypes": [
          "io.nop.rule.api.beans.RuleKeyBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setLogMessageSaver",
        "parameterTypes": [
          "io.nop.rule.core.service.IRuleLogMessageSaver"
        ]
      },
      {
        "name": "setRuleManager",
        "parameterTypes": [
          "io.nop.rule.core.IRuleManager"
        ]
      },
      {
        "name": "setSaveLogMessage",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.rule.core.service.impl.RuleServiceImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBeforeExecute",
        "parameterTypes": []
      },
      {
        "name": "getDecisionMatrix",
        "parameterTypes": []
      },
      {
        "name": "getRoleIds",
        "parameterTypes": []
      },
      {
        "name": "getRootRuleNodes",
        "parameterTypes": []
      },
      {
        "name": "getRuleInputs",
        "parameterTypes": []
      },
      {
        "name": "getRuleOutputs",
        "parameterTypes": []
      },
      {
        "name": "setBeforeExecute",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDecisionMatrix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleInputs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRuleOutputs",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.rule.dao.entity.NopRuleDefinition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.rule.dao.entity.NopRuleLog",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.rule.dao.entity.NopRuleNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.rule.dao.entity.NopRuleRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_modelText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ruleGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ruleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ruleName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ruleType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ruleVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_modelText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_modelTextXmlComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ruleGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ruleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ruleName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ruleNodes"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ruleRoles"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ruleType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ruleVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getModelText",
        "parameterTypes": []
      },
      {
        "name": "getModelTextXmlComponent",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRuleGroup",
        "parameterTypes": []
      },
      {
        "name": "getRuleId",
        "parameterTypes": []
      },
      {
        "name": "getRuleName",
        "parameterTypes": []
      },
      {
        "name": "getRuleNodes",
        "parameterTypes": []
      },
      {
        "name": "getRuleRoles",
        "parameterTypes": []
      },
      {
        "name": "getRuleType",
        "parameterTypes": []
      },
      {
        "name": "getRuleVersion",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModelText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.rule.dao.entity._gen._NopRuleDefinition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logLevel"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ruleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logLevel"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ruleDefinition"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ruleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getLogLevel",
        "parameterTypes": []
      },
      {
        "name": "getLogMsg",
        "parameterTypes": []
      },
      {
        "name": "getRuleDefinition",
        "parameterTypes": []
      },
      {
        "name": "getRuleId",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogLevel",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLogMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleDefinition",
        "parameterTypes": [
          "io.nop.rule.dao.entity.NopRuleDefinition"
        ]
      },
      {
        "name": "setRuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.rule.dao.entity._gen._NopRuleLog",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isLeaf"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_label"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_outputs"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_predicate"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ruleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sortNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_children"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isLeaf"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_label"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_outputs"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_outputsComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parentId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_predicate"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_predicateComponent"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ruleDefinition"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ruleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sortNo"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getChildren",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getIsLeaf",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getOutputs",
        "parameterTypes": []
      },
      {
        "name": "getOutputsComponent",
        "parameterTypes": []
      },
      {
        "name": "getParent",
        "parameterTypes": []
      },
      {
        "name": "getParentId",
        "parameterTypes": []
      },
      {
        "name": "getPredicate",
        "parameterTypes": []
      },
      {
        "name": "getPredicateComponent",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRuleDefinition",
        "parameterTypes": []
      },
      {
        "name": "getRuleId",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getSortNo",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsLeaf",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOutputs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParent",
        "parameterTypes": [
          "io.nop.rule.dao.entity.NopRuleNode"
        ]
      },
      {
        "name": "setParentId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPredicate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleDefinition",
        "parameterTypes": [
          "io.nop.rule.dao.entity.NopRuleDefinition"
        ]
      },
      {
        "name": "setRuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSortNo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.rule.dao.entity._gen._NopRuleNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isAdmin"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ruleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isAdmin"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_roleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ruleDefinition"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ruleId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getIsAdmin",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRoleId",
        "parameterTypes": []
      },
      {
        "name": "getRuleDefinition",
        "parameterTypes": []
      },
      {
        "name": "getRuleId",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsAdmin",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRuleDefinition",
        "parameterTypes": [
          "io.nop.rule.dao.entity.NopRuleDefinition"
        ]
      },
      {
        "name": "setRuleId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.rule.dao.entity._gen._NopRuleRole",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "buildRuleInputSchema",
        "parameterTypes": [
          "io.nop.rule.dao.entity.NopRuleDefinition"
        ]
      },
      {
        "name": "buildRuleModel",
        "parameterTypes": [
          "io.nop.rule.dao.entity.NopRuleDefinition"
        ]
      },
      {
        "name": "buildRuleModelNode",
        "parameterTypes": [
          "io.nop.rule.dao.entity.NopRuleDefinition"
        ]
      },
      {
        "name": "getDaoProvider",
        "parameterTypes": []
      },
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadRule",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "loadRuleDefinition",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      }
    ],
    "name": "io.nop.rule.dao.model.DaoRuleModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFields",
        "parameterTypes": []
      },
      {
        "name": "setFields",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.rule.service.entity.ConditionFieldsResponse",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "ruleModelLoader"
      }
    ],
    "methods": [
      {
        "name": "defaultPrepareSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "defaultPrepareUpdate",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getConditionFields",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getInputJsonSchema",
        "parameterTypes": [
          "io.nop.rule.api.beans.RuleKeyBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getOutputFields",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "importExcelFile",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData"
        ]
      },
      {
        "name": "validateModel",
        "parameterTypes": [
          "io.nop.rule.dao.entity.NopRuleDefinition"
        ]
      }
    ],
    "name": "io.nop.rule.service.entity.NopRuleDefinitionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.rule.service.entity.NopRuleLogBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "ruleModelLoader"
      }
    ],
    "methods": [
      {
        "name": "predicateLabel",
        "parameterTypes": [
          "io.nop.rule.dao.entity.NopRuleNode",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.rule.service.entity.NopRuleNodeBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.rule.service.entity.NopRuleRoleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX_COUNT"
      }
    ],
    "methods": [
      {
        "name": "addVariable",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.coderule.ICodeRuleVariable"
        ]
      },
      {
        "name": "generate",
        "parameterTypes": [
          "java.lang.String",
          "java.time.LocalDateTime",
          "java.util.function.LongSupplier",
          "java.lang.Object"
        ]
      },
      {
        "name": "generateFromProp",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.coderule.CodeRuleParams"
        ]
      },
      {
        "name": "generateRand",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.coderule.CodeRuleParams"
        ]
      },
      {
        "name": "generateSeq",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.coderule.CodeRuleParams"
        ]
      },
      {
        "name": "pad",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "removeVariable",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.dao.coderule.ICodeRuleVariable"
        ]
      },
      {
        "name": "setVariables",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.sys.dao.coderule.DefaultCodeRule",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "generate",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCodeRule",
        "parameterTypes": [
          "io.nop.dao.coderule.ICodeRule"
        ]
      },
      {
        "name": "setSequenceGenerator",
        "parameterTypes": [
          "io.nop.dao.seq.ISequenceGenerator"
        ]
      },
      {
        "name": "setSysCalendar",
        "parameterTypes": [
          "io.nop.api.core.time.ISysCalendar"
        ]
      }
    ],
    "name": "io.nop.sys.dao.coderule.SysCodeRuleGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "existsDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDict",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "supportDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.sys.dao.dict.SysDictLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysClusterLeader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysCodeRule",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysDict",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysDictOption",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity.NopSysExtField",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity.NopSysI18n",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity.NopSysLock",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysMakerCheckerRecord",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysNoticeTemplate",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysSequence",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getNormalizedValue",
        "parameterTypes": []
      },
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.entity.NopSysUserVariable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.dao.entity.NopSysVariable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_appId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_clusterId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_electTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_leaderAdder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_leaderEpoch"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_leaderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_appId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_clusterId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_electTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_leaderAdder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_leaderEpoch"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_leaderId"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAppId",
        "parameterTypes": []
      },
      {
        "name": "getClusterId",
        "parameterTypes": []
      },
      {
        "name": "getElectTime",
        "parameterTypes": []
      },
      {
        "name": "getExpireAt",
        "parameterTypes": []
      },
      {
        "name": "getLeaderAdder",
        "parameterTypes": []
      },
      {
        "name": "getLeaderEpoch",
        "parameterTypes": []
      },
      {
        "name": "getLeaderId",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAppId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClusterId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setElectTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setExpireAt",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setLeaderAdder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLeaderEpoch",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLeaderId",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysClusterLeader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_codePattern"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_seqName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_codePattern"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_seqName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCodePattern",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSeqName",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCodePattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeqName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysCodeRule",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dictName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dictName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dictOptions"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDictName",
        "parameterTypes": []
      },
      {
        "name": "getDictOptions",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDictName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysDict",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_codeValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dictId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_groupName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isDeprecated"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isInternal"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_label"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_codeValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dict"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dictId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_groupName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isDeprecated"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isInternal"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_label"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCodeValue",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getDictId",
        "parameterTypes": []
      },
      {
        "name": "getGroupName",
        "parameterTypes": []
      },
      {
        "name": "getIsDeprecated",
        "parameterTypes": []
      },
      {
        "name": "getIsInternal",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCodeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDict",
        "parameterTypes": [
          "io.nop.sys.dao.entity.NopSysDict"
        ]
      },
      {
        "name": "setDictId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsDeprecated",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setIsInternal",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysDictOption",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dateValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_decimalScale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_decimalValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_entityName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fieldType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stringValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_timestampValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dateValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_decimalScale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_decimalValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_entityName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fieldType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stringValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_timestampValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDateValue",
        "parameterTypes": []
      },
      {
        "name": "getDecimalScale",
        "parameterTypes": []
      },
      {
        "name": "getDecimalValue",
        "parameterTypes": []
      },
      {
        "name": "getEntityId",
        "parameterTypes": []
      },
      {
        "name": "getEntityName",
        "parameterTypes": []
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldType",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStringValue",
        "parameterTypes": []
      },
      {
        "name": "getTimestampValue",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateValue",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDecimalScale",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setDecimalValue",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setEntityId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStringValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestampValue",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysExtField",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_i18nKey"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_i18nLocale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_i18nKey"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_i18nLocale"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_value"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getI18nKey",
        "parameterTypes": []
      },
      {
        "name": "getI18nLocale",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setI18nKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setI18nLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysI18n",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_appId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_holderAdder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_holderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lockGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lockName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lockReason"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lockTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_appId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_expireAt"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_holderAdder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_holderId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lockGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lockName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lockReason"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lockTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAppId",
        "parameterTypes": []
      },
      {
        "name": "getExpireAt",
        "parameterTypes": []
      },
      {
        "name": "getHolderAdder",
        "parameterTypes": []
      },
      {
        "name": "getHolderId",
        "parameterTypes": []
      },
      {
        "name": "getLockGroup",
        "parameterTypes": []
      },
      {
        "name": "getLockName",
        "parameterTypes": []
      },
      {
        "name": "getLockReason",
        "parameterTypes": []
      },
      {
        "name": "getLockTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAppId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExpireAt",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setHolderAdder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHolderId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockReason",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysLock",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cancelAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cbErrCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ceErrMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_checkTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_checkerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_checkerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_inputPage"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_makerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_makerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_requestAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_requestData"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_requestTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tryResult"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cancelAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cbErrCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ceErrMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_checkTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_checkerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_checkerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_inputPage"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_makerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_makerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_requestAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_requestData"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_requestTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tryResult"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getBizObjId",
        "parameterTypes": []
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCancelAction",
        "parameterTypes": []
      },
      {
        "name": "getCbErrCode",
        "parameterTypes": []
      },
      {
        "name": "getCeErrMsg",
        "parameterTypes": []
      },
      {
        "name": "getCheckTime",
        "parameterTypes": []
      },
      {
        "name": "getCheckerId",
        "parameterTypes": []
      },
      {
        "name": "getCheckerName",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getInputPage",
        "parameterTypes": []
      },
      {
        "name": "getMakerId",
        "parameterTypes": []
      },
      {
        "name": "getMakerName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRequestAction",
        "parameterTypes": []
      },
      {
        "name": "getRequestData",
        "parameterTypes": []
      },
      {
        "name": "getRequestTime",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getTryResult",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setBizObjId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCancelAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCbErrCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCeErrMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setCheckerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInputPage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMakerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMakerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequestTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTryResult",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysMakerCheckerRecord",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tplType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_content"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_extFields"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_name"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tplType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getExtFields",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getTplType",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTplType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysNoticeTemplate",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cacheSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isUuid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_maxValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nextValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_resetType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_seqName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_seqType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stepSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cacheSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_delFlag"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isUuid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_maxValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nextValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_resetType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_seqName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_seqType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stepSize"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCacheSize",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDelFlag",
        "parameterTypes": []
      },
      {
        "name": "getIsUuid",
        "parameterTypes": []
      },
      {
        "name": "getMaxValue",
        "parameterTypes": []
      },
      {
        "name": "getNextValue",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getResetType",
        "parameterTypes": []
      },
      {
        "name": "getSeqName",
        "parameterTypes": []
      },
      {
        "name": "getSeqType",
        "parameterTypes": []
      },
      {
        "name": "getStepSize",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCacheSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelFlag",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setIsUuid",
        "parameterTypes": [
          "java.lang.Byte"
        ]
      },
      {
        "name": "setMaxValue",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setNextValue",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResetType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSeqName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeqType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStepSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysSequence",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stdDomain"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stdDomain"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_userId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getUserId",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "getVarType",
        "parameterTypes": []
      },
      {
        "name": "getVarValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysUserVariable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stdDomain"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_varValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stdDomain"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_varValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "getVarType",
        "parameterTypes": []
      },
      {
        "name": "getVarValue",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVarValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.sys.dao.entity._gen._NopSysVariable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "daoProvider"
      }
    ],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.sys.dao.i18n.SysI18nMessageLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "addDefaultSequence",
        "parameterTypes": []
      },
      {
        "name": "afterPropertiesSet",
        "parameterTypes": []
      },
      {
        "name": "clearCache",
        "parameterTypes": []
      },
      {
        "name": "findSeqItem",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "generateLong",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "generateString",
        "parameterTypes": [
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "lazyInit",
        "parameterTypes": []
      },
      {
        "name": "loadCacheItemFromDb",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeCache",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "runLocal",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "setDefaultSeqInitNextValue",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setOrmTemplate",
        "parameterTypes": [
          "io.nop.orm.IOrmTemplate"
        ]
      },
      {
        "name": "setSnowflakeWorkerId",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setTransactionTemplate",
        "parameterTypes": [
          "io.nop.dao.txn.ITransactionTemplate"
        ]
      },
      {
        "name": "syncFromDb",
        "parameterTypes": [
          "io.nop.sys.dao.seq.SysSequenceGenerator$SeqItem"
        ]
      }
    ],
    "name": "io.nop.sys.dao.seq.SysSequenceGenerator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysClusterLeaderBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysCodeRuleBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysDictBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysDictOptionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysExtFieldBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysI18nBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysLockBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysMakerCheckerRecordBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysNoticeTemplateBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysSequenceBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getVar",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setVar",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.sys.service.entity.NopSysUserVariableBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.sys.service.entity.NopSysVariableBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getRateLimiter",
        "parameterTypes": [
          "io.nop.task.ITaskRuntime",
          "java.lang.String",
          "double",
          "boolean"
        ]
      },
      {
        "name": "getScheduledExecutor",
        "parameterTypes": []
      },
      {
        "name": "getTask",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "getTaskFlowModel",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "getTaskRuntime",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getTaskStepLib",
        "parameterTypes": [
          "java.lang.String",
          "long"
        ]
      },
      {
        "name": "loadTask",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "newTaskFlowBuilder",
        "parameterTypes": []
      },
      {
        "name": "newTaskRuntime",
        "parameterTypes": [
          "io.nop.task.ITask",
          "boolean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "newTaskStepLibBuilder",
        "parameterTypes": []
      },
      {
        "name": "prepareTaskRuntime",
        "parameterTypes": [
          "io.nop.task.impl.TaskRuntimeImpl",
          "io.nop.task.ITask"
        ]
      },
      {
        "name": "setNonPersistStateStore",
        "parameterTypes": [
          "io.nop.task.ITaskStateStore"
        ]
      },
      {
        "name": "setScheduledExecutor",
        "parameterTypes": [
          "io.nop.commons.concurrent.executor.IScheduledExecutor"
        ]
      },
      {
        "name": "setTaskStateStore",
        "parameterTypes": [
          "io.nop.task.ITaskStateStore"
        ]
      }
    ],
    "name": "io.nop.task.impl.TaskFlowManagerImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.task.model.TaskExecutableModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputSchemaNode",
        "parameterTypes": []
      },
      {
        "name": "getTask",
        "parameterTypes": [
          "io.nop.task.builder.ITaskFlowBuilder"
        ]
      },
      {
        "name": "getTaskStepLib",
        "parameterTypes": [
          "io.nop.task.builder.ITaskStepLibBuilder"
        ]
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setTask",
        "parameterTypes": [
          "io.nop.task.ITask"
        ]
      },
      {
        "name": "setTaskStepLib",
        "parameterTypes": [
          "io.nop.task.ITaskStepLib"
        ]
      }
    ],
    "name": "io.nop.task.model.TaskFlowModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getSchemaNode",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.task.model.TaskInputModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getSchemaNode",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.task.model.TaskOutputModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addWaitErrorStep",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addWaitStep",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFullStepType",
        "parameterTypes": []
      },
      {
        "name": "getGraphqlOperationType",
        "parameterTypes": []
      },
      {
        "name": "getInputSchemaNode",
        "parameterTypes": []
      },
      {
        "name": "getOutputsSchemaNode",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "normalize",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.task.model.TaskStepModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.task.model.TaskStepsModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getType",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.task.model.XplTaskStepModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDecorator",
        "parameterTypes": [
          "io.nop.task.model.TaskDecoratorModel"
        ]
      },
      {
        "name": "addInput",
        "parameterTypes": [
          "io.nop.task.model.TaskInputModel"
        ]
      },
      {
        "name": "addOutput",
        "parameterTypes": [
          "io.nop.task.model.TaskOutputModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.TaskExecutableModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCatch",
        "parameterTypes": []
      },
      {
        "name": "getCatchInternalException",
        "parameterTypes": []
      },
      {
        "name": "getDecorator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDecorators",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExecutor",
        "parameterTypes": []
      },
      {
        "name": "getFinally",
        "parameterTypes": []
      },
      {
        "name": "getFlags",
        "parameterTypes": []
      },
      {
        "name": "getInput",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getInputs",
        "parameterTypes": []
      },
      {
        "name": "getOnEnter",
        "parameterTypes": []
      },
      {
        "name": "getOnReload",
        "parameterTypes": []
      },
      {
        "name": "getOutput",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getOutputs",
        "parameterTypes": []
      },
      {
        "name": "getPersisVars",
        "parameterTypes": []
      },
      {
        "name": "getRateLimit",
        "parameterTypes": []
      },
      {
        "name": "getRetry",
        "parameterTypes": []
      },
      {
        "name": "getReturnType",
        "parameterTypes": []
      },
      {
        "name": "getThrottle",
        "parameterTypes": []
      },
      {
        "name": "getTimeout",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "getWhen",
        "parameterTypes": []
      },
      {
        "name": "hasDecorator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDecorators",
        "parameterTypes": []
      },
      {
        "name": "hasInput",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasInputs",
        "parameterTypes": []
      },
      {
        "name": "hasOutput",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasOutputs",
        "parameterTypes": []
      },
      {
        "name": "keySet_decorators",
        "parameterTypes": []
      },
      {
        "name": "keySet_inputs",
        "parameterTypes": []
      },
      {
        "name": "keySet_outputs",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCatch",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setCatchInternalException",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDecorators",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExecutor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFinally",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setFlags",
        "parameterTypes": [
          "io.nop.task.model.TaskFlagsModel"
        ]
      },
      {
        "name": "setInputs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOnEnter",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setOnReload",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setOutputs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPersisVars",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setRateLimit",
        "parameterTypes": [
          "io.nop.task.model.TaskRateLimitModel"
        ]
      },
      {
        "name": "setRetry",
        "parameterTypes": [
          "io.nop.task.model.TaskRetryModel"
        ]
      },
      {
        "name": "setReturnType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setThrottle",
        "parameterTypes": [
          "io.nop.task.model.TaskThrottleModel"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      },
      {
        "name": "setWhen",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalPredicate"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._TaskExecutableModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.TaskFlowModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAuth",
        "parameterTypes": []
      },
      {
        "name": "getEnterSteps",
        "parameterTypes": []
      },
      {
        "name": "getExitSteps",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "isDefaultSaveState",
        "parameterTypes": []
      },
      {
        "name": "isGraphMode",
        "parameterTypes": []
      },
      {
        "name": "isRestartable",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAuth",
        "parameterTypes": [
          "io.nop.api.core.auth.ActionAuthMeta"
        ]
      },
      {
        "name": "setDefaultSaveState",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnterSteps",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setExitSteps",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setGraphMode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestartable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._TaskFlowModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.TaskInputModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRole",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isFromTaskScope",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isPersist",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFromTaskScope",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPersist",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRole",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._TaskInputModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.TaskOutputModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExportAs",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRoles",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isPersist",
        "parameterTypes": []
      },
      {
        "name": "isToTaskScope",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExportAs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPersist",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setToTaskScope",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._TaskOutputModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.TaskStepModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getErrorName",
        "parameterTypes": []
      },
      {
        "name": "getExtType",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getNext",
        "parameterTypes": []
      },
      {
        "name": "getNextOnError",
        "parameterTypes": []
      },
      {
        "name": "getSaveState",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getWaitErrorSteps",
        "parameterTypes": []
      },
      {
        "name": "getWaitSteps",
        "parameterTypes": []
      },
      {
        "name": "isAllowStartIfComplete",
        "parameterTypes": []
      },
      {
        "name": "isConcurrent",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreResult",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isRecordMetrics",
        "parameterTypes": []
      },
      {
        "name": "isRunOnContext",
        "parameterTypes": []
      },
      {
        "name": "isSync",
        "parameterTypes": []
      },
      {
        "name": "isUseParentScope",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAllowStartIfComplete",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConcurrent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setErrorName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExtType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoreResult",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNext",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNextOnError",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRecordMetrics",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRunOnContext",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSaveState",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSync",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setUseParentScope",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWaitErrorSteps",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setWaitSteps",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._TaskStepModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addStep",
        "parameterTypes": [
          "io.nop.task.model.TaskStepModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.TaskStepsModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getStep",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSteps",
        "parameterTypes": []
      },
      {
        "name": "hasStep",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSteps",
        "parameterTypes": []
      },
      {
        "name": "keySet_steps",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSteps",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._TaskStepsModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.task.model.XplTaskStepModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      }
    ],
    "name": "io.nop.task.model._gen._XplTaskStepModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildBizActionFromTaskModel",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.task.model.TaskFlowModel"
        ]
      },
      {
        "name": "getInputNames",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "getOutputNames",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      }
    ],
    "name": "io.nop.task.utils.TaskGenHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "editEnabled"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "pageProvider"
      }
    ],
    "methods": [
      {
        "name": "getPage",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getPageSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "rollbackPageSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "savePageSource",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.web.biz.PageProviderBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "editEnabled"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "jsProvider"
      }
    ],
    "methods": [
      {
        "name": "getJs",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getJsSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "rollbackJsSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "saveJsSource",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.web.biz.SystemJsProviderBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDynamicCss",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadText",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.web.page.DynamicCssLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadDynamicJs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSystemJsTransformer",
        "parameterTypes": [
          "io.nop.commons.functional.IAsyncFunctionService"
        ]
      },
      {
        "name": "systemJsEmptyFile",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.web.page.DynamicJsLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "cssLoader"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "jsLoader"
      }
    ],
    "methods": [
      {
        "name": "getJs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getJsSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadAllXcss",
        "parameterTypes": []
      },
      {
        "name": "loadAllXjs",
        "parameterTypes": []
      },
      {
        "name": "saveJsSource",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.web.page.DynamicWebFileProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "pageProvider"
      }
    ],
    "methods": [
      {
        "name": "setPageProvider",
        "parameterTypes": [
          "io.nop.web.page.PageProvider"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.web.page.PageModelValidator",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cleanupJson",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getObjMeta",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "getPage",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getPageDelta",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "getPageSource",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getValueResolverCompilerRegistry",
        "parameterTypes": []
      },
      {
        "name": "hasXuiAuth",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "parseViewModel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "registerXPage",
        "parameterTypes": []
      },
      {
        "name": "registerXView",
        "parameterTypes": []
      },
      {
        "name": "savePageSource",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "setRolePermissionMapping",
        "parameterTypes": [
          "io.nop.api.core.auth.IRolePermissionMapping"
        ]
      },
      {
        "name": "transformPermissions",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "validateAllPages",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.web.page.PageProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "rollback",
        "parameterTypes": [
          "java.lang.String",
          "java.security.Timestamp"
        ]
      },
      {
        "name": "setResourceHistory",
        "parameterTypes": [
          "io.nop.core.resource.IResourceHistory"
        ]
      },
      {
        "name": "setResourceLockManager",
        "parameterTypes": [
          "io.nop.commons.concurrent.lock.IResourceLockManager"
        ]
      },
      {
        "name": "withHistorySupport",
        "parameterTypes": [
          "io.nop.core.resource.IResource",
          "java.util.function.Function"
        ]
      }
    ],
    "name": "io.nop.web.page.ResourceWithHistoryProvider",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addClassName",
        "parameterTypes": [
          "java.util.Map",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "checkJsFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkPageFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "checkXjsFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "escapeGraphQL",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "fixPage",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "internalLoadPage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "removeGeneratedId",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeNullEntry",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "unfixPage",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.web.page.WebPageHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "conditionOpToFilterOp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "conditionToFilter",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "filterOpToConditionOp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "filterToCondition",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.web.page.condition.ConditionExprHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addPrefix",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getPropType",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "propToField",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.xlang.xmeta.IObjPropMeta"
        ]
      },
      {
        "name": "propToGroup",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.xlang.xmeta.ISchema",
          "java.util.Map"
        ]
      },
      {
        "name": "schemaToFields",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.xlang.xmeta.ISchema"
        ]
      }
    ],
    "name": "io.nop.web.page.condition.ConditionSchemaHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "vueTemplateToReact",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      }
    ],
    "name": "io.nop.web.page.vue.VueTemplateHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.api.beans.WfActionRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.api.beans.WfCommandRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.api.beans.WfStartRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.api.beans.WfStartResponseBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.api.beans.WfSubFlowEndRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getActionName",
        "parameterTypes": []
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getStepId",
        "parameterTypes": []
      },
      {
        "name": "getWfId",
        "parameterTypes": []
      },
      {
        "name": "getWfName",
        "parameterTypes": []
      },
      {
        "name": "getWfVersion",
        "parameterTypes": []
      },
      {
        "name": "setActionName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setStepId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "name": "io.nop.wf.api.beans._gen._WfActionRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getWfId",
        "parameterTypes": []
      },
      {
        "name": "getWfName",
        "parameterTypes": []
      },
      {
        "name": "getWfVersion",
        "parameterTypes": []
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "name": "io.nop.wf.api.beans._gen._WfCommandRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getParentWfId",
        "parameterTypes": []
      },
      {
        "name": "getParentWfName",
        "parameterTypes": []
      },
      {
        "name": "getParentWfStepId",
        "parameterTypes": []
      },
      {
        "name": "getParentWfVersion",
        "parameterTypes": []
      },
      {
        "name": "getWfName",
        "parameterTypes": []
      },
      {
        "name": "getWfParams",
        "parameterTypes": []
      },
      {
        "name": "getWfVersion",
        "parameterTypes": []
      },
      {
        "name": "setParentWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParentWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParentWfStepId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParentWfVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfParams",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setWfVersion",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "io.nop.wf.api.beans._gen._WfStartRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getManagerDeptId",
        "parameterTypes": []
      },
      {
        "name": "getManagerId",
        "parameterTypes": []
      },
      {
        "name": "getManagerName",
        "parameterTypes": []
      },
      {
        "name": "getManagerType",
        "parameterTypes": []
      },
      {
        "name": "getWfId",
        "parameterTypes": []
      },
      {
        "name": "getWfName",
        "parameterTypes": []
      },
      {
        "name": "getWfVersion",
        "parameterTypes": []
      },
      {
        "name": "setManagerDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setManagerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setManagerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setManagerType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfVersion",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "io.nop.wf.api.beans._gen._WfStartResponseBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getParentWfId",
        "parameterTypes": []
      },
      {
        "name": "getParentWfName",
        "parameterTypes": []
      },
      {
        "name": "getParentWfStepId",
        "parameterTypes": []
      },
      {
        "name": "getParentWfVersion",
        "parameterTypes": []
      },
      {
        "name": "getResults",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getWfId",
        "parameterTypes": []
      },
      {
        "name": "getWfName",
        "parameterTypes": []
      },
      {
        "name": "getWfVersion",
        "parameterTypes": []
      },
      {
        "name": "setParentWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParentWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParentWfStepId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParentWfVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setResults",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "name": "io.nop.wf.api.beans._gen._WfSubFlowEndRequestBean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "execute",
        "parameterTypes": [
          "io.nop.wf.api.WfReference",
          "io.nop.core.context.IServiceContext",
          "java.util.function.Function"
        ]
      },
      {
        "name": "setWorkflowManager",
        "parameterTypes": [
          "io.nop.wf.core.IWorkflowManager"
        ]
      }
    ],
    "name": "io.nop.wf.core.engine.DefaultWorkflowExecutor",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "canBeDelegatedBy",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.lang.String"
        ]
      },
      {
        "name": "getActorCandidates",
        "parameterTypes": [
          "io.nop.wf.core.model.WfAssignmentModel",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "getActors",
        "parameterTypes": [
          "io.nop.wf.core.model.WfAssignmentModel",
          "java.lang.String",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "getAssignmentActors",
        "parameterTypes": [
          "io.nop.wf.core.model.WfAssignmentModel",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "getDeptManager",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor",
          "int"
        ]
      },
      {
        "name": "getManager",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor",
          "int"
        ]
      },
      {
        "name": "getOwner",
        "parameterTypes": [
          "io.nop.wf.core.model.WfAssignmentModel",
          "io.nop.wf.api.actor.IWfActor",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "requireUser",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.wf.core.engine.IWfRuntime"
        ]
      },
      {
        "name": "resolveActor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveDynamicActor",
        "parameterTypes": [
          "io.nop.wf.api.actor.WfActorAndOwner",
          "io.nop.wf.core.engine.IWfRuntime"
        ]
      },
      {
        "name": "resolveUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUserDelegateService",
        "parameterTypes": [
          "io.nop.api.core.auth.IUserDelegateService"
        ]
      },
      {
        "name": "setWfActorResolver",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActorResolver"
        ]
      }
    ],
    "name": "io.nop.wf.core.engine.WfActorAssignSupport",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "_killStep",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "allowCallByUser",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "changeActor",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "io.nop.wf.api.actor.IWfActor",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "changeBizEntityState",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.lang.String"
        ]
      },
      {
        "name": "changeOwner",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "changeStepAppState",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.lang.String"
        ]
      },
      {
        "name": "changeWfAppState",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.lang.String"
        ]
      },
      {
        "name": "checkEnd",
        "parameterTypes": [
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "checkManageAuth",
        "parameterTypes": [
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "checkWaitingStep",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "checkWaitingSteps",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "doEndWorkflow",
        "parameterTypes": [
          "int",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "endSubFlow",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "int",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "exitStep",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "int",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getAllowedActions",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getJoinWaitSteps",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "io.nop.wf.core.engine.IWfRuntime"
        ]
      },
      {
        "name": "getParentStepRef",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor"
        ]
      },
      {
        "name": "getTransitionTargetsForAction",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "getVars",
        "parameterTypes": [
          "java.util.List",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "invokeAction",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.lang.String",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "isAllowStart",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "kill",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "killStep",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "killSteps",
        "parameterTypes": [
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "logError",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "newStepForActor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Double",
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "io.nop.wf.core.model.WfStepModel",
          "java.lang.String",
          "io.nop.wf.core.engine.WfActorWithWeight",
          "io.nop.wf.api.actor.IWfActor",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "newSteps",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "io.nop.wf.core.model.WfStepModel",
          "java.lang.String",
          "java.util.List",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "newWfRuntime",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "newWfRuntime",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "notifySubFlowEnd",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "int",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "resume",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "runAutoTransitions",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "runSource",
        "parameterTypes": [
          "io.nop.wf.core.model.WfStepModel",
          "io.nop.wf.core.engine.IWfRuntime"
        ]
      },
      {
        "name": "save",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setDefaultTitle",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "start",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "suspend",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "transferToActor",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "io.nop.wf.api.actor.WfActorAndOwner",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "transitTo",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.lang.String",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "transitionTo",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.lang.String",
          "java.util.Set",
          "io.nop.wf.core.model.WfTransitionToModel",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "transitionToStep",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.lang.String",
          "java.lang.String",
          "io.nop.wf.core.model.WfTransitionToModel",
          "io.nop.wf.core.engine.WfRuntime"
        ]
      },
      {
        "name": "triggerStepEvent",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "triggerTransition",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "triggerWaiting",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowStepImplementor",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "turnSignalOff",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "turnSignalOn",
        "parameterTypes": [
          "io.nop.wf.core.impl.IWorkflowImplementor",
          "java.util.Set",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.wf.core.engine.WorkflowEngineImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getWorkflow",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getWorkflowModel",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "newWorkflow",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "notifySubFlowEnd",
        "parameterTypes": [
          "io.nop.wf.api.WfReference",
          "int",
          "io.nop.wf.api.WfStepReference",
          "java.util.Map",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "parseWorkflowModel",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "parseWorkflowNode",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "removeModelCache",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "setWorkflowCoordinator",
        "parameterTypes": [
          "io.nop.wf.core.IWorkflowCoordinator"
        ]
      },
      {
        "name": "setWorkflowEngine",
        "parameterTypes": [
          "io.nop.wf.core.engine.IWorkflowEngine"
        ]
      },
      {
        "name": "setWorkflowStore",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStore"
        ]
      }
    ],
    "name": "io.nop.wf.core.impl.WorkflowManagerImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "flow"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "join"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "step"
      }
    ],
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.wf.core.model.WfStepType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "invokeActionAsync",
        "parameterTypes": [
          "io.nop.wf.api.beans.WfActionRequestBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "killWorkflowAsync",
        "parameterTypes": [
          "io.nop.wf.api.beans.WfCommandRequestBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "notifySubFlowEndAsync",
        "parameterTypes": [
          "io.nop.wf.api.beans.WfSubFlowEndRequestBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "resumeWorkflowAsync",
        "parameterTypes": [
          "io.nop.wf.api.beans.WfCommandRequestBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "setWorkflowExecutor",
        "parameterTypes": [
          "io.nop.wf.core.engine.IWorkflowExecutor"
        ]
      },
      {
        "name": "startWorkflowAsync",
        "parameterTypes": [
          "io.nop.wf.api.beans.WfStartRequestBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "suspendWorkflowAsync",
        "parameterTypes": [
          "io.nop.wf.api.beans.WfCommandRequestBean",
          "io.nop.api.core.beans.FieldSelectionBean",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "io.nop.wf.core.service.impl.WorkflowServiceImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addSignals",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.util.Set"
        ]
      },
      {
        "name": "bindBizEntityFlowId",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String"
        ]
      },
      {
        "name": "getJoinWaitStepRecords",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.util.function.Function",
          "java.util.Set"
        ]
      },
      {
        "name": "getLatestStepRecordByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String"
        ]
      },
      {
        "name": "getNextJoinStepRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.lang.String",
          "java.lang.String",
          "io.nop.wf.api.actor.IWfActor"
        ]
      },
      {
        "name": "getNextStepRecordByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.lang.String"
        ]
      },
      {
        "name": "getNextStepRecordByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.lang.String",
          "io.nop.wf.api.actor.IWfActor"
        ]
      },
      {
        "name": "getNextStepRecordsByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.util.Collection"
        ]
      },
      {
        "name": "getOnSignals",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "getPrevStepRecordByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.lang.String"
        ]
      },
      {
        "name": "getPrevStepRecordsByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.util.Collection"
        ]
      },
      {
        "name": "getStepRecords",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "boolean",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "getStepRecordsByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getSteps",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "getWfRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord"
        ]
      },
      {
        "name": "isAllSignalOn",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.util.Set"
        ]
      },
      {
        "name": "isAllStepsHistory",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "isSignalOn",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String"
        ]
      },
      {
        "name": "removeSignals",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.util.Set"
        ]
      },
      {
        "name": "updateBizEntityState",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.wf.core.store.AbstractWorkflowStore",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addNextSpecialStep",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addNextStepRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.lang.String",
          "io.nop.wf.core.store.IWorkflowStepRecord"
        ]
      },
      {
        "name": "addSignals",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.util.Set"
        ]
      },
      {
        "name": "bindBizEntityFlowId",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String"
        ]
      },
      {
        "name": "getGlobalVars",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "getJoinWaitStepRecords",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.util.function.Function",
          "java.util.Set"
        ]
      },
      {
        "name": "getLatestStepRecordByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String"
        ]
      },
      {
        "name": "getNextJoinStepRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.lang.String",
          "java.lang.String",
          "io.nop.wf.api.actor.IWfActor"
        ]
      },
      {
        "name": "getNextStepRecordByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.lang.String"
        ]
      },
      {
        "name": "getNextStepRecordByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.lang.String",
          "io.nop.wf.api.actor.IWfActor"
        ]
      },
      {
        "name": "getNextStepRecords",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord"
        ]
      },
      {
        "name": "getNextStepRecordsByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.util.Collection"
        ]
      },
      {
        "name": "getOnSignals",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "getOutputVars",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "getPrevStepRecordByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.lang.String"
        ]
      },
      {
        "name": "getPrevStepRecords",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord"
        ]
      },
      {
        "name": "getPrevStepRecordsByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.util.Collection"
        ]
      },
      {
        "name": "getStepRecordById",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String"
        ]
      },
      {
        "name": "getStepRecords",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "boolean",
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "getStepRecordsByName",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String",
          "boolean"
        ]
      },
      {
        "name": "getWfRecord",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "isAllSignalOn",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.util.Set"
        ]
      },
      {
        "name": "isAllStepsHistory",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "isSignalOn",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String"
        ]
      },
      {
        "name": "loadBizEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "logError",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "logError",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "logMsg",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "newActionRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "io.nop.wf.core.model.IWorkflowActionModel"
        ]
      },
      {
        "name": "newStepRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "io.nop.wf.core.model.IWorkflowStepModel"
        ]
      },
      {
        "name": "newWfRecord",
        "parameterTypes": [
          "io.nop.wf.core.model.IWorkflowModel"
        ]
      },
      {
        "name": "reloadWfRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "removeSignals",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.util.Set"
        ]
      },
      {
        "name": "removeWfRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "saveActionRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowActionRecord"
        ]
      },
      {
        "name": "saveStepRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord"
        ]
      },
      {
        "name": "saveWfRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "updateBizEntityState",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.wf.core.store.IWorkflowStore",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "setCaller",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor"
        ]
      }
    ],
    "name": "io.nop.wf.dao.entity.NopWfAction",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.dao.entity.NopWfDefinition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.dao.entity.NopWfDefinitionAuth",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addTags",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "getCreaterId",
        "parameterTypes": []
      },
      {
        "name": "getOnSignals",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "markEnd",
        "parameterTypes": []
      },
      {
        "name": "removeTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastOperator",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor"
        ]
      },
      {
        "name": "setManager",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor"
        ]
      },
      {
        "name": "setOnSignals",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setStarter",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor"
        ]
      },
      {
        "name": "transitToStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "willEnd",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.wf.dao.entity.NopWfInstance",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.dao.entity.NopWfLog",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.wf.dao.entity.NopWfOutput",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.dao.entity.NopWfStatusHistory",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addNextStepLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "addTags",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "removeTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setActor",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor"
        ]
      },
      {
        "name": "setAssigner",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor"
        ]
      },
      {
        "name": "setCaller",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor"
        ]
      },
      {
        "name": "setOwner",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor"
        ]
      },
      {
        "name": "setSubWfRef",
        "parameterTypes": [
          "io.nop.wf.api.WfReference"
        ]
      },
      {
        "name": "transitToStatus",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.wf.dao.entity.NopWfStepInstance",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.wf.dao.entity.NopWfStepInstanceLink",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "newPk",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.wf.dao.entity.NopWfVar",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.dao.entity.NopWfWork",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_actionName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_callerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_callerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_errCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_errMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_execTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_opinion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_actionName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_callerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_callerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_errCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_errMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_execTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_opinion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfInstance"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfStepInstance"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getActionName",
        "parameterTypes": []
      },
      {
        "name": "getCallerId",
        "parameterTypes": []
      },
      {
        "name": "getCallerName",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getErrCode",
        "parameterTypes": []
      },
      {
        "name": "getErrMsg",
        "parameterTypes": []
      },
      {
        "name": "getExecTime",
        "parameterTypes": []
      },
      {
        "name": "getOpinion",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getStepId",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWfId",
        "parameterTypes": []
      },
      {
        "name": "getWfInstance",
        "parameterTypes": []
      },
      {
        "name": "getWfStepInstance",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setActionName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCallerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCallerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExecTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setOpinion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStepId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfInstance",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfInstance"
        ]
      },
      {
        "name": "setWfStepInstance",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfStepInstance"
        ]
      }
    ],
    "name": "io.nop.wf.dao.entity._gen._NopWfAction",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_modelText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfDefId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_definitionAuths"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_description"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_modelText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfDefId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfVersion"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDefinitionAuths",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getModelText",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWfDefId",
        "parameterTypes": []
      },
      {
        "name": "getWfName",
        "parameterTypes": []
      },
      {
        "name": "getWfVersion",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModelText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWfDefId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "name": "io.nop.wf.dao.entity._gen._NopWfDefinition",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_actorDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_actorId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_actorName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_actorType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_allowEdit"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_allowManage"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_allowStart"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfDefId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_actorDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_actorId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_actorName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_actorType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_allowEdit"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_allowManage"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_allowStart"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfDefId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfDefinition"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getActorDeptId",
        "parameterTypes": []
      },
      {
        "name": "getActorId",
        "parameterTypes": []
      },
      {
        "name": "getActorName",
        "parameterTypes": []
      },
      {
        "name": "getActorType",
        "parameterTypes": []
      },
      {
        "name": "getAllowEdit",
        "parameterTypes": []
      },
      {
        "name": "getAllowManage",
        "parameterTypes": []
      },
      {
        "name": "getAllowStart",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWfDefId",
        "parameterTypes": []
      },
      {
        "name": "getWfDefinition",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setActorDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setActorId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setActorName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setActorType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAllowEdit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAllowManage",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAllowStart",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWfDefId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfDefinition",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfDefinition"
        ]
      }
    ],
    "name": "io.nop.wf.dao.entity._gen._NopWfDefinitionAuth",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_appState"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizKey"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dueTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastOperateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastOperatorDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastOperatorId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastOperatorName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_managerDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_managerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_managerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_managerType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_parentStepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_parentWfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_parentWfName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_parentWfVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_priority"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_signalText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_starterDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_starterId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_starterName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tagText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_title"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfParams"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_workScope"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_appState"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizKey"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_bizObjName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dueTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_endTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_globalVars"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastOperateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastOperatorDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastOperatorId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastOperatorName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_managerDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_managerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_managerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_managerType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_outputs"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parentStepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parentWfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parentWfName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_parentWfVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_priority"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_signalText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_starterDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_starterId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_starterName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_statusHistories"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_steps"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tagText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_title"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfInstance"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfParams"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_workScope"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_works"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAppState",
        "parameterTypes": []
      },
      {
        "name": "getBizKey",
        "parameterTypes": []
      },
      {
        "name": "getBizObjId",
        "parameterTypes": []
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDueTime",
        "parameterTypes": []
      },
      {
        "name": "getEndTime",
        "parameterTypes": []
      },
      {
        "name": "getGlobalVars",
        "parameterTypes": []
      },
      {
        "name": "getLastOperateTime",
        "parameterTypes": []
      },
      {
        "name": "getLastOperatorDeptId",
        "parameterTypes": []
      },
      {
        "name": "getLastOperatorId",
        "parameterTypes": []
      },
      {
        "name": "getLastOperatorName",
        "parameterTypes": []
      },
      {
        "name": "getManagerDeptId",
        "parameterTypes": []
      },
      {
        "name": "getManagerId",
        "parameterTypes": []
      },
      {
        "name": "getManagerName",
        "parameterTypes": []
      },
      {
        "name": "getManagerType",
        "parameterTypes": []
      },
      {
        "name": "getOutputs",
        "parameterTypes": []
      },
      {
        "name": "getParentStepId",
        "parameterTypes": []
      },
      {
        "name": "getParentWfId",
        "parameterTypes": []
      },
      {
        "name": "getParentWfName",
        "parameterTypes": []
      },
      {
        "name": "getParentWfVersion",
        "parameterTypes": []
      },
      {
        "name": "getPriority",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getSignalText",
        "parameterTypes": []
      },
      {
        "name": "getStartTime",
        "parameterTypes": []
      },
      {
        "name": "getStarterDeptId",
        "parameterTypes": []
      },
      {
        "name": "getStarterId",
        "parameterTypes": []
      },
      {
        "name": "getStarterName",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getStatusHistories",
        "parameterTypes": []
      },
      {
        "name": "getSteps",
        "parameterTypes": []
      },
      {
        "name": "getTagText",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWfGroup",
        "parameterTypes": []
      },
      {
        "name": "getWfId",
        "parameterTypes": []
      },
      {
        "name": "getWfInstance",
        "parameterTypes": []
      },
      {
        "name": "getWfName",
        "parameterTypes": []
      },
      {
        "name": "getWfParams",
        "parameterTypes": []
      },
      {
        "name": "getWfVersion",
        "parameterTypes": []
      },
      {
        "name": "getWorkScope",
        "parameterTypes": []
      },
      {
        "name": "getWorks",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAppState",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizObjId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDueTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setEndTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setLastOperateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setLastOperatorDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastOperatorId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastOperatorName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setManagerDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setManagerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setManagerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setManagerType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParentStepId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParentWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParentWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParentWfVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSignalText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStartTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setStarterDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStarterId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStarterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTagText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWfGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfInstance",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfInstance"
        ]
      },
      {
        "name": "setWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfParams",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setWorkScope",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.wf.dao.entity._gen._NopWfInstance",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_actionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_errCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logLevel"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_logMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_actionId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_errCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logLevel"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_logMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfInstance"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfStepInstance"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getActionId",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getErrCode",
        "parameterTypes": []
      },
      {
        "name": "getLogLevel",
        "parameterTypes": []
      },
      {
        "name": "getLogMsg",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getStepId",
        "parameterTypes": []
      },
      {
        "name": "getWfAction",
        "parameterTypes": []
      },
      {
        "name": "getWfId",
        "parameterTypes": []
      },
      {
        "name": "getWfInstance",
        "parameterTypes": []
      },
      {
        "name": "getWfStepInstance",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setActionId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogLevel",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLogMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStepId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfAction",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfAction"
        ]
      },
      {
        "name": "setWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfInstance",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfInstance"
        ]
      },
      {
        "name": "setWfStepInstance",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfStepInstance"
        ]
      }
    ],
    "name": "io.nop.wf.dao.entity._gen._NopWfLog",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dateValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_decimalValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fieldType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_longValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stringValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_timestampValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dateValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_decimalValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fieldType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_longValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stringValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_timestampValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfInstance"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDateValue",
        "parameterTypes": []
      },
      {
        "name": "getDecimalValue",
        "parameterTypes": []
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldType",
        "parameterTypes": []
      },
      {
        "name": "getLongValue",
        "parameterTypes": []
      },
      {
        "name": "getStringValue",
        "parameterTypes": []
      },
      {
        "name": "getTimestampValue",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWfId",
        "parameterTypes": []
      },
      {
        "name": "getWfInstance",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateValue",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDecimalValue",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLongValue",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setStringValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestampValue",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfInstance",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfInstance"
        ]
      }
    ],
    "name": "io.nop.wf.dao.entity._gen._NopWfOutput",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_changeTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fromStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_operatorDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_operatorId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_operatorName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_toAppState"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_toStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_changeTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fromStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_operatorDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_operatorId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_operatorName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_sid"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_toAppState"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_toStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfInstance"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getChangeTime",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getFromStatus",
        "parameterTypes": []
      },
      {
        "name": "getOperatorDeptId",
        "parameterTypes": []
      },
      {
        "name": "getOperatorId",
        "parameterTypes": []
      },
      {
        "name": "getOperatorName",
        "parameterTypes": []
      },
      {
        "name": "getSid",
        "parameterTypes": []
      },
      {
        "name": "getToAppState",
        "parameterTypes": []
      },
      {
        "name": "getToStatus",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWfId",
        "parameterTypes": []
      },
      {
        "name": "getWfInstance",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setChangeTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFromStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOperatorDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOperatorId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOperatorName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setToAppState",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setToStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfInstance",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfInstance"
        ]
      }
    ],
    "name": "io.nop.wf.dao.entity._gen._NopWfStatusHistory",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_actorDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_actorId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_actorModelId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_actorName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_actorType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_appState"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_assignerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_assignerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_callerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_callerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cancellerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_cancellerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dueTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_errCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_errMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_execOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_finishTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fromAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_isRead"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_joinGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_lastAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nextRetryTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nextStepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ownerDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ownerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ownerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_priority"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_readTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remindCount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remindTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_retryCount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stepGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stepName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stepType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_subWfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_subWfName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_subWfResultStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_subWfVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_tagText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_voteWeight"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_actorDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_actorId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_actorModelId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_actorName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_actorType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_appState"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_assignerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_assignerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_callerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_callerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cancellerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_cancellerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_displayName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dueTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_errCode"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_errMsg"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_execOrder"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_finishTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fromAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_isRead"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_joinGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_lastAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nextLinks"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nextRetryTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nextStepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ownerDeptId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ownerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ownerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_prevLinks"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_priority"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_readTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remindCount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remindTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_retryCount"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_startTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stepActions"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stepGroup"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stepName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stepType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_subWfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_subWfInstance"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_subWfName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_subWfResultStatus"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_subWfVersion"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_tagText"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_voteWeight"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfInstance"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getActorDeptId",
        "parameterTypes": []
      },
      {
        "name": "getActorId",
        "parameterTypes": []
      },
      {
        "name": "getActorModelId",
        "parameterTypes": []
      },
      {
        "name": "getActorName",
        "parameterTypes": []
      },
      {
        "name": "getActorType",
        "parameterTypes": []
      },
      {
        "name": "getAppState",
        "parameterTypes": []
      },
      {
        "name": "getAssignerId",
        "parameterTypes": []
      },
      {
        "name": "getAssignerName",
        "parameterTypes": []
      },
      {
        "name": "getCallerId",
        "parameterTypes": []
      },
      {
        "name": "getCallerName",
        "parameterTypes": []
      },
      {
        "name": "getCancellerId",
        "parameterTypes": []
      },
      {
        "name": "getCancellerName",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDueTime",
        "parameterTypes": []
      },
      {
        "name": "getErrCode",
        "parameterTypes": []
      },
      {
        "name": "getErrMsg",
        "parameterTypes": []
      },
      {
        "name": "getExecOrder",
        "parameterTypes": []
      },
      {
        "name": "getFinishTime",
        "parameterTypes": []
      },
      {
        "name": "getFromAction",
        "parameterTypes": []
      },
      {
        "name": "getIsRead",
        "parameterTypes": []
      },
      {
        "name": "getJoinGroup",
        "parameterTypes": []
      },
      {
        "name": "getLastAction",
        "parameterTypes": []
      },
      {
        "name": "getNextLinks",
        "parameterTypes": []
      },
      {
        "name": "getNextRetryTime",
        "parameterTypes": []
      },
      {
        "name": "getNextStepId",
        "parameterTypes": []
      },
      {
        "name": "getOwnerDeptId",
        "parameterTypes": []
      },
      {
        "name": "getOwnerId",
        "parameterTypes": []
      },
      {
        "name": "getOwnerName",
        "parameterTypes": []
      },
      {
        "name": "getPrevLinks",
        "parameterTypes": []
      },
      {
        "name": "getPriority",
        "parameterTypes": []
      },
      {
        "name": "getReadTime",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getRemindCount",
        "parameterTypes": []
      },
      {
        "name": "getRemindTime",
        "parameterTypes": []
      },
      {
        "name": "getRetryCount",
        "parameterTypes": []
      },
      {
        "name": "getStartTime",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getStepActions",
        "parameterTypes": []
      },
      {
        "name": "getStepGroup",
        "parameterTypes": []
      },
      {
        "name": "getStepId",
        "parameterTypes": []
      },
      {
        "name": "getStepName",
        "parameterTypes": []
      },
      {
        "name": "getStepType",
        "parameterTypes": []
      },
      {
        "name": "getSubWfId",
        "parameterTypes": []
      },
      {
        "name": "getSubWfInstance",
        "parameterTypes": []
      },
      {
        "name": "getSubWfName",
        "parameterTypes": []
      },
      {
        "name": "getSubWfResultStatus",
        "parameterTypes": []
      },
      {
        "name": "getSubWfVersion",
        "parameterTypes": []
      },
      {
        "name": "getTagText",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getVoteWeight",
        "parameterTypes": []
      },
      {
        "name": "getWfId",
        "parameterTypes": []
      },
      {
        "name": "getWfInstance",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setActorDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setActorId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setActorModelId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setActorName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setActorType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAppState",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAssignerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAssignerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCallerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCallerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCancellerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCancellerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDueTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setErrCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setErrMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExecOrder",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setFinishTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setFromAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsRead",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setJoinGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLastAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNextRetryTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setNextStepId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwnerDeptId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwnerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwnerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPriority",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setReadTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemindCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemindTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setRetryCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStartTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStepGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStepId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStepName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStepType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSubWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSubWfInstance",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfInstance"
        ]
      },
      {
        "name": "setSubWfName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSubWfResultStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSubWfVersion",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTagText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setVoteWeight",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfInstance",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfInstance"
        ]
      }
    ],
    "name": "io.nop.wf.dao.entity._gen._NopWfStepInstance",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_execAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_nextStepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_execAction"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nextStepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_nextWfStep"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfInstance"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfStep"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getExecAction",
        "parameterTypes": []
      },
      {
        "name": "getNextStepId",
        "parameterTypes": []
      },
      {
        "name": "getNextWfStep",
        "parameterTypes": []
      },
      {
        "name": "getStepId",
        "parameterTypes": []
      },
      {
        "name": "getWfId",
        "parameterTypes": []
      },
      {
        "name": "getWfInstance",
        "parameterTypes": []
      },
      {
        "name": "getWfStep",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExecAction",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNextStepId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNextWfStep",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfStepInstance"
        ]
      },
      {
        "name": "setStepId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfInstance",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfInstance"
        ]
      },
      {
        "name": "setWfStep",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfStepInstance"
        ]
      }
    ],
    "name": "io.nop.wf.dao.entity._gen._NopWfStepInstanceLink",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_dateValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_decimalValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_fieldType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_longValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stringValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_timestampValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_dateValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_decimalValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fieldName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_fieldType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_longValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stringValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_timestampValue"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfInstance"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getDateValue",
        "parameterTypes": []
      },
      {
        "name": "getDecimalValue",
        "parameterTypes": []
      },
      {
        "name": "getFieldName",
        "parameterTypes": []
      },
      {
        "name": "getFieldType",
        "parameterTypes": []
      },
      {
        "name": "getLongValue",
        "parameterTypes": []
      },
      {
        "name": "getStringValue",
        "parameterTypes": []
      },
      {
        "name": "getTimestampValue",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWfId",
        "parameterTypes": []
      },
      {
        "name": "getWfInstance",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateValue",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "setDecimalValue",
        "parameterTypes": [
          "java.math.BigDecimal"
        ]
      },
      {
        "name": "setFieldName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFieldType",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLongValue",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setStringValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimestampValue",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfInstance",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfInstance"
        ]
      }
    ],
    "name": "io.nop.wf.dao.entity._gen._NopWfVar",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_callerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_callerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_finishTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_linkUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ownerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_ownerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_readTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_stepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_title"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_workId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_workType"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_callerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_callerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_createdBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_finishTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_linkUrl"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ownerId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_ownerName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_readTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_remark"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_status"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_stepId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_title"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updatedBy"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_version"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfInstance"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_wfStepInstance"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_workId"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_workType"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getCallerId",
        "parameterTypes": []
      },
      {
        "name": "getCallerName",
        "parameterTypes": []
      },
      {
        "name": "getCreateTime",
        "parameterTypes": []
      },
      {
        "name": "getCreatedBy",
        "parameterTypes": []
      },
      {
        "name": "getFinishTime",
        "parameterTypes": []
      },
      {
        "name": "getLinkUrl",
        "parameterTypes": []
      },
      {
        "name": "getOwnerId",
        "parameterTypes": []
      },
      {
        "name": "getOwnerName",
        "parameterTypes": []
      },
      {
        "name": "getReadTime",
        "parameterTypes": []
      },
      {
        "name": "getRemark",
        "parameterTypes": []
      },
      {
        "name": "getStatus",
        "parameterTypes": []
      },
      {
        "name": "getStepId",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "getUpdatedBy",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getWfId",
        "parameterTypes": []
      },
      {
        "name": "getWfInstance",
        "parameterTypes": []
      },
      {
        "name": "getWfStepInstance",
        "parameterTypes": []
      },
      {
        "name": "getWorkId",
        "parameterTypes": []
      },
      {
        "name": "getWorkType",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setCallerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCallerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCreateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setCreatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFinishTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setLinkUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwnerId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOwnerName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setRemark",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStepId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.sql.Timestamp"
        ]
      },
      {
        "name": "setUpdatedBy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWfId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWfInstance",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfInstance"
        ]
      },
      {
        "name": "setWfStepInstance",
        "parameterTypes": [
          "io.nop.wf.dao.entity.NopWfStepInstance"
        ]
      },
      {
        "name": "setWorkId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWorkType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.wf.dao.entity._gen._NopWfWork",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadWfDefinition",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "requireWfDefinition",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      }
    ],
    "name": "io.nop.wf.dao.store.DaoWorkflowModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "actionDao",
        "parameterTypes": []
      },
      {
        "name": "addNextSpecialStep",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "addNextStepRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "java.lang.String",
          "io.nop.wf.core.store.IWorkflowStepRecord"
        ]
      },
      {
        "name": "getGlobalVars",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "getNextStepRecords",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord"
        ]
      },
      {
        "name": "getOutputVars",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "getPrevStepRecords",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord"
        ]
      },
      {
        "name": "getStepRecordById",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String"
        ]
      },
      {
        "name": "getSteps",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "getWfRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord"
        ]
      },
      {
        "name": "getWfRecord",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Long",
          "java.lang.String"
        ]
      },
      {
        "name": "loadBizEntity",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "logDao",
        "parameterTypes": []
      },
      {
        "name": "logError",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "logError",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Throwable"
        ]
      },
      {
        "name": "logMsg",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "newActionRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord",
          "io.nop.wf.core.model.IWorkflowActionModel"
        ]
      },
      {
        "name": "newStepRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord",
          "io.nop.wf.core.model.IWorkflowStepModel"
        ]
      },
      {
        "name": "newWfRecord",
        "parameterTypes": [
          "io.nop.wf.core.model.IWorkflowModel"
        ]
      },
      {
        "name": "reloadWfRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "removeWfRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "saveActionRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowActionRecord"
        ]
      },
      {
        "name": "saveStepRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowStepRecord"
        ]
      },
      {
        "name": "saveWfRecord",
        "parameterTypes": [
          "io.nop.wf.core.store.IWorkflowRecord"
        ]
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "stepDao",
        "parameterTypes": []
      },
      {
        "name": "wfDao",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.wf.dao.store.DaoWorkflowStore",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getResource",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.resource.IResourceStore"
        ]
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setDaoWorkflowModelLoader",
        "parameterTypes": [
          "io.nop.wf.dao.store.DaoWorkflowModelLoader"
        ]
      }
    ],
    "name": "io.nop.wf.dao.store.WfResourceNamespaceHandler",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildUserActor",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthUser"
        ]
      },
      {
        "name": "buildUserActors",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "deptDao",
        "parameterTypes": []
      },
      {
        "name": "getDeptIdFromActor",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor"
        ]
      },
      {
        "name": "getDeptManager",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor",
          "int"
        ]
      },
      {
        "name": "getDeptUsers",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthDept"
        ]
      },
      {
        "name": "getGroupUsers",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthGroup"
        ]
      },
      {
        "name": "getManager",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor",
          "int"
        ]
      },
      {
        "name": "getRoleUsers",
        "parameterTypes": [
          "io.nop.auth.dao.entity.NopAuthRole"
        ]
      },
      {
        "name": "getUserIdFromActor",
        "parameterTypes": [
          "io.nop.wf.api.actor.IWfActor"
        ]
      },
      {
        "name": "groupDao",
        "parameterTypes": []
      },
      {
        "name": "resolveActor",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveDept",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "resolveGroup",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveRole",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveUser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "roleDao",
        "parameterTypes": []
      },
      {
        "name": "setDaoProvider",
        "parameterTypes": [
          "io.nop.dao.api.IDaoProvider"
        ]
      },
      {
        "name": "userDao",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.wf.service.actor.DaoWfActorResolver",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.service.entity.NopWfActionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.service.entity.NopWfDefinitionAuthBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.service.entity.NopWfDefinitionBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.service.entity.NopWfInstanceBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.service.entity.NopWfLogBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.service.entity.NopWfOutputBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.service.entity.NopWfStatusHistoryBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.service.entity.NopWfStepInstanceBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.service.entity.NopWfStepInstanceLinkBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.service.entity.NopWfVarBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.wf.service.entity.NopWfWorkBizModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doInvoke",
        "parameterTypes": [
          "io.nop.core.lang.eval.EvalRuntime"
        ]
      },
      {
        "name": "generateNode",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "generateSql",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "generateToWriter",
        "parameterTypes": [
          "java.io.Writer",
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "generateXjson",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "passConditions",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      }
    ],
    "name": "io.nop.xlang.api.AbstractEvalAction",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addSource",
        "parameterTypes": [
          "io.nop.xlang.api.ExprEvalAction",
          "java.lang.String"
        ]
      },
      {
        "name": "getCode",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.api.EvalCode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "doInvoke",
        "parameterTypes": [
          "io.nop.core.lang.eval.EvalRuntime"
        ]
      },
      {
        "name": "getExpr",
        "parameterTypes": []
      },
      {
        "name": "getLocation",
        "parameterTypes": []
      },
      {
        "name": "invoke",
        "parameterTypes": [
          "io.nop.core.context.IEvalContext"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toXplModel",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.api.ExprEvalAction",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getReturnTypeInfo",
        "parameterTypes": []
      },
      {
        "name": "replaceIdentifier",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "setReturnTypeInfo",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "toExprString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.ast.Expression",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getASTKind",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.ast.IXLangASTNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getLexicalScope",
        "parameterTypes": []
      },
      {
        "name": "hasLexicalScope",
        "parameterTypes": []
      },
      {
        "name": "isMacroScript",
        "parameterTypes": []
      },
      {
        "name": "isShareScope",
        "parameterTypes": []
      },
      {
        "name": "script",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.util.List"
        ]
      },
      {
        "name": "setLexicalScope",
        "parameterTypes": [
          "io.nop.xlang.scope.LexicalScope"
        ]
      },
      {
        "name": "setMacroScript",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShareScope",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.xlang.ast.Program",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "getASTKind",
        "parameterTypes": []
      },
      {
        "name": "getASTParentKind",
        "parameterTypes": []
      },
      {
        "name": "getASTType",
        "parameterTypes": []
      },
      {
        "name": "getLexicalScope",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.ast.XLangASTNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "json"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "none"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "sql"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "xml"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "xmlAttr"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "xmlValue"
      }
    ],
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.ast.XLangEscapeMode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "html"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "node"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "none"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "sql"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "text"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "textMap"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "xjson"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "xml"
      }
    ],
    "methods": [
      {
        "name": "fromText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "isAllowTextOut",
        "parameterTypes": []
      },
      {
        "name": "isXmlOrHtml",
        "parameterTypes": []
      },
      {
        "name": "requireFromText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.ast.XLangOutputMode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.ast._gen._Expression",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "body"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "sourceType"
      }
    ],
    "methods": [
      {
        "name": "deepClone",
        "parameterTypes": []
      },
      {
        "name": "forEachChild",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getASTKind",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getSourceType",
        "parameterTypes": []
      },
      {
        "name": "isEquivalentTo",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangASTNode"
        ]
      },
      {
        "name": "makeBody",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "processChild",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "removeChild",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangASTNode"
        ]
      },
      {
        "name": "replaceChild",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangASTNode",
          "io.nop.xlang.ast.XLangASTNode"
        ]
      },
      {
        "name": "serializeFields",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSourceType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.ast._gen._Program",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.debugger.initialize.XLangDebuggerInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "parseValidator",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "runValidator",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "runValidator",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "runValidatorModel",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel",
          "java.lang.Object",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "runValidatorModelForValue",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel",
          "java.lang.Object",
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.context.IServiceContext",
          "io.nop.api.core.validate.IValidationErrorCollector"
        ]
      },
      {
        "name": "toEvalAction",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      }
    ],
    "name": "io.nop.xlang.filter.BizValidatorHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "AND",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "IF",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "OR",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "SWITCH",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "assign",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "concat",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "currentDateTime",
        "parameterTypes": []
      },
      {
        "name": "eval",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalAction",
          "java.util.Map"
        ]
      },
      {
        "name": "eval_node",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalFunction"
        ]
      },
      {
        "name": "functional",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "io.nop.core.lang.eval.IEvalFunction"
        ]
      },
      {
        "name": "g_current_locale",
        "parameterTypes": []
      },
      {
        "name": "g_default_locale",
        "parameterTypes": []
      },
      {
        "name": "g_make_node",
        "parameterTypes": [
          "java.lang.String",
          "java.util.Map"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "getByPropPath",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.String"
        ]
      },
      {
        "name": "hasClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "inject",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.lang.Object"
        ]
      },
      {
        "name": "jpath",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "location",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "masked",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "newChildScope",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalScope",
          "java.util.Map"
        ]
      },
      {
        "name": "now",
        "parameterTypes": []
      },
      {
        "name": "optional",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "order_by",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "raw",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "selection",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "sql",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "static_eval",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "static_eval2",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.Object"
        ]
      },
      {
        "name": "today",
        "parameterTypes": []
      },
      {
        "name": "tpl",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "track",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "xml",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "xpath",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "xpl",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      }
    ],
    "name": "io.nop.xlang.functions.GlobalFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "logDebug",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logError",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logInfo",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logTrace",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      },
      {
        "name": "logWarn",
        "parameterTypes": [
          "io.nop.xlang.api.IXLangCompileScope",
          "io.nop.xlang.ast.CallExpression"
        ]
      }
    ],
    "name": "io.nop.xlang.functions.LogFunctions",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.RegisterModelCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.initialize.XLangCoreInitializer",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "reparse",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "v",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String",
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ],
    "name": "io.nop.xlang.utils.DebugHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getImportExprs",
        "parameterTypes": []
      },
      {
        "name": "getXdslSchema",
        "parameterTypes": []
      },
      {
        "name": "getXdslTransform",
        "parameterTypes": []
      },
      {
        "name": "setImportExprs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setXdslSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslTransform",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xdsl.AbstractDslModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getXdslSchema",
        "parameterTypes": []
      },
      {
        "name": "getXdslTransform",
        "parameterTypes": []
      },
      {
        "name": "setXdslSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslTransform",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xdsl.IXDslModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getItemSchema",
        "parameterTypes": []
      },
      {
        "name": "getKeyAttr",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMaxItems",
        "parameterTypes": []
      },
      {
        "name": "getMinItems",
        "parameterTypes": []
      },
      {
        "name": "getOrderAttr",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IListSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getMapValueSchema",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IMapSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getExtendsType",
        "parameterTypes": []
      },
      {
        "name": "getImplementsTypes",
        "parameterTypes": []
      },
      {
        "name": "getMaxProperties",
        "parameterTypes": []
      },
      {
        "name": "getMinProperties",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getSupportExtends",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getTypeValue",
        "parameterTypes": []
      },
      {
        "name": "getUniqueProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrSchema",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTagSchema",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "isAbstract",
        "parameterTypes": []
      },
      {
        "name": "isInterface",
        "parameterTypes": []
      },
      {
        "name": "isPropInherited",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTypeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.IObjSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "isExplicitDefine",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.ISchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getRefSchema",
        "parameterTypes": []
      },
      {
        "name": "getSchemaKind",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "isRefResolved",
        "parameterTypes": []
      },
      {
        "name": "setRefResolved",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRefSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.ISchemaNode",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMax",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMin",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMultipleOf",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "matchPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.ISimpleSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getOneOf",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeProp",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.IUnionSchema",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadXDefinition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadXMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "parseXMetaFromResource",
        "parameterTypes": [
          "io.nop.core.resource.IResource"
        ]
      },
      {
        "name": "validateNode",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode",
          "io.nop.xlang.xdef.IXDefNode",
          "boolean"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.SchemaLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xmeta.impl.ObjConditionExpr",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xmeta.impl.ObjKeyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getDefinedObjSchemas",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMax",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMin",
        "parameterTypes": []
      },
      {
        "name": "getItemSchema",
        "parameterTypes": []
      },
      {
        "name": "getKeyAttr",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMapValueSchema",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxItems",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getMinItems",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMultipleOf",
        "parameterTypes": []
      },
      {
        "name": "getOneOf",
        "parameterTypes": []
      },
      {
        "name": "getOrderAttr",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getRootSchema",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeProp",
        "parameterTypes": []
      },
      {
        "name": "getXdslSchema",
        "parameterTypes": []
      },
      {
        "name": "getXdslTransform",
        "parameterTypes": []
      },
      {
        "name": "isExplicitDefine",
        "parameterTypes": []
      },
      {
        "name": "matchPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXdslTransform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjMetaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "transform",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjMetaToXDef",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "NULL_AUTH"
      }
    ],
    "methods": [
      {
        "name": "getChildName",
        "parameterTypes": []
      },
      {
        "name": "getDeleteAuth",
        "parameterTypes": []
      },
      {
        "name": "getReadAuth",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getWriteAuth",
        "parameterTypes": []
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjPropMetaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getSchemaKind",
        "parameterTypes": []
      },
      {
        "name": "isPropInherited",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.ObjSchemaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xmeta.impl.ObjTreeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjPropMetaImpl"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAbstract",
        "parameterTypes": []
      },
      {
        "name": "getDict",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMax",
        "parameterTypes": []
      },
      {
        "name": "getExcludeMin",
        "parameterTypes": []
      },
      {
        "name": "getExtendsType",
        "parameterTypes": []
      },
      {
        "name": "getImplementsTypes",
        "parameterTypes": []
      },
      {
        "name": "getInterface",
        "parameterTypes": []
      },
      {
        "name": "getItemSchema",
        "parameterTypes": []
      },
      {
        "name": "getKeyAttr",
        "parameterTypes": []
      },
      {
        "name": "getKeyProp",
        "parameterTypes": []
      },
      {
        "name": "getMapValueSchema",
        "parameterTypes": []
      },
      {
        "name": "getMax",
        "parameterTypes": []
      },
      {
        "name": "getMaxItems",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMaxProperties",
        "parameterTypes": []
      },
      {
        "name": "getMin",
        "parameterTypes": []
      },
      {
        "name": "getMinItems",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMinProperties",
        "parameterTypes": []
      },
      {
        "name": "getMultipleOf",
        "parameterTypes": []
      },
      {
        "name": "getOneOf",
        "parameterTypes": []
      },
      {
        "name": "getOrderAttr",
        "parameterTypes": []
      },
      {
        "name": "getOrderProp",
        "parameterTypes": []
      },
      {
        "name": "getPattern",
        "parameterTypes": []
      },
      {
        "name": "getPrecision",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getScale",
        "parameterTypes": []
      },
      {
        "name": "getSchemaKind",
        "parameterTypes": []
      },
      {
        "name": "getSubTypeProp",
        "parameterTypes": []
      },
      {
        "name": "getSupportExtends",
        "parameterTypes": []
      },
      {
        "name": "getTypeValue",
        "parameterTypes": []
      },
      {
        "name": "getUniqueProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrSchema",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTagSchema",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "isExplicitDefine",
        "parameterTypes": []
      },
      {
        "name": "isPropInherited",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "key",
        "parameterTypes": []
      },
      {
        "name": "matchPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "setAbstract",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDict",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExcludeMax",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExcludeMin",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExplicitDefine",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExtendsType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setImplementsTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInterface",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setItemSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setKeyProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMapValueSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setMaxItems",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Double"
        ]
      },
      {
        "name": "setMinItems",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMultipleOf",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setOneOf",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setOrderProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrecision",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScale",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSubTypeProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSupportExtends",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTypeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUniqueProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownAttrSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setUnknownTagSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.SchemaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getRefSchema",
        "parameterTypes": []
      },
      {
        "name": "setRefSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "toNode",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.impl.SchemaNodeImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjConditionExpr"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getWhen",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setWhen",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjConditionExpr",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjKeyModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjKeyModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addDefine",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "addField",
        "parameterTypes": [
          "io.nop.api.core.beans.query.OrderFieldBean"
        ]
      },
      {
        "name": "addKey",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjKeyModel"
        ]
      },
      {
        "name": "addSelection",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjSelectionMeta"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjMetaImpl"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCheckNs",
        "parameterTypes": []
      },
      {
        "name": "getDefaultExtends",
        "parameterTypes": []
      },
      {
        "name": "getDefine",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getDefines",
        "parameterTypes": []
      },
      {
        "name": "getDisplayProp",
        "parameterTypes": []
      },
      {
        "name": "getEntityName",
        "parameterTypes": []
      },
      {
        "name": "getField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getKeys",
        "parameterTypes": []
      },
      {
        "name": "getModelNameProp",
        "parameterTypes": []
      },
      {
        "name": "getModelVersionProp",
        "parameterTypes": []
      },
      {
        "name": "getOrderBy",
        "parameterTypes": []
      },
      {
        "name": "getParseForHtml",
        "parameterTypes": []
      },
      {
        "name": "getParseKeepComment",
        "parameterTypes": []
      },
      {
        "name": "getParserClass",
        "parameterTypes": []
      },
      {
        "name": "getPrimaryKey",
        "parameterTypes": []
      },
      {
        "name": "getPropNs",
        "parameterTypes": []
      },
      {
        "name": "getSelection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSelections",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getTree",
        "parameterTypes": []
      },
      {
        "name": "getVersion",
        "parameterTypes": []
      },
      {
        "name": "getXmlName",
        "parameterTypes": []
      },
      {
        "name": "hasDefine",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasDefines",
        "parameterTypes": []
      },
      {
        "name": "hasField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasKeys",
        "parameterTypes": []
      },
      {
        "name": "hasOrderBy",
        "parameterTypes": []
      },
      {
        "name": "hasSelection",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSelections",
        "parameterTypes": []
      },
      {
        "name": "keySet_defines",
        "parameterTypes": []
      },
      {
        "name": "keySet_keys",
        "parameterTypes": []
      },
      {
        "name": "keySet_orderBy",
        "parameterTypes": []
      },
      {
        "name": "keySet_selections",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCheckNs",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDefaultExtends",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefines",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDisplayProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEntityName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setKeys",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setModelNameProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setModelVersionProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOrderBy",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setParseForHtml",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setParseKeepComment",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setParserClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrimaryKey",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPropNs",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setSelections",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTree",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjTreeModel"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXmlName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjMetaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addArg",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjPropArgModel"
        ]
      },
      {
        "name": "addAuth",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjPropAuthModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjPropMetaImpl"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAllowCpExpr",
        "parameterTypes": []
      },
      {
        "name": "getAllowFilterOp",
        "parameterTypes": []
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAuths",
        "parameterTypes": []
      },
      {
        "name": "getAutoExpr",
        "parameterTypes": []
      },
      {
        "name": "getChildName",
        "parameterTypes": []
      },
      {
        "name": "getChildXmlName",
        "parameterTypes": []
      },
      {
        "name": "getDefaultOverride",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDepends",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getGetter",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getMapToProp",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPropId",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSetter",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getTransformIn",
        "parameterTypes": []
      },
      {
        "name": "getTransformOut",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getXmlName",
        "parameterTypes": []
      },
      {
        "name": "getXmlPos",
        "parameterTypes": []
      },
      {
        "name": "hasArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasArgs",
        "parameterTypes": []
      },
      {
        "name": "hasAuth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAuths",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isInsertable",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isLazy",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isPublished",
        "parameterTypes": []
      },
      {
        "name": "isQueryable",
        "parameterTypes": []
      },
      {
        "name": "isReadable",
        "parameterTypes": []
      },
      {
        "name": "isSortable",
        "parameterTypes": []
      },
      {
        "name": "isUpdatable",
        "parameterTypes": []
      },
      {
        "name": "isVirtual",
        "parameterTypes": []
      },
      {
        "name": "keySet_args",
        "parameterTypes": []
      },
      {
        "name": "keySet_auths",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAllowCpExpr",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAllowFilterOp",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAuths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAutoExpr",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjConditionExpr"
        ]
      },
      {
        "name": "setChildName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setChildXmlName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultOverride",
        "parameterTypes": [
          "io.nop.xlang.xdef.XDefOverride"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDepends",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGetter",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setInsertable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ObjPropKind"
        ]
      },
      {
        "name": "setLazy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMapToProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPublished",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setQueryable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReadable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setSetter",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setSortable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTransformIn",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setTransformOut",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setUpdatable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVirtual",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setXmlName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXmlPos",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNodeValuePosition"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjPropMetaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addProp",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjPropMetaImpl"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjSchemaImpl"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAbstract",
        "parameterTypes": []
      },
      {
        "name": "getExtendsType",
        "parameterTypes": []
      },
      {
        "name": "getImplementsTypes",
        "parameterTypes": []
      },
      {
        "name": "getInterface",
        "parameterTypes": []
      },
      {
        "name": "getMaxProperties",
        "parameterTypes": []
      },
      {
        "name": "getMinProperties",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getProps",
        "parameterTypes": []
      },
      {
        "name": "getSupportExtends",
        "parameterTypes": []
      },
      {
        "name": "getTypeValue",
        "parameterTypes": []
      },
      {
        "name": "getUniqueProp",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrSchema",
        "parameterTypes": []
      },
      {
        "name": "getUnknownTagSchema",
        "parameterTypes": []
      },
      {
        "name": "hasProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasProps",
        "parameterTypes": []
      },
      {
        "name": "keySet_props",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAbstract",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setExtendsType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setImplementsTypes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setInterface",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinProperties",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setProps",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSupportExtends",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTypeValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUniqueProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownAttrSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      },
      {
        "name": "setUnknownTagSchema",
        "parameterTypes": [
          "io.nop.xlang.xmeta.ISchema"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjSchemaImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.ObjTreeModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getChildrenProp",
        "parameterTypes": []
      },
      {
        "name": "getIsLeafProp",
        "parameterTypes": []
      },
      {
        "name": "getLevelProp",
        "parameterTypes": []
      },
      {
        "name": "getParentProp",
        "parameterTypes": []
      },
      {
        "name": "getRootLevelValue",
        "parameterTypes": []
      },
      {
        "name": "getRootParentValue",
        "parameterTypes": []
      },
      {
        "name": "getSortProp",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setChildrenProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIsLeafProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLevelProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setParentProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRootLevelValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRootParentValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSortProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._ObjTreeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xmeta.impl.SchemaNodeImpl"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getRef",
        "parameterTypes": []
      },
      {
        "name": "getRefResolved",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRefResolved",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.impl._gen._SchemaNodeImpl",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "display",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "int"
        ]
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getMandatory",
        "parameterTypes": []
      },
      {
        "name": "getReadonly",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getValue",
        "parameterTypes": []
      },
      {
        "name": "isHideLabel",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setHideLabel",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setReadonly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.layout.LayoutCellModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "display",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "int"
        ]
      },
      {
        "name": "forEachLayoutCell",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getFirstTable",
        "parameterTypes": []
      },
      {
        "name": "getGroups",
        "parameterTypes": []
      },
      {
        "name": "getLayoutCells",
        "parameterTypes": []
      },
      {
        "name": "isSimpleTable",
        "parameterTypes": []
      },
      {
        "name": "setGroups",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xmeta.layout.LayoutModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "display",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "int"
        ]
      },
      {
        "name": "getCells",
        "parameterTypes": []
      },
      {
        "name": "makeCell",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.layout.LayoutRowModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addRow",
        "parameterTypes": [
          "io.nop.xlang.xmeta.layout.LayoutRowModel"
        ]
      },
      {
        "name": "display",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "boolean",
          "boolean",
          "int"
        ]
      },
      {
        "name": "display",
        "parameterTypes": [
          "java.lang.StringBuilder",
          "int"
        ]
      },
      {
        "name": "forEachLayoutCell",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "getCols",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getLevel",
        "parameterTypes": []
      },
      {
        "name": "getRows",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isAutoId",
        "parameterTypes": []
      },
      {
        "name": "isFoldable",
        "parameterTypes": []
      },
      {
        "name": "isFolded",
        "parameterTypes": []
      },
      {
        "name": "isSimple",
        "parameterTypes": []
      },
      {
        "name": "newRow",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAutoId",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCols",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFoldable",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFolded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLevel",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.layout.LayoutTableModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "baseLoc"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "packageName"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "typeAliases"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": true,
        "name": "typeCache"
      }
    ],
    "methods": [
      {
        "name": "addTypeAlias",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable",
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "buildClassType",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable",
          "java.lang.String"
        ]
      },
      {
        "name": "buildLoc",
        "parameterTypes": [
          "org.codehaus.janino.Java$Locatable"
        ]
      },
      {
        "name": "buildReferenceType",
        "parameterTypes": [
          "org.codehaus.janino.Java$ReferenceType"
        ]
      },
      {
        "name": "buildType",
        "parameterTypes": [
          "org.codehaus.janino.Java$Type"
        ]
      },
      {
        "name": "buildTypes",
        "parameterTypes": [
          "[Lorg.codehaus.janino.Java$Type;"
        ]
      },
      {
        "name": "doParse",
        "parameterTypes": [
          "org.codehaus.janino.Java$CompilationUnit"
        ]
      },
      {
        "name": "doParseText",
        "parameterTypes": [
          "io.nop.api.core.util.SourceLocation",
          "java.lang.String"
        ]
      },
      {
        "name": "getAnnotation",
        "parameterTypes": [
          "org.codehaus.janino.Java$Annotatable",
          "java.lang.String"
        ]
      },
      {
        "name": "parseAnnotationValue",
        "parameterTypes": [
          "org.codehaus.janino.Java$Annotation",
          "java.lang.annotation.Annotation"
        ]
      },
      {
        "name": "resolveAlias",
        "parameterTypes": [
          "org.codehaus.janino.Java$Located",
          "java.lang.String"
        ]
      },
      {
        "name": "setRawTypeResolver",
        "parameterTypes": [
          "io.nop.core.type.IRawTypeResolver"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.xjava.JaninoParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildTypeReference",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "doParse",
        "parameterTypes": [
          "org.codehaus.janino.Java$CompilationUnit"
        ]
      },
      {
        "name": "resolveRef",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.xlang.xmeta.xjava.JavaObjMetaParser",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "node"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "renderer"
      }
    ],
    "methods": [
      {
        "name": "fromText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xlang.xpl.XplSlotType",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.impl.XplTaskLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.loader.HtmlXplModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.loader.NoneXplModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "loadObjectFromPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.loader.XplModelLoader",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "buildFullTagName",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "checkLibPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamespaceFromLibPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNamespaceFromTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTag",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "isDefaultNs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loadLib",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplLibHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getFunctionModel",
        "parameterTypes": []
      },
      {
        "name": "getTagCompiler",
        "parameterTypes": []
      },
      {
        "name": "getTagFuncName",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setTagCompiler",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplLibTagCompiler"
        ]
      },
      {
        "name": "setTagFuncName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTag",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.xlib.XplTagAttribute",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultNamespace",
        "parameterTypes": []
      },
      {
        "name": "getImportExprs",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "setDefaultNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImportExprs",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTagLib",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getSlotFuncName",
        "parameterTypes": []
      },
      {
        "name": "setSlotFuncName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib.XplTagSlot",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xlang.xpl.xlib.XplTagSlotArg",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAttr",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "addSlot",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlot"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTag"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getAttrsVar",
        "parameterTypes": []
      },
      {
        "name": "getBodyType",
        "parameterTypes": []
      },
      {
        "name": "getCallLocationVar",
        "parameterTypes": []
      },
      {
        "name": "getCheckNs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getExample",
        "parameterTypes": []
      },
      {
        "name": "getOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSlot",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getSlots",
        "parameterTypes": []
      },
      {
        "name": "getSource",
        "parameterTypes": []
      },
      {
        "name": "getTagName",
        "parameterTypes": []
      },
      {
        "name": "getTagReturn",
        "parameterTypes": []
      },
      {
        "name": "getTransform",
        "parameterTypes": []
      },
      {
        "name": "getTransformer",
        "parameterTypes": []
      },
      {
        "name": "getUnknownAttrsVar",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttrs",
        "parameterTypes": []
      },
      {
        "name": "hasSlot",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasSlots",
        "parameterTypes": []
      },
      {
        "name": "isConditionTag",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isDump",
        "parameterTypes": []
      },
      {
        "name": "isIgnoreUnknownAttrs",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isMacro",
        "parameterTypes": []
      },
      {
        "name": "keySet_attrs",
        "parameterTypes": []
      },
      {
        "name": "keySet_slots",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAttrsVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBodyType",
        "parameterTypes": [
          "io.nop.xlang.xpl.XplSlotType"
        ]
      },
      {
        "name": "setCallLocationVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCheckNs",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setConditionTag",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDump",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExample",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setIgnoreUnknownAttrs",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMacro",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSlots",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSource",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setTagName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagReturn",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagReturn"
        ]
      },
      {
        "name": "setTransform",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalFunction"
        ]
      },
      {
        "name": "setTransformer",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUnknownAttrsVar",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "io.nop.core.model.validator.ValidatorModel"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTag",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isImplicit",
        "parameterTypes": []
      },
      {
        "name": "isInternal",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isOptional",
        "parameterTypes": []
      },
      {
        "name": "isRuntime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImplicit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInternal",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOptional",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRuntime",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagAttribute",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagLib"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getInterfaces",
        "parameterTypes": []
      },
      {
        "name": "getNamespace",
        "parameterTypes": []
      },
      {
        "name": "getTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getTags",
        "parameterTypes": []
      },
      {
        "name": "hasTag",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasTags",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInterfaces",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTags",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagLib",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addArg",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlotArg"
        ]
      },
      {
        "name": "addAttr",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagAttribute"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlot"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getArgs",
        "parameterTypes": []
      },
      {
        "name": "getAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAttrs",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getOutputMode",
        "parameterTypes": []
      },
      {
        "name": "getSchema",
        "parameterTypes": []
      },
      {
        "name": "getSlotType",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getVarName",
        "parameterTypes": []
      },
      {
        "name": "hasArg",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasArgs",
        "parameterTypes": []
      },
      {
        "name": "hasAttr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAttrs",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isMultiple",
        "parameterTypes": []
      },
      {
        "name": "isRuntime",
        "parameterTypes": []
      },
      {
        "name": "keySet_args",
        "parameterTypes": []
      },
      {
        "name": "keySet_attrs",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setArgs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAttrs",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMultiple",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOutputMode",
        "parameterTypes": [
          "io.nop.xlang.ast.XLangOutputMode"
        ]
      },
      {
        "name": "setRuntime",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSlotType",
        "parameterTypes": [
          "io.nop.xlang.xpl.XplSlotType"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      },
      {
        "name": "setVarName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagSlot",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xlang.xpl.xlib.XplTagSlotArg"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDescription",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "isDeprecated",
        "parameterTypes": []
      },
      {
        "name": "isImplicit",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setDeprecated",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDescription",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImplicit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "io.nop.core.type.IGenericType"
        ]
      }
    ],
    "name": "io.nop.xlang.xpl.xlib._gen._XplTagSlotArg",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xui.graph_designer.GraphDesignerModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xui.graph_designer.GraphDesignerNodeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addComponent",
        "parameterTypes": [
          "io.nop.xui.model.UiSimpleComponentModel"
        ]
      },
      {
        "name": "addEdge",
        "parameterTypes": [
          "io.nop.xui.graph_designer.GraphDesignerEdgeModel"
        ]
      },
      {
        "name": "addForm",
        "parameterTypes": [
          "io.nop.xui.model.UiFormModel"
        ]
      },
      {
        "name": "addImport",
        "parameterTypes": [
          "io.nop.xui.model.UiImportModel"
        ]
      },
      {
        "name": "addNode",
        "parameterTypes": [
          "io.nop.xui.graph_designer.GraphDesignerNodeModel"
        ]
      },
      {
        "name": "addStyleComponent",
        "parameterTypes": [
          "io.nop.xui.model.UiStyleComponentModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xui.graph_designer.GraphDesignerModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCodeGenLib",
        "parameterTypes": []
      },
      {
        "name": "getComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getComponents",
        "parameterTypes": []
      },
      {
        "name": "getControlBar",
        "parameterTypes": []
      },
      {
        "name": "getEdge",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getEdges",
        "parameterTypes": []
      },
      {
        "name": "getEditorType",
        "parameterTypes": []
      },
      {
        "name": "getForm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getForms",
        "parameterTypes": []
      },
      {
        "name": "getFramework",
        "parameterTypes": []
      },
      {
        "name": "getImport",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getImports",
        "parameterTypes": []
      },
      {
        "name": "getNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getNodes",
        "parameterTypes": []
      },
      {
        "name": "getScript",
        "parameterTypes": []
      },
      {
        "name": "getStyle",
        "parameterTypes": []
      },
      {
        "name": "getStyleComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getStyleComponents",
        "parameterTypes": []
      },
      {
        "name": "getZoom",
        "parameterTypes": []
      },
      {
        "name": "hasComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasComponents",
        "parameterTypes": []
      },
      {
        "name": "hasEdge",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasEdges",
        "parameterTypes": []
      },
      {
        "name": "hasForm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasForms",
        "parameterTypes": []
      },
      {
        "name": "hasImport",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasImports",
        "parameterTypes": []
      },
      {
        "name": "hasNode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasNodes",
        "parameterTypes": []
      },
      {
        "name": "hasStyleComponent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasStyleComponents",
        "parameterTypes": []
      },
      {
        "name": "keySet_components",
        "parameterTypes": []
      },
      {
        "name": "keySet_edges",
        "parameterTypes": []
      },
      {
        "name": "keySet_forms",
        "parameterTypes": []
      },
      {
        "name": "keySet_imports",
        "parameterTypes": []
      },
      {
        "name": "keySet_nodes",
        "parameterTypes": []
      },
      {
        "name": "keySet_styleComponents",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCodeGenLib",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setComponents",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setControlBar",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setControlBar",
        "parameterTypes": [
          "io.nop.core.resource.tpl.ITextTemplateOutput"
        ]
      },
      {
        "name": "setEdges",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEditorType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForms",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setFramework",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setImports",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setNodes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setScript",
        "parameterTypes": [
          "io.nop.core.resource.tpl.ITextTemplateOutput"
        ]
      },
      {
        "name": "setScript",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStyle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStyleComponents",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setZoom",
        "parameterTypes": [
          "io.nop.xui.graph_designer.GraphDesignerZoomModel"
        ]
      }
    ],
    "name": "io.nop.xui.graph_designer._gen._GraphDesignerModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addAnchor",
        "parameterTypes": [
          "io.nop.xui.graph_designer.GraphDesignerAnchorModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xui.graph_designer.GraphDesignerNodeModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAbstract",
        "parameterTypes": []
      },
      {
        "name": "getAddable",
        "parameterTypes": []
      },
      {
        "name": "getAllowChildren",
        "parameterTypes": []
      },
      {
        "name": "getAllowParents",
        "parameterTypes": []
      },
      {
        "name": "getAnchor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getAnchors",
        "parameterTypes": []
      },
      {
        "name": "getBase",
        "parameterTypes": []
      },
      {
        "name": "getDeletable",
        "parameterTypes": []
      },
      {
        "name": "getDraggable",
        "parameterTypes": []
      },
      {
        "name": "getFixedAspectRatio",
        "parameterTypes": []
      },
      {
        "name": "getHeight",
        "parameterTypes": []
      },
      {
        "name": "getIcon",
        "parameterTypes": []
      },
      {
        "name": "getKind",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getLayout",
        "parameterTypes": []
      },
      {
        "name": "getMaxHeight",
        "parameterTypes": []
      },
      {
        "name": "getMaxOccurs",
        "parameterTypes": []
      },
      {
        "name": "getMaxWidth",
        "parameterTypes": []
      },
      {
        "name": "getMinHeight",
        "parameterTypes": []
      },
      {
        "name": "getMinOccurs",
        "parameterTypes": []
      },
      {
        "name": "getMinWidth",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "getPropsForm",
        "parameterTypes": []
      },
      {
        "name": "getResizable",
        "parameterTypes": []
      },
      {
        "name": "getShape",
        "parameterTypes": []
      },
      {
        "name": "getStyle",
        "parameterTypes": []
      },
      {
        "name": "getTagSet",
        "parameterTypes": []
      },
      {
        "name": "getTemplate",
        "parameterTypes": []
      },
      {
        "name": "getTextDraggable",
        "parameterTypes": []
      },
      {
        "name": "getTextPosition",
        "parameterTypes": []
      },
      {
        "name": "getWidth",
        "parameterTypes": []
      },
      {
        "name": "hasAnchor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasAnchors",
        "parameterTypes": []
      },
      {
        "name": "keySet_anchors",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAbstract",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAddable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAllowChildren",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setAllowParents",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setAnchors",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeletable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDraggable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFixedAspectRatio",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHeight",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIcon",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKind",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLayout",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxHeight",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxOccurs",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxWidth",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinHeight",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinOccurs",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinWidth",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropsForm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResizable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setShape",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStyle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTagSet",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setTemplate",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setTemplate",
        "parameterTypes": [
          "io.nop.core.resource.tpl.ITextTemplateOutput"
        ]
      },
      {
        "name": "setTextDraggable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTextPosition",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWidth",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ],
    "name": "io.nop.xui.graph_designer._gen._GraphDesignerNodeModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xui.model.UiActionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xui.model.UiApiModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xui.model.UiDialogModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xui.model.UiDisplayMeta",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xui.model.UiFormCellModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "getCellCount",
        "parameterTypes": []
      },
      {
        "name": "getTables",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadObjMeta",
        "parameterTypes": []
      },
      {
        "name": "validate",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      }
    ],
    "name": "io.nop.xui.model.UiFormModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xui.model.UiGridColModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "containsBreakpoint",
        "parameterTypes": []
      },
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "loadObjMeta",
        "parameterTypes": []
      },
      {
        "name": "validate",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      }
    ],
    "name": "io.nop.xui.model.UiGridModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "io.nop.xui.model.UiImportModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "init",
        "parameterTypes": []
      },
      {
        "name": "validate",
        "parameterTypes": []
      }
    ],
    "name": "io.nop.xui.model.UiRefViewModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xui.model.UiActionModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getActionType",
        "parameterTypes": []
      },
      {
        "name": "getActive",
        "parameterTypes": []
      },
      {
        "name": "getActiveClassName",
        "parameterTypes": []
      },
      {
        "name": "getActiveLevel",
        "parameterTypes": []
      },
      {
        "name": "getApi",
        "parameterTypes": []
      },
      {
        "name": "getBatch",
        "parameterTypes": []
      },
      {
        "name": "getBlank",
        "parameterTypes": []
      },
      {
        "name": "getBlock",
        "parameterTypes": []
      },
      {
        "name": "getBody",
        "parameterTypes": []
      },
      {
        "name": "getClose",
        "parameterTypes": []
      },
      {
        "name": "getConfirmText",
        "parameterTypes": []
      },
      {
        "name": "getContent",
        "parameterTypes": []
      },
      {
        "name": "getCopyFormat",
        "parameterTypes": []
      },
      {
        "name": "getCountDown",
        "parameterTypes": []
      },
      {
        "name": "getCountDownTpl",
        "parameterTypes": []
      },
      {
        "name": "getDialog",
        "parameterTypes": []
      },
      {
        "name": "getDisabledOn",
        "parameterTypes": []
      },
      {
        "name": "getDisabledTip",
        "parameterTypes": []
      },
      {
        "name": "getDrawer",
        "parameterTypes": []
      },
      {
        "name": "getFeedback",
        "parameterTypes": []
      },
      {
        "name": "getHotKey",
        "parameterTypes": []
      },
      {
        "name": "getIcon",
        "parameterTypes": []
      },
      {
        "name": "getIconClassName",
        "parameterTypes": []
      },
      {
        "name": "getIconOnly",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getInitApi",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getLevel",
        "parameterTypes": []
      },
      {
        "name": "getLink",
        "parameterTypes": []
      },
      {
        "name": "getMessages",
        "parameterTypes": []
      },
      {
        "name": "getOnClick",
        "parameterTypes": []
      },
      {
        "name": "getOnEvent",
        "parameterTypes": []
      },
      {
        "name": "getRedirect",
        "parameterTypes": []
      },
      {
        "name": "getReload",
        "parameterTypes": []
      },
      {
        "name": "getRequired",
        "parameterTypes": []
      },
      {
        "name": "getRightIcon",
        "parameterTypes": []
      },
      {
        "name": "getRightIconClassName",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "getTarget",
        "parameterTypes": []
      },
      {
        "name": "getTooltip",
        "parameterTypes": []
      },
      {
        "name": "getTooltipPlacement",
        "parameterTypes": []
      },
      {
        "name": "getType",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getVisibleOn",
        "parameterTypes": []
      },
      {
        "name": "hasBody",
        "parameterTypes": []
      },
      {
        "name": "hasMessages",
        "parameterTypes": []
      },
      {
        "name": "hasOnEvent",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setActionType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setActive",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setActiveClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setActiveLevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setApi",
        "parameterTypes": [
          "io.nop.xui.model.UiApiModel"
        ]
      },
      {
        "name": "setBatch",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setBlank",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setBlock",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setBody",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setClose",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setConfirmText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContent",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCopyFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCountDown",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCountDownTpl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDialog",
        "parameterTypes": [
          "io.nop.xui.model.UiDialogModel"
        ]
      },
      {
        "name": "setDisabledOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisabledTip",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDrawer",
        "parameterTypes": [
          "io.nop.xui.model.UiDialogModel"
        ]
      },
      {
        "name": "setFeedback",
        "parameterTypes": [
          "io.nop.xui.model.UiDialogModel"
        ]
      },
      {
        "name": "setHotKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIcon",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIconClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIconOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitApi",
        "parameterTypes": [
          "io.nop.xui.model.UiApiModel"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLevel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLink",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMessages",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setOnClick",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOnEvent",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRedirect",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReload",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequired",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRightIcon",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRightIconClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTooltip",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTooltipPlacement",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVisibleOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiActionModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xui.model.UiApiModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAdaptor",
        "parameterTypes": []
      },
      {
        "name": "getAutoRefresh",
        "parameterTypes": []
      },
      {
        "name": "getCache",
        "parameterTypes": []
      },
      {
        "name": "getConvertKeyToPath",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getDataType",
        "parameterTypes": []
      },
      {
        "name": "getHeaders",
        "parameterTypes": []
      },
      {
        "name": "getMethod",
        "parameterTypes": []
      },
      {
        "name": "getReplaceData",
        "parameterTypes": []
      },
      {
        "name": "getRequestAdaptor",
        "parameterTypes": []
      },
      {
        "name": "getResponseData",
        "parameterTypes": []
      },
      {
        "name": "getResponseType",
        "parameterTypes": []
      },
      {
        "name": "getSendOn",
        "parameterTypes": []
      },
      {
        "name": "getTrackExpression",
        "parameterTypes": []
      },
      {
        "name": "getUrl",
        "parameterTypes": []
      },
      {
        "name": "getWithFormData",
        "parameterTypes": []
      },
      {
        "name": "hasData",
        "parameterTypes": []
      },
      {
        "name": "hasHeaders",
        "parameterTypes": []
      },
      {
        "name": "hasResponseData",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAdaptor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAutoRefresh",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setConvertKeyToPath",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDataType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeaders",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setMethod",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReplaceData",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRequestAdaptor",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResponseData",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setResponseType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSendOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrackExpression",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWithFormData",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiApiModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xui.model.UiDialogModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getActions",
        "parameterTypes": []
      },
      {
        "name": "getCloseOnEsc",
        "parameterTypes": []
      },
      {
        "name": "getCloseOnOutside",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getHeight",
        "parameterTypes": []
      },
      {
        "name": "getNoActions",
        "parameterTypes": []
      },
      {
        "name": "getPage",
        "parameterTypes": []
      },
      {
        "name": "getShowCloseButton",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "getWidth",
        "parameterTypes": []
      },
      {
        "name": "hasActions",
        "parameterTypes": []
      },
      {
        "name": "hasData",
        "parameterTypes": []
      },
      {
        "name": "keySet_actions",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setActions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCloseOnEsc",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCloseOnOutside",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setHeight",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNoActions",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShowCloseButton",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWidth",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiDialogModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xui.model.UiDisplayMeta"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getBizObjName",
        "parameterTypes": []
      },
      {
        "name": "getCharCase",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getClassNameExpr",
        "parameterTypes": []
      },
      {
        "name": "getControl",
        "parameterTypes": []
      },
      {
        "name": "getDefaultValue",
        "parameterTypes": []
      },
      {
        "name": "getDepends",
        "parameterTypes": []
      },
      {
        "name": "getDesc",
        "parameterTypes": []
      },
      {
        "name": "getDisabledOn",
        "parameterTypes": []
      },
      {
        "name": "getDisplayProp",
        "parameterTypes": []
      },
      {
        "name": "getDomain",
        "parameterTypes": []
      },
      {
        "name": "getEditMode",
        "parameterTypes": []
      },
      {
        "name": "getFilterOp",
        "parameterTypes": []
      },
      {
        "name": "getGenControl",
        "parameterTypes": []
      },
      {
        "name": "getHint",
        "parameterTypes": []
      },
      {
        "name": "getHref",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getIdProp",
        "parameterTypes": []
      },
      {
        "name": "getIf",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getMatchRegexp",
        "parameterTypes": []
      },
      {
        "name": "getMaxLength",
        "parameterTypes": []
      },
      {
        "name": "getMaxUploadSize",
        "parameterTypes": []
      },
      {
        "name": "getMinLength",
        "parameterTypes": []
      },
      {
        "name": "getMinRows",
        "parameterTypes": []
      },
      {
        "name": "getPlaceholder",
        "parameterTypes": []
      },
      {
        "name": "getProp",
        "parameterTypes": []
      },
      {
        "name": "getReadonlyOn",
        "parameterTypes": []
      },
      {
        "name": "getRequiredOn",
        "parameterTypes": []
      },
      {
        "name": "getSelectFirst",
        "parameterTypes": []
      },
      {
        "name": "getSelection",
        "parameterTypes": []
      },
      {
        "name": "getSourceUrl",
        "parameterTypes": []
      },
      {
        "name": "getStdDomain",
        "parameterTypes": []
      },
      {
        "name": "getUploadUrl",
        "parameterTypes": []
      },
      {
        "name": "getValidator",
        "parameterTypes": []
      },
      {
        "name": "getView",
        "parameterTypes": []
      },
      {
        "name": "getVisibleOn",
        "parameterTypes": []
      },
      {
        "name": "getWidth",
        "parameterTypes": []
      },
      {
        "name": "hasValidator",
        "parameterTypes": []
      },
      {
        "name": "isCustom",
        "parameterTypes": []
      },
      {
        "name": "isJoinValues",
        "parameterTypes": []
      },
      {
        "name": "isMultiValue",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setBizObjName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCharCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClassNameExpr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setControl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCustom",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDefaultValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDepends",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setDesc",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisabledOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDisplayProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEditMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilterOp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGenControl",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setHint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHref",
        "parameterTypes": [
          "io.nop.xui.model.UiHrefModel"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setJoinValues",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMatchRegexp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxUploadSize",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setMinLength",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinRows",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMultiValue",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPlaceholder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReadonlyOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRequiredOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectFirst",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "setSourceUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStdDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUploadUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidator",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setView",
        "parameterTypes": [
          "io.nop.xui.model.UiRefViewModel"
        ]
      },
      {
        "name": "setVisibleOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWidth",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiDisplayMeta",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xui.model.UiFormCellModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getCollapseTitle",
        "parameterTypes": []
      },
      {
        "name": "getMandatory",
        "parameterTypes": []
      },
      {
        "name": "getReadonly",
        "parameterTypes": []
      },
      {
        "name": "getSubmitOnChange",
        "parameterTypes": []
      },
      {
        "name": "getTitlePosition",
        "parameterTypes": []
      },
      {
        "name": "isNotSubmit",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setCollapseTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNotSubmit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReadonly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSubmitOnChange",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTitlePosition",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiFormCellModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addCell",
        "parameterTypes": [
          "io.nop.xui.model.UiFormCellModel"
        ]
      },
      {
        "name": "addRule",
        "parameterTypes": [
          "io.nop.xui.model.UiFormRuleModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xui.model.UiFormModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getApi",
        "parameterTypes": []
      },
      {
        "name": "getAsyncApi",
        "parameterTypes": []
      },
      {
        "name": "getBodyClassName",
        "parameterTypes": []
      },
      {
        "name": "getCanAccessSuperData",
        "parameterTypes": []
      },
      {
        "name": "getCell",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCells",
        "parameterTypes": []
      },
      {
        "name": "getCheckInterval",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getData",
        "parameterTypes": []
      },
      {
        "name": "getEditMode",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getInheritData",
        "parameterTypes": []
      },
      {
        "name": "getInitApi",
        "parameterTypes": []
      },
      {
        "name": "getInitAsyncApi",
        "parameterTypes": []
      },
      {
        "name": "getInitCheckInterval",
        "parameterTypes": []
      },
      {
        "name": "getInitFetch",
        "parameterTypes": []
      },
      {
        "name": "getInitFetchOn",
        "parameterTypes": []
      },
      {
        "name": "getInterval",
        "parameterTypes": []
      },
      {
        "name": "getLabel",
        "parameterTypes": []
      },
      {
        "name": "getLabelAlign",
        "parameterTypes": []
      },
      {
        "name": "getLabelWidth",
        "parameterTypes": []
      },
      {
        "name": "getLayout",
        "parameterTypes": []
      },
      {
        "name": "getLayoutControl",
        "parameterTypes": []
      },
      {
        "name": "getLayoutMode",
        "parameterTypes": []
      },
      {
        "name": "getMessages",
        "parameterTypes": []
      },
      {
        "name": "getObjMeta",
        "parameterTypes": []
      },
      {
        "name": "getPanelClassName",
        "parameterTypes": []
      },
      {
        "name": "getPersistData",
        "parameterTypes": []
      },
      {
        "name": "getPersistDataKeys",
        "parameterTypes": []
      },
      {
        "name": "getPreventEnterSubmit",
        "parameterTypes": []
      },
      {
        "name": "getPromptPageLeave",
        "parameterTypes": []
      },
      {
        "name": "getRedirect",
        "parameterTypes": []
      },
      {
        "name": "getReload",
        "parameterTypes": []
      },
      {
        "name": "getRenderer",
        "parameterTypes": []
      },
      {
        "name": "getResetAfterSubmit",
        "parameterTypes": []
      },
      {
        "name": "getRule",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getRules",
        "parameterTypes": []
      },
      {
        "name": "getSelection",
        "parameterTypes": []
      },
      {
        "name": "getSilentPolling",
        "parameterTypes": []
      },
      {
        "name": "getSize",
        "parameterTypes": []
      },
      {
        "name": "getStopAutoRefreshWhen",
        "parameterTypes": []
      },
      {
        "name": "getSubmitOnChange",
        "parameterTypes": []
      },
      {
        "name": "getSubmitOnInit",
        "parameterTypes": []
      },
      {
        "name": "getSubmitText",
        "parameterTypes": []
      },
      {
        "name": "getTarget",
        "parameterTypes": []
      },
      {
        "name": "getTitle",
        "parameterTypes": []
      },
      {
        "name": "getWrapWithPanel",
        "parameterTypes": []
      },
      {
        "name": "hasCell",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasCells",
        "parameterTypes": []
      },
      {
        "name": "hasData",
        "parameterTypes": []
      },
      {
        "name": "hasMessages",
        "parameterTypes": []
      },
      {
        "name": "hasRule",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasRules",
        "parameterTypes": []
      },
      {
        "name": "keySet_cells",
        "parameterTypes": []
      },
      {
        "name": "keySet_rules",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setApi",
        "parameterTypes": [
          "io.nop.xui.model.UiApiModel"
        ]
      },
      {
        "name": "setAsyncApi",
        "parameterTypes": [
          "io.nop.xui.model.UiApiModel"
        ]
      },
      {
        "name": "setBodyClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCanAccessSuperData",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCells",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCheckInterval",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setEditMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInheritData",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setInitApi",
        "parameterTypes": [
          "io.nop.xui.model.UiApiModel"
        ]
      },
      {
        "name": "setInitAsyncApi",
        "parameterTypes": [
          "io.nop.xui.model.UiApiModel"
        ]
      },
      {
        "name": "setInitCheckInterval",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setInitFetch",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setInitFetchOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInterval",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLabelAlign",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLabelWidth",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLayout",
        "parameterTypes": [
          "io.nop.xlang.xmeta.layout.LayoutModel"
        ]
      },
      {
        "name": "setLayoutControl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLayoutMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMessages",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setObjMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPanelClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPersistData",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPersistDataKeys",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setPreventEnterSubmit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPromptPageLeave",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRedirect",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReload",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRenderer",
        "parameterTypes": [
          "io.nop.core.lang.eval.IEvalAction"
        ]
      },
      {
        "name": "setResetAfterSubmit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRules",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "setSilentPolling",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setStopAutoRefreshWhen",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSubmitOnChange",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSubmitOnInit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSubmitText",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTarget",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWrapWithPanel",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiFormModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xui.model.UiGridColModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAlign",
        "parameterTypes": []
      },
      {
        "name": "getBreakpoint",
        "parameterTypes": []
      },
      {
        "name": "getFixed",
        "parameterTypes": []
      },
      {
        "name": "getGroupName",
        "parameterTypes": []
      },
      {
        "name": "getLabelClassName",
        "parameterTypes": []
      },
      {
        "name": "isHidden",
        "parameterTypes": []
      },
      {
        "name": "isMandatory",
        "parameterTypes": []
      },
      {
        "name": "isReadonly",
        "parameterTypes": []
      },
      {
        "name": "isSortable",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAlign",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setBreakpoint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFixed",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGroupName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHidden",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabelClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMandatory",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setReadonly",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSortable",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiGridColModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addCol",
        "parameterTypes": [
          "io.nop.xui.model.UiGridColModel"
        ]
      },
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xui.model.UiGridModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAffixHeader",
        "parameterTypes": []
      },
      {
        "name": "getAffixRow",
        "parameterTypes": []
      },
      {
        "name": "getAffixRowClassName",
        "parameterTypes": []
      },
      {
        "name": "getAffixRowClassNameExpr",
        "parameterTypes": []
      },
      {
        "name": "getApi",
        "parameterTypes": []
      },
      {
        "name": "getCheckOnItemClick",
        "parameterTypes": []
      },
      {
        "name": "getClassName",
        "parameterTypes": []
      },
      {
        "name": "getCol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getCols",
        "parameterTypes": []
      },
      {
        "name": "getColumnNum",
        "parameterTypes": []
      },
      {
        "name": "getCombineFromIndex",
        "parameterTypes": []
      },
      {
        "name": "getCombineNum",
        "parameterTypes": []
      },
      {
        "name": "getDisplayName",
        "parameterTypes": []
      },
      {
        "name": "getEditMode",
        "parameterTypes": []
      },
      {
        "name": "getFilter",
        "parameterTypes": []
      },
      {
        "name": "getFooterClassName",
        "parameterTypes": []
      },
      {
        "name": "getHeaderClassName",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getInitApi",
        "parameterTypes": []
      },
      {
        "name": "getItemCheckableOn",
        "parameterTypes": []
      },
      {
        "name": "getMultiple",
        "parameterTypes": []
      },
      {
        "name": "getObjMeta",
        "parameterTypes": []
      },
      {
        "name": "getPlaceholder",
        "parameterTypes": []
      },
      {
        "name": "getPrefixRow",
        "parameterTypes": []
      },
      {
        "name": "getPrefixRowClassName",
        "parameterTypes": []
      },
      {
        "name": "getPrefixRowClassNameExpr",
        "parameterTypes": []
      },
      {
        "name": "getRowClassName",
        "parameterTypes": []
      },
      {
        "name": "getRowClassNameExpr",
        "parameterTypes": []
      },
      {
        "name": "getSaveOrderApi",
        "parameterTypes": []
      },
      {
        "name": "getSelectable",
        "parameterTypes": []
      },
      {
        "name": "getSelection",
        "parameterTypes": []
      },
      {
        "name": "getSortable",
        "parameterTypes": []
      },
      {
        "name": "getStopAutoRefreshWhen",
        "parameterTypes": []
      },
      {
        "name": "getToolbarClassName",
        "parameterTypes": []
      },
      {
        "name": "hasCol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hasCols",
        "parameterTypes": []
      },
      {
        "name": "keySet_cols",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAffixHeader",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAffixRow",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAffixRowClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAffixRowClassNameExpr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setApi",
        "parameterTypes": [
          "io.nop.xui.model.UiApiModel"
        ]
      },
      {
        "name": "setCheckOnItemClick",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCols",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setColumnNum",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setCombineFromIndex",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setCombineNum",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEditMode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilter",
        "parameterTypes": [
          "io.nop.core.lang.xml.XNode"
        ]
      },
      {
        "name": "setFooterClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeaderClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitApi",
        "parameterTypes": [
          "io.nop.xui.model.UiApiModel"
        ]
      },
      {
        "name": "setItemCheckableOn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMultiple",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setObjMeta",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlaceholder",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefixRow",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPrefixRowClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefixRowClassNameExpr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRowClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRowClassNameExpr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSaveOrderApi",
        "parameterTypes": [
          "io.nop.xui.model.UiApiModel"
        ]
      },
      {
        "name": "setSelectable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSelection",
        "parameterTypes": [
          "io.nop.api.core.beans.FieldSelectionBean"
        ]
      },
      {
        "name": "setSortable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setStopAutoRefreshWhen",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setToolbarClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiGridModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xui.model.UiImportModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getAs",
        "parameterTypes": []
      },
      {
        "name": "getFrom",
        "parameterTypes": []
      },
      {
        "name": "getName",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setAs",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFrom",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiImportModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "copyTo",
        "parameterTypes": [
          "io.nop.xui.model.UiRefViewModel"
        ]
      },
      {
        "name": "freeze",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "getButtonLabel",
        "parameterTypes": []
      },
      {
        "name": "getForm",
        "parameterTypes": []
      },
      {
        "name": "getGrid",
        "parameterTypes": []
      },
      {
        "name": "getPage",
        "parameterTypes": []
      },
      {
        "name": "getPath",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "outputJson",
        "parameterTypes": [
          "io.nop.core.lang.json.IJsonHandler"
        ]
      },
      {
        "name": "setButtonLabel",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForm",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setGrid",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "io.nop.xui.model._gen._UiRefViewModel",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "LOG"
      }
    ],
    "methods": [
      {
        "name": "appendFilterProps",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      },
      {
        "name": "getControlTag",
        "parameterTypes": [
          "io.nop.xlang.xpl.IXplTagLib",
          "io.nop.xui.model.IUiDisplayMeta",
          "io.nop.xlang.xmeta.IObjPropMeta",
          "io.nop.xlang.xmeta.IObjMeta",
          "java.lang.String"
        ]
      },
      {
        "name": "getControlTag",
        "parameterTypes": [
          "io.nop.xlang.xpl.IXplTagLib",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "getFormProps",
        "parameterTypes": [
          "io.nop.xui.model.UiFormModel",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "getFormSelection",
        "parameterTypes": [
          "io.nop.xui.model.UiFormModel",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "getListSelection",
        "parameterTypes": [
          "io.nop.xui.model.UiGridModel",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "getMaxUploadSize",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjPropMeta",
          "io.nop.xui.model.IUiDisplayMeta"
        ]
      },
      {
        "name": "getRefBizObjName",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjPropMeta"
        ]
      },
      {
        "name": "getRelationPickerUrl",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjPropMeta",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "getRelationPickerUrl",
        "parameterTypes": [
          "io.nop.xui.model.IUiDisplayMeta",
          "io.nop.xlang.xmeta.IObjPropMeta",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "getRelationProp",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjPropMeta",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "getRelationViewUrl",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjPropMeta",
          "io.nop.xlang.xmeta.IObjMeta"
        ]
      },
      {
        "name": "isRelationProp",
        "parameterTypes": [
          "io.nop.xlang.xmeta.IObjPropMeta"
        ]
      }
    ],
    "name": "io.nop.xui.utils.XuiHelper",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.io.Serializable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "FALSE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TRUE"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "TYPE"
      }
    ],
    "methods": [
      {
        "name": "booleanValue",
        "parameterTypes": []
      },
      {
        "name": "compare",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "logicalAnd",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "logicalOr",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "logicalXor",
        "parameterTypes": [
          "boolean",
          "boolean"
        ]
      },
      {
        "name": "parseBoolean",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ],
    "name": "java.lang.Boolean",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ],
    "name": "java.lang.Comparable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.Enum"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getDeclaringClass",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "name",
        "parameterTypes": []
      },
      {
        "name": "ordinal",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Class",
          "java.lang.String"
        ]
      }
    ],
    "name": "java.lang.Enum",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.lang.Exception",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "iterator",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Iterable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Object",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.lang.RuntimeException",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "CASE_INSENSITIVE_ORDER"
      }
    ],
    "methods": [
      {
        "name": "charAt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "chars",
        "parameterTypes": []
      },
      {
        "name": "codePointAt",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "codePointBefore",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "codePointCount",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "codePoints",
        "parameterTypes": []
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "compareToIgnoreCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "concat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "contentEquals",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "contentEquals",
        "parameterTypes": [
          "java.lang.StringBuffer"
        ]
      },
      {
        "name": "copyValueOf",
        "parameterTypes": [
          "[C"
        ]
      },
      {
        "name": "copyValueOf",
        "parameterTypes": [
          "[C",
          "int",
          "int"
        ]
      },
      {
        "name": "describeConstable",
        "parameterTypes": []
      },
      {
        "name": "endsWith",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "equalsIgnoreCase",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "format",
        "parameterTypes": [
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "format",
        "parameterTypes": [
          "java.util.Locale",
          "java.lang.String",
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "formatted",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": []
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "int",
          "int",
          "[B",
          "int"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "getBytes",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "getChars",
        "parameterTypes": [
          "int",
          "int",
          "[C",
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indent",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "intern",
        "parameterTypes": []
      },
      {
        "name": "isBlank",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.CharSequence",
          "[Ljava.lang.CharSequence;"
        ]
      },
      {
        "name": "join",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.Iterable"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "length",
        "parameterTypes": []
      },
      {
        "name": "lines",
        "parameterTypes": []
      },
      {
        "name": "matches",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "offsetByCodePoints",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "regionMatches",
        "parameterTypes": [
          "boolean",
          "int",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "regionMatches",
        "parameterTypes": [
          "int",
          "java.lang.String",
          "int",
          "int"
        ]
      },
      {
        "name": "repeat",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "char",
          "char"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "replaceFirst",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "resolveConstantDesc",
        "parameterTypes": [
          "java.lang.invoke.MethodHandles$Lookup"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "split",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "splitWithDelimiters",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "startsWith",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "startsWith",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      },
      {
        "name": "strip",
        "parameterTypes": []
      },
      {
        "name": "stripIndent",
        "parameterTypes": []
      },
      {
        "name": "stripLeading",
        "parameterTypes": []
      },
      {
        "name": "stripTrailing",
        "parameterTypes": []
      },
      {
        "name": "subSequence",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "substring",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "substring",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toCharArray",
        "parameterTypes": []
      },
      {
        "name": "toLowerCase",
        "parameterTypes": []
      },
      {
        "name": "toLowerCase",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "toUpperCase",
        "parameterTypes": []
      },
      {
        "name": "toUpperCase",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "transform",
        "parameterTypes": [
          "java.util.function.Function"
        ]
      },
      {
        "name": "translateEscapes",
        "parameterTypes": []
      },
      {
        "name": "trim",
        "parameterTypes": []
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "[C"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "[C",
          "int",
          "int"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "char"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "double"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "float"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "long"
        ]
      }
    ],
    "name": "java.lang.String",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addSuppressed",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "fillInStackTrace",
        "parameterTypes": []
      },
      {
        "name": "getCause",
        "parameterTypes": []
      },
      {
        "name": "getLocalizedMessage",
        "parameterTypes": []
      },
      {
        "name": "getMessage",
        "parameterTypes": []
      },
      {
        "name": "getStackTrace",
        "parameterTypes": []
      },
      {
        "name": "getSuppressed",
        "parameterTypes": []
      },
      {
        "name": "initCause",
        "parameterTypes": [
          "java.lang.Throwable"
        ]
      },
      {
        "name": "printStackTrace",
        "parameterTypes": []
      },
      {
        "name": "printStackTrace",
        "parameterTypes": [
          "java.io.PrintStream"
        ]
      },
      {
        "name": "printStackTrace",
        "parameterTypes": [
          "java.io.PrintWriter"
        ]
      },
      {
        "name": "setStackTrace",
        "parameterTypes": [
          "[Ljava.lang.StackTraceElement;"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.Throwable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "annotationType",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.annotation.Annotation",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "describeConstable",
        "parameterTypes": []
      }
    ],
    "name": "java.lang.constant.Constable",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.lang.reflect.Type",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "EPOCH"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MAX"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "MIN"
      }
    ],
    "methods": [
      {
        "name": "adjustInto",
        "parameterTypes": [
          "java.time.temporal.Temporal"
        ]
      },
      {
        "name": "atStartOfDay",
        "parameterTypes": []
      },
      {
        "name": "atStartOfDay",
        "parameterTypes": [
          "java.time.ZoneId"
        ]
      },
      {
        "name": "atTime",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "atTime",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "atTime",
        "parameterTypes": [
          "int",
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "atTime",
        "parameterTypes": [
          "java.time.LocalTime"
        ]
      },
      {
        "name": "atTime",
        "parameterTypes": [
          "java.time.OffsetTime"
        ]
      },
      {
        "name": "compareTo",
        "parameterTypes": [
          "java.time.chrono.ChronoLocalDate"
        ]
      },
      {
        "name": "datesUntil",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      },
      {
        "name": "datesUntil",
        "parameterTypes": [
          "java.time.LocalDate",
          "java.time.Period"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "format",
        "parameterTypes": [
          "java.time.format.DateTimeFormatter"
        ]
      },
      {
        "name": "from",
        "parameterTypes": [
          "java.time.temporal.TemporalAccessor"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.time.temporal.TemporalField"
        ]
      },
      {
        "name": "getChronology",
        "parameterTypes": []
      },
      {
        "name": "getDayOfMonth",
        "parameterTypes": []
      },
      {
        "name": "getDayOfWeek",
        "parameterTypes": []
      },
      {
        "name": "getDayOfYear",
        "parameterTypes": []
      },
      {
        "name": "getEra",
        "parameterTypes": []
      },
      {
        "name": "getLong",
        "parameterTypes": [
          "java.time.temporal.TemporalField"
        ]
      },
      {
        "name": "getMonth",
        "parameterTypes": []
      },
      {
        "name": "getMonthValue",
        "parameterTypes": []
      },
      {
        "name": "getYear",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isAfter",
        "parameterTypes": [
          "java.time.chrono.ChronoLocalDate"
        ]
      },
      {
        "name": "isBefore",
        "parameterTypes": [
          "java.time.chrono.ChronoLocalDate"
        ]
      },
      {
        "name": "isEqual",
        "parameterTypes": [
          "java.time.chrono.ChronoLocalDate"
        ]
      },
      {
        "name": "isLeapYear",
        "parameterTypes": []
      },
      {
        "name": "isSupported",
        "parameterTypes": [
          "java.time.temporal.TemporalField"
        ]
      },
      {
        "name": "isSupported",
        "parameterTypes": [
          "java.time.temporal.TemporalUnit"
        ]
      },
      {
        "name": "lengthOfMonth",
        "parameterTypes": []
      },
      {
        "name": "lengthOfYear",
        "parameterTypes": []
      },
      {
        "name": "minus",
        "parameterTypes": [
          "java.time.temporal.TemporalAmount"
        ]
      },
      {
        "name": "minus",
        "parameterTypes": [
          "long",
          "java.time.temporal.TemporalUnit"
        ]
      },
      {
        "name": "minusDays",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "minusMonths",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "minusWeeks",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "minusYears",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "now",
        "parameterTypes": []
      },
      {
        "name": "now",
        "parameterTypes": [
          "java.time.Clock"
        ]
      },
      {
        "name": "now",
        "parameterTypes": [
          "java.time.ZoneId"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "int",
          "int",
          "int"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "int",
          "java.time.Month",
          "int"
        ]
      },
      {
        "name": "ofEpochDay",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "ofInstant",
        "parameterTypes": [
          "java.time.Instant",
          "java.time.ZoneId"
        ]
      },
      {
        "name": "ofYearDay",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence"
        ]
      },
      {
        "name": "parse",
        "parameterTypes": [
          "java.lang.CharSequence",
          "java.time.format.DateTimeFormatter"
        ]
      },
      {
        "name": "plus",
        "parameterTypes": [
          "java.time.temporal.TemporalAmount"
        ]
      },
      {
        "name": "plus",
        "parameterTypes": [
          "long",
          "java.time.temporal.TemporalUnit"
        ]
      },
      {
        "name": "plusDays",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "plusMonths",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "plusWeeks",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "plusYears",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "query",
        "parameterTypes": [
          "java.time.temporal.TemporalQuery"
        ]
      },
      {
        "name": "range",
        "parameterTypes": [
          "java.time.temporal.TemporalField"
        ]
      },
      {
        "name": "toEpochDay",
        "parameterTypes": []
      },
      {
        "name": "toEpochSecond",
        "parameterTypes": [
          "java.time.LocalTime",
          "java.time.ZoneOffset"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "until",
        "parameterTypes": [
          "java.time.chrono.ChronoLocalDate"
        ]
      },
      {
        "name": "until",
        "parameterTypes": [
          "java.time.temporal.Temporal",
          "java.time.temporal.TemporalUnit"
        ]
      },
      {
        "name": "with",
        "parameterTypes": [
          "java.time.temporal.TemporalAdjuster"
        ]
      },
      {
        "name": "with",
        "parameterTypes": [
          "java.time.temporal.TemporalField",
          "long"
        ]
      },
      {
        "name": "withDayOfMonth",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "withDayOfYear",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "withMonth",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "withYear",
        "parameterTypes": [
          "int"
        ]
      }
    ],
    "name": "java.time.LocalDate",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "toString",
        "parameterTypes": []
      }
    ],
    "name": "java.util.AbstractCollection",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      }
    ],
    "name": "java.util.AbstractList",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toString",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.AbstractMap",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ],
    "name": "java.util.AbstractSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "addFirst",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addLast",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "ensureCapacity",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.Consumer"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "getFirst",
        "parameterTypes": []
      },
      {
        "name": "getLast",
        "parameterTypes": []
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeFirst",
        "parameterTypes": []
      },
      {
        "name": "removeIf",
        "parameterTypes": [
          "java.util.function.Predicate"
        ]
      },
      {
        "name": "removeLast",
        "parameterTypes": []
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.UnaryOperator"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "sort",
        "parameterTypes": [
          "java.util.Comparator"
        ]
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "trimToSize",
        "parameterTypes": []
      }
    ],
    "name": "java.util.ArrayList",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.Collection",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.util.Collections$EmptyList",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "compute",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "computeIfAbsent",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.Function"
        ]
      },
      {
        "name": "computeIfPresent",
        "parameterTypes": [
          "java.lang.Object",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrDefault",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "merge",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "newHashMap",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "putIfAbsent",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replace",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.HashMap",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "clone",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "newHashSet",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.HashSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "forEach",
        "parameterTypes": [
          "java.util.function.BiConsumer"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getOrDefault",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "newLinkedHashMap",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "putFirst",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putLast",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "replaceAll",
        "parameterTypes": [
          "java.util.function.BiFunction"
        ]
      },
      {
        "name": "reversed",
        "parameterTypes": []
      },
      {
        "name": "sequencedEntrySet",
        "parameterTypes": []
      },
      {
        "name": "sequencedKeySet",
        "parameterTypes": []
      },
      {
        "name": "sequencedValues",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.LinkedHashMap",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "addFirst",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addLast",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "getFirst",
        "parameterTypes": []
      },
      {
        "name": "getLast",
        "parameterTypes": []
      },
      {
        "name": "newLinkedHashSet",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "removeFirst",
        "parameterTypes": []
      },
      {
        "name": "removeLast",
        "parameterTypes": []
      },
      {
        "name": "reversed",
        "parameterTypes": []
      },
      {
        "name": "spliterator",
        "parameterTypes": []
      }
    ],
    "name": "java.util.LinkedHashSet",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "int",
          "java.util.Collection"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "indexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "lastIndexOf",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "listIterator",
        "parameterTypes": []
      },
      {
        "name": "listIterator",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "set",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "subList",
        "parameterTypes": [
          "int",
          "int"
        ]
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.List",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "containsKey",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsValue",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "entry",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "entrySet",
        "parameterTypes": []
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "get",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "keySet",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "ofEntries",
        "parameterTypes": [
          "[Ljava.util.Map$Entry;"
        ]
      },
      {
        "name": "put",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "putAll",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "values",
        "parameterTypes": []
      }
    ],
    "name": "java.util.Map",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.util.RandomAccess",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "reversed",
        "parameterTypes": []
      }
    ],
    "name": "java.util.SequencedCollection",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "add",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "addAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "clear",
        "parameterTypes": []
      },
      {
        "name": "contains",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "containsAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "copyOf",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "equals",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "hashCode",
        "parameterTypes": []
      },
      {
        "name": "isEmpty",
        "parameterTypes": []
      },
      {
        "name": "iterator",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": []
      },
      {
        "name": "of",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object",
          "java.lang.Object"
        ]
      },
      {
        "name": "remove",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "removeAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "retainAll",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "size",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": []
      },
      {
        "name": "toArray",
        "parameterTypes": [
          "[Ljava.lang.Object;"
        ]
      }
    ],
    "name": "java.util.Set",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "java.util.TreeMap$Values",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [],
    "name": "network.proxy.dao.entity.PortMapping",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_IDS"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PK_PROP_NAMES"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_clientIp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_clientPort"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_enabled"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_protocol"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_serverPort"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_ID_updateTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_addTime"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_clientIp"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_clientPort"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_deleted"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_enabled"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_id"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_protocol"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_serverPort"
      },
      {
        "allowUnsafeAccess": false,
        "allowWrite": false,
        "name": "PROP_NAME_updateTime"
      }
    ],
    "methods": [
      {
        "name": "cloneInstance",
        "parameterTypes": []
      },
      {
        "name": "getAddTime",
        "parameterTypes": []
      },
      {
        "name": "getClientIp",
        "parameterTypes": []
      },
      {
        "name": "getClientPort",
        "parameterTypes": []
      },
      {
        "name": "getDeleted",
        "parameterTypes": []
      },
      {
        "name": "getEnabled",
        "parameterTypes": []
      },
      {
        "name": "getId",
        "parameterTypes": []
      },
      {
        "name": "getProtocol",
        "parameterTypes": []
      },
      {
        "name": "getServerPort",
        "parameterTypes": []
      },
      {
        "name": "getUpdateTime",
        "parameterTypes": []
      },
      {
        "name": "newInstance",
        "parameterTypes": []
      },
      {
        "name": "orm_entityName",
        "parameterTypes": []
      },
      {
        "name": "orm_id",
        "parameterTypes": []
      },
      {
        "name": "orm_internalSet",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "orm_isPrimary",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "orm_propIdBound",
        "parameterTypes": []
      },
      {
        "name": "orm_propName",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "orm_propValue",
        "parameterTypes": [
          "int",
          "java.lang.Object"
        ]
      },
      {
        "name": "setAddTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      },
      {
        "name": "setClientIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDeleted",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setServerPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setServerPort",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUpdateTime",
        "parameterTypes": [
          "java.time.LocalDateTime"
        ]
      }
    ],
    "name": "network.proxy.dao.entity._gen._PortMapping",
    "unsafeAllocated": false
  },
  {
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "allPublicConstructors": true,
    "allPublicMethods": true,
    "fields": [],
    "methods": [
      {
        "name": "defaultPrepareSave",
        "parameterTypes": [
          "io.nop.biz.crud.EntityData",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "disabled",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      },
      {
        "name": "enabled",
        "parameterTypes": [
          "java.lang.String",
          "io.nop.core.context.IServiceContext"
        ]
      }
    ],
    "name": "network.proxy.service.entity.PortMappingBizModel",
    "unsafeAllocated": false
  }
]